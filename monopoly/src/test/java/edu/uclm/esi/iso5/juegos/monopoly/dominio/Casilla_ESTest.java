/*
 * This file was automatically generated by EvoSuite
 * Wed Jun 01 19:22:39 GMT 2016
 */

package edu.uclm.esi.iso5.juegos.monopoly.dominio;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.uclm.esi.iso5.juegos.monopoly.dominio.CajaDeComunidad;
import edu.uclm.esi.iso5.juegos.monopoly.dominio.Carcel;
import edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania;
import edu.uclm.esi.iso5.juegos.monopoly.dominio.Estacion;
import edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto;
import edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador;
import edu.uclm.esi.iso5.juegos.monopoly.dominio.Parking;
import edu.uclm.esi.iso5.juegos.monopoly.dominio.Salida;
import edu.uclm.esi.iso5.juegos.monopoly.dominio.Suerte;
import edu.uclm.esi.iso5.juegos.monopoly.dominio.Tablero;
import edu.uclm.esi.iso5.juegos.monopoly.dominio.VayaALaCarcel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Casilla_ESTest extends Casilla_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 21 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.setPropietario(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V: root-Branch
   * Goal 3. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.setPropietario(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V: root-Branch in context: 
   * Goal 4. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 27
   * Goal 5. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 28
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 29
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 30
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.setPropietario(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V: Line 99
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.setPropietario(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V: Line 100
   * Goal 10. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.setPropietario(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V
   * Goal 11. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.setPropietario(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V
   * Goal 12. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:27 - ReplaceVariable nombre -> nombre
   * Goal 13. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - ReplaceVariable posicion -> posicion
   * Goal 14. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - InsertUnaryOp Negation of posicion
   * Goal 15. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - InsertUnaryOp IINC 1 posicion
   * Goal 16. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - InsertUnaryOp IINC -1 posicion
   * Goal 17. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 0
   * Goal 18. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 1
   * Goal 19. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> -1
   * Goal 20. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 5
   * Goal 21. Weak Mutation 9: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 7
   */

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Parking parking0 = new Parking(2555);
      parking0.setPropietario((Jugador) null);
      assertEquals(2555, parking0.getPosicion());
  }

  //Test case number: 1
  /*
   * 18 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: root-Branch
   * Goal 2. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:Zero
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 27
   * Goal 4. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 28
   * Goal 5. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 29
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 30
   * Goal 7. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I
   * Goal 8. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I
   * Goal 9. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:27 - ReplaceVariable nombre -> nombre
   * Goal 10. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - ReplaceVariable posicion -> posicion
   * Goal 11. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - InsertUnaryOp Negation of posicion
   * Goal 12. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - InsertUnaryOp IINC 1 posicion
   * Goal 13. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - InsertUnaryOp IINC -1 posicion
   * Goal 14. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 0
   * Goal 15. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 1
   * Goal 16. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> -1
   * Goal 17. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 5
   * Goal 18. Weak Mutation 9: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 7
   */

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Compania compania0 = new Compania("", 810.973, 29);
      Jugador jugador0 = new Jugador("");
      compania0.propietario = jugador0;
      compania0.operaciones(jugador0);
      assertEquals(29, compania0.getPosicion());
  }

  //Test case number: 2
  /*
   * 18 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: root-Branch
   * Goal 2. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:Positive
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 27
   * Goal 4. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 28
   * Goal 5. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 29
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 30
   * Goal 7. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I
   * Goal 8. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I
   * Goal 9. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:27 - ReplaceVariable nombre -> nombre
   * Goal 10. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - ReplaceVariable posicion -> posicion
   * Goal 11. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - InsertUnaryOp Negation of posicion
   * Goal 12. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - InsertUnaryOp IINC 1 posicion
   * Goal 13. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - InsertUnaryOp IINC -1 posicion
   * Goal 14. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 0
   * Goal 15. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 1
   * Goal 16. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> -1
   * Goal 17. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 5
   * Goal 18. Weak Mutation 9: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 7
   */

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Compania compania0 = new Compania("", (-1.0), 29);
      Jugador jugador0 = new Jugador("");
      compania0.operaciones(jugador0);
      assertEquals(29, compania0.getPosicion());
  }

  //Test case number: 3
  /*
   * 27 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: root-Branch
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.getTablero()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;: root-Branch
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.getTablero()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla:getTablero()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;
   * Goal 5. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: root-Branch in context: 
   * Goal 6. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.getTablero()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;:NonNull:edu.uclm.esi.iso5.juegos.monopoly.dominio.Tablero:getJugadorConElTurno()I:Negative
   * Goal 7. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.getTablero()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;:NonNull:edu.uclm.esi.iso5.juegos.monopoly.dominio.Tablero:partidaEmpezada()Z:True
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 27
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 28
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 29
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 30
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.getTablero()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;: Line 87
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: Line 79
   * Goal 14. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: Line 80
   * Goal 15. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.getTablero()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;
   * Goal 16. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.getTablero()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;
   * Goal 17. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:27 - ReplaceVariable nombre -> nombre
   * Goal 18. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - ReplaceVariable posicion -> posicion
   * Goal 19. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - InsertUnaryOp Negation of posicion
   * Goal 20. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - InsertUnaryOp IINC 1 posicion
   * Goal 21. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - InsertUnaryOp IINC -1 posicion
   * Goal 22. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 0
   * Goal 23. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 1
   * Goal 24. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> -1
   * Goal 25. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 5
   * Goal 26. Weak Mutation 9: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 7
   * Goal 27. Weak Mutation 76: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V:79 - ReplaceVariable tablero -> tablero
   */

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      VayaALaCarcel vayaALaCarcel0 = new VayaALaCarcel(26);
      Tablero tablero0 = new Tablero();
      vayaALaCarcel0.tablero = tablero0;
      tablero0.empezarPartida();
      vayaALaCarcel0.getTablero();
      assertEquals(26, vayaALaCarcel0.getPosicion());
  }

  //Test case number: 4
  /*
   * 29 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: root-Branch
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.getTablero()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;: root-Branch
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.getTablero()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla:getTablero()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;
   * Goal 5. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: root-Branch in context: 
   * Goal 6. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.getTablero()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;:NonNull:edu.uclm.esi.iso5.juegos.monopoly.dominio.Tablero:getJugadorConElTurno()I:Negative
   * Goal 7. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.getTablero()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;:NonNull:edu.uclm.esi.iso5.juegos.monopoly.dominio.Tablero:partidaEmpezada()Z:False
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 27
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 28
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 29
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 30
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.getTablero()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;: Line 87
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: Line 79
   * Goal 14. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: Line 80
   * Goal 15. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.getTablero()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;
   * Goal 16. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V
   * Goal 17. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.getTablero()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;
   * Goal 18. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V
   * Goal 19. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:27 - ReplaceVariable nombre -> nombre
   * Goal 20. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - ReplaceVariable posicion -> posicion
   * Goal 21. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - InsertUnaryOp Negation of posicion
   * Goal 22. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - InsertUnaryOp IINC 1 posicion
   * Goal 23. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - InsertUnaryOp IINC -1 posicion
   * Goal 24. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 0
   * Goal 25. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 1
   * Goal 26. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> -1
   * Goal 27. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 5
   * Goal 28. Weak Mutation 9: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 7
   * Goal 29. Weak Mutation 76: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V:79 - ReplaceVariable tablero -> tablero
   */

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Parking parking0 = new Parking(29);
      Tablero tablero0 = new Tablero();
      parking0.setTablero(tablero0);
      Tablero tablero1 = parking0.getTablero();
      assertNotNull(tablero1);
      assertEquals(29, parking0.getPosicion());
  }

  //Test case number: 5
  /*
   * 25 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.getPropietario()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;: root-Branch
   * Goal 3. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.getPropietario()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla:getPropietario()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;
   * Goal 4. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.getPropietario()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;:NonNull:edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:getCapital()D:Positive
   * Goal 5. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.getPropietario()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;:NonNull:edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:getDeudaConBanca()D:Zero
   * Goal 6. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.getPropietario()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;:NonNull:edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:getSumaDados()I:Zero
   * Goal 7. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.getPropietario()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;:NonNull:edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:getTurnosSinJugar()I:Zero
   * Goal 8. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.getPropietario()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;:NonNull:edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:tieneTarjetaDeSalirDeLaCarcel()Z:False
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 27
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 28
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 29
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 30
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.getPropietario()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;: Line 95
   * Goal 14. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.getPropietario()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;
   * Goal 15. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.getPropietario()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;
   * Goal 16. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:27 - ReplaceVariable nombre -> nombre
   * Goal 17. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - ReplaceVariable posicion -> posicion
   * Goal 18. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - InsertUnaryOp Negation of posicion
   * Goal 19. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - InsertUnaryOp IINC 1 posicion
   * Goal 20. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - InsertUnaryOp IINC -1 posicion
   * Goal 21. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 0
   * Goal 22. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 1
   * Goal 23. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> -1
   * Goal 24. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 5
   * Goal 25. Weak Mutation 9: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 7
   */

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CajaDeComunidad cajaDeComunidad0 = new CajaDeComunidad((-386));
      Jugador jugador0 = new Jugador("");
      cajaDeComunidad0.propietario = jugador0;
      cajaDeComunidad0.getPropietario();
      assertEquals(-386, cajaDeComunidad0.getPosicion());
  }

  //Test case number: 6
  /*
   * 24 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.getPosicion()I: root-Branch
   * Goal 3. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.getPosicion()I: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla:getPosicion()I
   * Goal 4. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.getPosicion()I:Positive
   * Goal 5. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 27
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 28
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 29
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 30
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.getPosicion()I: Line 63
   * Goal 10. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.getPosicion()I
   * Goal 11. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.getPosicion()I
   * Goal 12. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:27 - ReplaceVariable nombre -> nombre
   * Goal 13. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - ReplaceVariable posicion -> posicion
   * Goal 14. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - InsertUnaryOp Negation of posicion
   * Goal 15. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - InsertUnaryOp IINC 1 posicion
   * Goal 16. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - InsertUnaryOp IINC -1 posicion
   * Goal 17. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 0
   * Goal 18. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 1
   * Goal 19. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> -1
   * Goal 20. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 5
   * Goal 21. Weak Mutation 9: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 7
   * Goal 22. Weak Mutation 50: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.getPosicion()I:63 - InsertUnaryOp Negation
   * Goal 23. Weak Mutation 51: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.getPosicion()I:63 - InsertUnaryOp +1
   * Goal 24. Weak Mutation 52: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.getPosicion()I:63 - InsertUnaryOp -1
   */

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Compania compania0 = new Compania("", (-1.0), 29);
      int int0 = compania0.getPosicion();
      assertEquals(29, int0);
  }

  //Test case number: 7
  /*
   * 23 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: root-Branch
   * Goal 2. quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V_java.lang.NullPointerException_IMPLICIT
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 27
   * Goal 4. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 28
   * Goal 5. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 29
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 30
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V: Line 67
   * Goal 8. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V
   * Goal 9. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:27 - ReplaceVariable nombre -> nombre
   * Goal 10. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - ReplaceVariable posicion -> posicion
   * Goal 11. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - InsertUnaryOp Negation of posicion
   * Goal 12. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - InsertUnaryOp IINC 1 posicion
   * Goal 13. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - InsertUnaryOp IINC -1 posicion
   * Goal 14. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 0
   * Goal 15. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 1
   * Goal 16. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> -1
   * Goal 17. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 5
   * Goal 18. Weak Mutation 9: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 7
   * Goal 19. Weak Mutation 53: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V:67 - ReplaceConstant - 0 -> 1
   * Goal 20. Weak Mutation 54: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V:67 - ReplaceVariable i -> posicion
   * Goal 21. Weak Mutation 55: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V:67 - InsertUnaryOp Negation of i
   * Goal 22. Weak Mutation 56: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V:67 - InsertUnaryOp IINC 1 i
   * Goal 23. Weak Mutation 57: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V:67 - InsertUnaryOp IINC -1 i
   */

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Carcel carcel0 = new Carcel(1626);
      Jugador jugador0 = new Jugador((String) null);
      carcel0.jugadores = null;
      // Undeclared exception!
      try { 
        carcel0.quitar(jugador0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla", e);
      }
  }

  //Test case number: 8
  /*
   * 17 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: root-Branch
   * Goal 2. operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I_java.lang.NullPointerException_IMPLICIT
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 27
   * Goal 4. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 28
   * Goal 5. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 29
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 30
   * Goal 7. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I
   * Goal 8. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:27 - ReplaceVariable nombre -> nombre
   * Goal 9. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - ReplaceVariable posicion -> posicion
   * Goal 10. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - InsertUnaryOp Negation of posicion
   * Goal 11. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - InsertUnaryOp IINC 1 posicion
   * Goal 12. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - InsertUnaryOp IINC -1 posicion
   * Goal 13. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 0
   * Goal 14. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 1
   * Goal 15. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> -1
   * Goal 16. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 5
   * Goal 17. Weak Mutation 9: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 7
   */

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CajaDeComunidad cajaDeComunidad0 = new CajaDeComunidad((-1977));
      Jugador jugador0 = new Jugador("/Tfr8b*!");
      // Undeclared exception!
      try { 
        cajaDeComunidad0.operaciones(jugador0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("edu.uclm.esi.iso5.juegos.monopoly.dominio.CajaDeComunidad", e);
      }
  }

  //Test case number: 9
  /*
   * 23 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: root-Branch
   * Goal 2. contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z_java.lang.NullPointerException_IMPLICIT
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 27
   * Goal 4. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 28
   * Goal 5. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 29
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 30
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z: Line 52
   * Goal 8. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z
   * Goal 9. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:27 - ReplaceVariable nombre -> nombre
   * Goal 10. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - ReplaceVariable posicion -> posicion
   * Goal 11. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - InsertUnaryOp Negation of posicion
   * Goal 12. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - InsertUnaryOp IINC 1 posicion
   * Goal 13. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - InsertUnaryOp IINC -1 posicion
   * Goal 14. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 0
   * Goal 15. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 1
   * Goal 16. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> -1
   * Goal 17. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 5
   * Goal 18. Weak Mutation 9: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 7
   * Goal 19. Weak Mutation 29: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z:52 - ReplaceConstant - 0 -> 1
   * Goal 20. Weak Mutation 30: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z:52 - ReplaceVariable i -> posicion
   * Goal 21. Weak Mutation 31: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z:52 - InsertUnaryOp Negation of i
   * Goal 22. Weak Mutation 32: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z:52 - InsertUnaryOp IINC 1 i
   * Goal 23. Weak Mutation 33: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z:52 - InsertUnaryOp IINC -1 i
   */

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Jugador jugador0 = new Jugador("");
      Estacion estacion0 = new Estacion("", 1777.0, 2);
      estacion0.jugadores = null;
      // Undeclared exception!
      try { 
        estacion0.contains(jugador0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla", e);
      }
  }

  //Test case number: 10
  /*
   * 33 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: I10 Branch 1 IFNULL L34 - true
   * Goal 3. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: I10 Branch 1 IFNULL L34 - true in context: 
   * Goal 4. add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I_java.lang.NullPointerException_IMPLICIT
   * Goal 5. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 27
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 28
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 29
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 30
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: Line 33
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: Line 34
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: Line 36
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: Line 37
   * Goal 13. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I
   * Goal 14. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:27 - ReplaceVariable nombre -> nombre
   * Goal 15. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - ReplaceVariable posicion -> posicion
   * Goal 16. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - InsertUnaryOp Negation of posicion
   * Goal 17. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - InsertUnaryOp IINC 1 posicion
   * Goal 18. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - InsertUnaryOp IINC -1 posicion
   * Goal 19. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 0
   * Goal 20. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 1
   * Goal 21. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> -1
   * Goal 22. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 5
   * Goal 23. Weak Mutation 9: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 7
   * Goal 24. Weak Mutation 10: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:33 - ReplaceConstant - 0 -> 1
   * Goal 25. Weak Mutation 11: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:34 - ReplaceVariable cont -> posicion
   * Goal 26. Weak Mutation 12: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:34 - InsertUnaryOp Negation of cont
   * Goal 27. Weak Mutation 13: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:34 - InsertUnaryOp IINC 1 cont
   * Goal 28. Weak Mutation 14: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:34 - InsertUnaryOp IINC -1 cont
   * Goal 29. Weak Mutation 15: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:34 - ReplaceComparisonOperator = null -> != null
   * Goal 30. Weak Mutation 16: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:36 - ReplaceVariable cont -> posicion
   * Goal 31. Weak Mutation 17: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:36 - InsertUnaryOp Negation of cont
   * Goal 32. Weak Mutation 18: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:36 - InsertUnaryOp IINC 1 cont
   * Goal 33. Weak Mutation 19: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:36 - InsertUnaryOp IINC -1 cont
   */

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Suerte suerte0 = new Suerte(4);
      // Undeclared exception!
      try { 
        suerte0.add((Jugador) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla", e);
      }
  }

  //Test case number: 11
  /*
   * 79 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: root-Branch
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: I10 Branch 1 IFNULL L34 - true
   * Goal 4. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V: I9 Branch 5 IF_ICMPGE L67 - true
   * Goal 5. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V: I9 Branch 5 IF_ICMPGE L67 - false
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V: I16 Branch 6 IFNULL L68 - true
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V: I16 Branch 6 IFNULL L68 - false
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V: I22 Branch 7 IF_ACMPNE L68 - true
   * Goal 9. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: root-Branch in context: 
   * Goal 10. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: I10 Branch 1 IFNULL L34 - true in context: 
   * Goal 11. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V: I9 Branch 5 IF_ICMPGE L67 - false in context: 
   * Goal 12. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V: I9 Branch 5 IF_ICMPGE L67 - true in context: 
   * Goal 13. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V: I22 Branch 7 IF_ACMPNE L68 - true in context: 
   * Goal 14. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V: I16 Branch 6 IFNULL L68 - false in context: 
   * Goal 15. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V: I16 Branch 6 IFNULL L68 - true in context: 
   * Goal 16. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:Zero
   * Goal 17. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 27
   * Goal 18. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 28
   * Goal 19. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 29
   * Goal 20. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 30
   * Goal 21. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: Line 33
   * Goal 22. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: Line 34
   * Goal 23. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: Line 36
   * Goal 24. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: Line 37
   * Goal 25. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: Line 38
   * Goal 26. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: Line 39
   * Goal 27. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: Line 43
   * Goal 28. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V: Line 67
   * Goal 29. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V: Line 68
   * Goal 30. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V: Line 72
   * Goal 31. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I
   * Goal 32. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V
   * Goal 33. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I
   * Goal 34. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V
   * Goal 35. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:27 - ReplaceVariable nombre -> nombre
   * Goal 36. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - ReplaceVariable posicion -> posicion
   * Goal 37. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - InsertUnaryOp Negation of posicion
   * Goal 38. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - InsertUnaryOp IINC 1 posicion
   * Goal 39. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - InsertUnaryOp IINC -1 posicion
   * Goal 40. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 0
   * Goal 41. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 1
   * Goal 42. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> -1
   * Goal 43. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 5
   * Goal 44. Weak Mutation 9: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 7
   * Goal 45. Weak Mutation 10: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:33 - ReplaceConstant - 0 -> 1
   * Goal 46. Weak Mutation 11: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:34 - ReplaceVariable cont -> posicion
   * Goal 47. Weak Mutation 12: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:34 - InsertUnaryOp Negation of cont
   * Goal 48. Weak Mutation 13: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:34 - InsertUnaryOp IINC 1 cont
   * Goal 49. Weak Mutation 14: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:34 - InsertUnaryOp IINC -1 cont
   * Goal 50. Weak Mutation 15: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:34 - ReplaceComparisonOperator = null -> != null
   * Goal 51. Weak Mutation 16: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:36 - ReplaceVariable cont -> posicion
   * Goal 52. Weak Mutation 17: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:36 - InsertUnaryOp Negation of cont
   * Goal 53. Weak Mutation 18: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:36 - InsertUnaryOp IINC 1 cont
   * Goal 54. Weak Mutation 19: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:36 - InsertUnaryOp IINC -1 cont
   * Goal 55. Weak Mutation 20: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:36 - ReplaceVariable jugador -> propietario
   * Goal 56. Weak Mutation 21: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:37 - ReplaceVariable jugador -> propietario
   * Goal 57. Weak Mutation 22: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:38 - ReplaceVariable jugador -> propietario
   * Goal 58. Weak Mutation 24: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:39 - ReplaceVariable r -> posicion
   * Goal 59. Weak Mutation 25: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:39 - InsertUnaryOp Negation of r
   * Goal 60. Weak Mutation 26: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:39 - InsertUnaryOp IINC 1 r
   * Goal 61. Weak Mutation 27: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:39 - InsertUnaryOp IINC -1 r
   * Goal 62. Weak Mutation 28: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:43 - ReplaceConstant - 0 -> 1
   * Goal 63. Weak Mutation 53: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V:67 - ReplaceConstant - 0 -> 1
   * Goal 64. Weak Mutation 54: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V:67 - ReplaceVariable i -> posicion
   * Goal 65. Weak Mutation 55: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V:67 - InsertUnaryOp Negation of i
   * Goal 66. Weak Mutation 56: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V:67 - InsertUnaryOp IINC 1 i
   * Goal 67. Weak Mutation 57: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V:67 - InsertUnaryOp IINC -1 i
   * Goal 68. Weak Mutation 58: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V:67 - ReplaceComparisonOperator >= -> -1
   * Goal 69. Weak Mutation 59: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V:67 - ReplaceComparisonOperator >= -> >
   * Goal 70. Weak Mutation 61: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V:68 - ReplaceVariable i -> posicion
   * Goal 71. Weak Mutation 62: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V:68 - InsertUnaryOp Negation of i
   * Goal 72. Weak Mutation 63: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V:68 - InsertUnaryOp IINC 1 i
   * Goal 73. Weak Mutation 64: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V:68 - InsertUnaryOp IINC -1 i
   * Goal 74. Weak Mutation 65: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V:68 - ReplaceComparisonOperator = null -> != null
   * Goal 75. Weak Mutation 66: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V:68 - ReplaceVariable i -> posicion
   * Goal 76. Weak Mutation 67: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V:68 - InsertUnaryOp Negation of i
   * Goal 77. Weak Mutation 68: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V:68 - InsertUnaryOp IINC 1 i
   * Goal 78. Weak Mutation 69: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V:68 - InsertUnaryOp IINC -1 i
   * Goal 79. Weak Mutation 71: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V:68 - ReplaceComparisonOperator != -> ==
   */

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Carcel carcel0 = new Carcel(1626);
      Jugador jugador0 = new Jugador((String) null);
      int int0 = carcel0.add(jugador0);
      assertEquals(0, int0);
      
      carcel0.quitar((Jugador) null);
      assertEquals(1626, carcel0.getPosicion());
  }

  //Test case number: 12
  /*
   * 76 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: I10 Branch 1 IFNULL L34 - true
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V: I9 Branch 5 IF_ICMPGE L67 - false
   * Goal 4. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V: I16 Branch 6 IFNULL L68 - false
   * Goal 5. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V: I22 Branch 7 IF_ACMPNE L68 - false
   * Goal 6. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: I10 Branch 1 IFNULL L34 - true in context: 
   * Goal 7. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V: I9 Branch 5 IF_ICMPGE L67 - false in context: 
   * Goal 8. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V: I22 Branch 7 IF_ACMPNE L68 - false in context: 
   * Goal 9. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V: I16 Branch 6 IFNULL L68 - false in context: 
   * Goal 10. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:Positive
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 27
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 28
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 29
   * Goal 14. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 30
   * Goal 15. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: Line 33
   * Goal 16. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: Line 34
   * Goal 17. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: Line 36
   * Goal 18. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: Line 37
   * Goal 19. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: Line 38
   * Goal 20. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: Line 39
   * Goal 21. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V: Line 67
   * Goal 22. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V: Line 68
   * Goal 23. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V: Line 69
   * Goal 24. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V: Line 70
   * Goal 25. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I
   * Goal 26. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V
   * Goal 27. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I
   * Goal 28. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V
   * Goal 29. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:27 - ReplaceVariable nombre -> nombre
   * Goal 30. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - ReplaceVariable posicion -> posicion
   * Goal 31. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - InsertUnaryOp Negation of posicion
   * Goal 32. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - InsertUnaryOp IINC 1 posicion
   * Goal 33. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - InsertUnaryOp IINC -1 posicion
   * Goal 34. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 0
   * Goal 35. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 1
   * Goal 36. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> -1
   * Goal 37. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 5
   * Goal 38. Weak Mutation 9: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 7
   * Goal 39. Weak Mutation 10: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:33 - ReplaceConstant - 0 -> 1
   * Goal 40. Weak Mutation 11: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:34 - ReplaceVariable cont -> posicion
   * Goal 41. Weak Mutation 12: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:34 - InsertUnaryOp Negation of cont
   * Goal 42. Weak Mutation 13: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:34 - InsertUnaryOp IINC 1 cont
   * Goal 43. Weak Mutation 14: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:34 - InsertUnaryOp IINC -1 cont
   * Goal 44. Weak Mutation 15: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:34 - ReplaceComparisonOperator = null -> != null
   * Goal 45. Weak Mutation 16: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:36 - ReplaceVariable cont -> posicion
   * Goal 46. Weak Mutation 17: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:36 - InsertUnaryOp Negation of cont
   * Goal 47. Weak Mutation 18: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:36 - InsertUnaryOp IINC 1 cont
   * Goal 48. Weak Mutation 19: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:36 - InsertUnaryOp IINC -1 cont
   * Goal 49. Weak Mutation 20: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:36 - ReplaceVariable jugador -> propietario
   * Goal 50. Weak Mutation 21: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:37 - ReplaceVariable jugador -> propietario
   * Goal 51. Weak Mutation 22: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:38 - ReplaceVariable jugador -> propietario
   * Goal 52. Weak Mutation 23: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:39 - ReplaceVariable r -> cont
   * Goal 53. Weak Mutation 25: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:39 - InsertUnaryOp Negation of r
   * Goal 54. Weak Mutation 26: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:39 - InsertUnaryOp IINC 1 r
   * Goal 55. Weak Mutation 27: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:39 - InsertUnaryOp IINC -1 r
   * Goal 56. Weak Mutation 53: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V:67 - ReplaceConstant - 0 -> 1
   * Goal 57. Weak Mutation 54: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V:67 - ReplaceVariable i -> posicion
   * Goal 58. Weak Mutation 55: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V:67 - InsertUnaryOp Negation of i
   * Goal 59. Weak Mutation 56: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V:67 - InsertUnaryOp IINC 1 i
   * Goal 60. Weak Mutation 57: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V:67 - InsertUnaryOp IINC -1 i
   * Goal 61. Weak Mutation 58: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V:67 - ReplaceComparisonOperator >= -> -1
   * Goal 62. Weak Mutation 61: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V:68 - ReplaceVariable i -> posicion
   * Goal 63. Weak Mutation 62: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V:68 - InsertUnaryOp Negation of i
   * Goal 64. Weak Mutation 63: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V:68 - InsertUnaryOp IINC 1 i
   * Goal 65. Weak Mutation 64: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V:68 - InsertUnaryOp IINC -1 i
   * Goal 66. Weak Mutation 65: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V:68 - ReplaceComparisonOperator = null -> != null
   * Goal 67. Weak Mutation 66: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V:68 - ReplaceVariable i -> posicion
   * Goal 68. Weak Mutation 67: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V:68 - InsertUnaryOp Negation of i
   * Goal 69. Weak Mutation 68: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V:68 - InsertUnaryOp IINC 1 i
   * Goal 70. Weak Mutation 69: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V:68 - InsertUnaryOp IINC -1 i
   * Goal 71. Weak Mutation 70: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V:68 - ReplaceVariable jugador -> propietario
   * Goal 72. Weak Mutation 71: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V:68 - ReplaceComparisonOperator != -> ==
   * Goal 73. Weak Mutation 72: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V:69 - ReplaceVariable i -> posicion
   * Goal 74. Weak Mutation 73: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V:69 - InsertUnaryOp Negation of i
   * Goal 75. Weak Mutation 74: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V:69 - InsertUnaryOp IINC 1 i
   * Goal 76. Weak Mutation 75: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.quitar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V:69 - InsertUnaryOp IINC -1 i
   */

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Parking parking0 = new Parking(4);
      Jugador jugador0 = new Jugador((String) null);
      int int0 = parking0.add(jugador0);
      assertEquals(4, int0);
      
      parking0.quitar(jugador0);
      assertEquals(4, parking0.getPosicion());
  }

  //Test case number: 13
  /*
   * 45 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z: I9 Branch 2 IF_ICMPGE L52 - false
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z: I16 Branch 3 IFNULL L53 - false
   * Goal 4. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z: I22 Branch 4 IF_ACMPNE L53 - false
   * Goal 5. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z: I9 Branch 2 IF_ICMPGE L52 - false in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla:contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z
   * Goal 6. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z: I16 Branch 3 IFNULL L53 - false in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla:contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z
   * Goal 7. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z: I22 Branch 4 IF_ACMPNE L53 - false in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla:contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z
   * Goal 8. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z:True
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 27
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 28
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 29
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 30
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z: Line 52
   * Goal 14. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z: Line 53
   * Goal 15. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z: Line 54
   * Goal 16. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z
   * Goal 17. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z
   * Goal 18. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:27 - ReplaceVariable nombre -> nombre
   * Goal 19. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - ReplaceVariable posicion -> posicion
   * Goal 20. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - InsertUnaryOp Negation of posicion
   * Goal 21. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - InsertUnaryOp IINC 1 posicion
   * Goal 22. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - InsertUnaryOp IINC -1 posicion
   * Goal 23. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 0
   * Goal 24. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 1
   * Goal 25. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> -1
   * Goal 26. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 5
   * Goal 27. Weak Mutation 9: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 7
   * Goal 28. Weak Mutation 29: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z:52 - ReplaceConstant - 0 -> 1
   * Goal 29. Weak Mutation 30: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z:52 - ReplaceVariable i -> posicion
   * Goal 30. Weak Mutation 31: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z:52 - InsertUnaryOp Negation of i
   * Goal 31. Weak Mutation 32: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z:52 - InsertUnaryOp IINC 1 i
   * Goal 32. Weak Mutation 33: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z:52 - InsertUnaryOp IINC -1 i
   * Goal 33. Weak Mutation 34: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z:52 - ReplaceComparisonOperator >= -> -1
   * Goal 34. Weak Mutation 37: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z:53 - ReplaceVariable i -> posicion
   * Goal 35. Weak Mutation 38: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z:53 - InsertUnaryOp Negation of i
   * Goal 36. Weak Mutation 39: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z:53 - InsertUnaryOp IINC 1 i
   * Goal 37. Weak Mutation 40: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z:53 - InsertUnaryOp IINC -1 i
   * Goal 38. Weak Mutation 41: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z:53 - ReplaceComparisonOperator = null -> != null
   * Goal 39. Weak Mutation 42: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z:53 - ReplaceVariable i -> posicion
   * Goal 40. Weak Mutation 43: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z:53 - InsertUnaryOp Negation of i
   * Goal 41. Weak Mutation 44: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z:53 - InsertUnaryOp IINC 1 i
   * Goal 42. Weak Mutation 45: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z:53 - InsertUnaryOp IINC -1 i
   * Goal 43. Weak Mutation 46: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z:53 - ReplaceVariable jugador -> propietario
   * Goal 44. Weak Mutation 47: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z:53 - ReplaceComparisonOperator != -> ==
   * Goal 45. Weak Mutation 48: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z:54 - ReplaceConstant - 1 -> 0
   */

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Jugador jugador0 = new Jugador("");
      Parking parking0 = new Parking(29);
      Jugador[] jugadorArray0 = new Jugador[1];
      jugadorArray0[0] = jugador0;
      parking0.jugadores = jugadorArray0;
      boolean boolean0 = parking0.contains(jugador0);
      assertEquals(29, parking0.getPosicion());
      assertTrue(boolean0);
  }

  //Test case number: 14
  /*
   * 40 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z: I9 Branch 2 IF_ICMPGE L52 - true
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z: I9 Branch 2 IF_ICMPGE L52 - false
   * Goal 4. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z: I16 Branch 3 IFNULL L53 - true
   * Goal 5. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z: I9 Branch 2 IF_ICMPGE L52 - false in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla:contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z
   * Goal 6. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z: I9 Branch 2 IF_ICMPGE L52 - true in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla:contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z
   * Goal 7. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z: I16 Branch 3 IFNULL L53 - true in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla:contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z
   * Goal 8. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z:False
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 27
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 28
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 29
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 30
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z: Line 52
   * Goal 14. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z: Line 53
   * Goal 15. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z: Line 55
   * Goal 16. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z
   * Goal 17. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z
   * Goal 18. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:27 - ReplaceVariable nombre -> nombre
   * Goal 19. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - ReplaceVariable posicion -> posicion
   * Goal 20. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - InsertUnaryOp Negation of posicion
   * Goal 21. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - InsertUnaryOp IINC 1 posicion
   * Goal 22. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - InsertUnaryOp IINC -1 posicion
   * Goal 23. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 0
   * Goal 24. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 1
   * Goal 25. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> -1
   * Goal 26. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 5
   * Goal 27. Weak Mutation 9: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 7
   * Goal 28. Weak Mutation 29: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z:52 - ReplaceConstant - 0 -> 1
   * Goal 29. Weak Mutation 30: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z:52 - ReplaceVariable i -> posicion
   * Goal 30. Weak Mutation 31: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z:52 - InsertUnaryOp Negation of i
   * Goal 31. Weak Mutation 32: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z:52 - InsertUnaryOp IINC 1 i
   * Goal 32. Weak Mutation 33: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z:52 - InsertUnaryOp IINC -1 i
   * Goal 33. Weak Mutation 34: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z:52 - ReplaceComparisonOperator >= -> -1
   * Goal 34. Weak Mutation 35: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z:52 - ReplaceComparisonOperator >= -> >
   * Goal 35. Weak Mutation 37: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z:53 - ReplaceVariable i -> posicion
   * Goal 36. Weak Mutation 38: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z:53 - InsertUnaryOp Negation of i
   * Goal 37. Weak Mutation 39: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z:53 - InsertUnaryOp IINC 1 i
   * Goal 38. Weak Mutation 40: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z:53 - InsertUnaryOp IINC -1 i
   * Goal 39. Weak Mutation 41: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z:53 - ReplaceComparisonOperator = null -> != null
   * Goal 40. Weak Mutation 49: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z:55 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Parking parking0 = new Parking((-4406));
      Jugador jugador0 = new Jugador("");
      boolean boolean0 = parking0.contains(jugador0);
      assertFalse(boolean0);
      assertEquals(-4406, parking0.getPosicion());
  }

  //Test case number: 15
  /*
   * 28 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: I10 Branch 1 IFNULL L34 - false
   * Goal 3. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: I10 Branch 1 IFNULL L34 - false in context: 
   * Goal 4. add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I_java.lang.ArrayIndexOutOfBoundsException_IMPLICIT
   * Goal 5. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 27
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 28
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 29
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 30
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: Line 33
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: Line 34
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: Line 35
   * Goal 12. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I
   * Goal 13. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:27 - ReplaceVariable nombre -> nombre
   * Goal 14. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - ReplaceVariable posicion -> posicion
   * Goal 15. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - InsertUnaryOp Negation of posicion
   * Goal 16. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - InsertUnaryOp IINC 1 posicion
   * Goal 17. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - InsertUnaryOp IINC -1 posicion
   * Goal 18. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 0
   * Goal 19. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 1
   * Goal 20. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> -1
   * Goal 21. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 5
   * Goal 22. Weak Mutation 9: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 7
   * Goal 23. Weak Mutation 10: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:33 - ReplaceConstant - 0 -> 1
   * Goal 24. Weak Mutation 11: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:34 - ReplaceVariable cont -> posicion
   * Goal 25. Weak Mutation 12: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:34 - InsertUnaryOp Negation of cont
   * Goal 26. Weak Mutation 13: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:34 - InsertUnaryOp IINC 1 cont
   * Goal 27. Weak Mutation 14: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:34 - InsertUnaryOp IINC -1 cont
   * Goal 28. Weak Mutation 15: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:34 - ReplaceComparisonOperator = null -> != null
   */

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Jugador jugador0 = new Jugador("");
      Parking parking0 = new Parking(29);
      Jugador[] jugadorArray0 = new Jugador[1];
      jugadorArray0[0] = jugador0;
      parking0.jugadores = jugadorArray0;
      // Undeclared exception!
      try { 
        parking0.add(jugador0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         assertThrownBy("edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla", e);
      }
  }

  //Test case number: 16
  /*
   * 21 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.getTablero()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;: root-Branch
   * Goal 3. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.getTablero()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla:getTablero()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;
   * Goal 4. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.getTablero()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;:Null
   * Goal 5. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 27
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 28
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 29
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 30
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.getTablero()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;: Line 87
   * Goal 10. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.getTablero()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;
   * Goal 11. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.getTablero()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;
   * Goal 12. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:27 - ReplaceVariable nombre -> nombre
   * Goal 13. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - ReplaceVariable posicion -> posicion
   * Goal 14. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - InsertUnaryOp Negation of posicion
   * Goal 15. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - InsertUnaryOp IINC 1 posicion
   * Goal 16. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - InsertUnaryOp IINC -1 posicion
   * Goal 17. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 0
   * Goal 18. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 1
   * Goal 19. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> -1
   * Goal 20. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 5
   * Goal 21. Weak Mutation 9: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 7
   */

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Compania compania0 = new Compania("", (-1.0), 29);
      compania0.getTablero();
      assertEquals(29, compania0.getPosicion());
  }

  //Test case number: 17
  /*
   * 21 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.getPropietario()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;: root-Branch
   * Goal 3. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.getPropietario()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla:getPropietario()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;
   * Goal 4. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.getPropietario()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;:Null
   * Goal 5. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 27
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 28
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 29
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 30
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.getPropietario()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;: Line 95
   * Goal 10. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.getPropietario()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;
   * Goal 11. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.getPropietario()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;
   * Goal 12. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:27 - ReplaceVariable nombre -> nombre
   * Goal 13. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - ReplaceVariable posicion -> posicion
   * Goal 14. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - InsertUnaryOp Negation of posicion
   * Goal 15. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - InsertUnaryOp IINC 1 posicion
   * Goal 16. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - InsertUnaryOp IINC -1 posicion
   * Goal 17. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 0
   * Goal 18. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 1
   * Goal 19. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> -1
   * Goal 20. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 5
   * Goal 21. Weak Mutation 9: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 7
   */

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Suerte suerte0 = new Suerte(4);
      suerte0.getPropietario();
      assertEquals(4, suerte0.getPosicion());
  }

  //Test case number: 18
  /*
   * 29 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.getPosicion()I: root-Branch
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: root-Branch
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: root-Branch in context: 
   * Goal 5. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.getPosicion()I: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla:getPosicion()I
   * Goal 6. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.getPosicion()I:Zero
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 27
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 28
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 29
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 30
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.getPosicion()I: Line 63
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: Line 79
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: Line 80
   * Goal 14. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.getPosicion()I
   * Goal 15. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.getPosicion()I
   * Goal 16. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:27 - ReplaceVariable nombre -> nombre
   * Goal 17. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - ReplaceVariable posicion -> posicion
   * Goal 18. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - InsertUnaryOp Negation of posicion
   * Goal 19. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - InsertUnaryOp IINC 1 posicion
   * Goal 20. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - InsertUnaryOp IINC -1 posicion
   * Goal 21. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 0
   * Goal 22. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 1
   * Goal 23. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> -1
   * Goal 24. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 5
   * Goal 25. Weak Mutation 9: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 7
   * Goal 26. Weak Mutation 50: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.getPosicion()I:63 - InsertUnaryOp Negation
   * Goal 27. Weak Mutation 51: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.getPosicion()I:63 - InsertUnaryOp +1
   * Goal 28. Weak Mutation 52: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.getPosicion()I:63 - InsertUnaryOp -1
   * Goal 29. Weak Mutation 76: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V:79 - ReplaceVariable tablero -> tablero
   */

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Tablero tablero0 = new Tablero();
      Salida salida0 = (Salida)tablero0.getCasilla(0);
      int int0 = salida0.getPosicion();
      assertEquals(0, int0);
  }

  //Test case number: 19
  /*
   * 23 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.getPosicion()I: root-Branch
   * Goal 3. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.getPosicion()I: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla:getPosicion()I
   * Goal 4. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.getPosicion()I:Negative
   * Goal 5. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 27
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 28
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 29
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 30
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.getPosicion()I: Line 63
   * Goal 10. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.getPosicion()I
   * Goal 11. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.getPosicion()I
   * Goal 12. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - ReplaceVariable posicion -> posicion
   * Goal 13. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - InsertUnaryOp Negation of posicion
   * Goal 14. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - InsertUnaryOp IINC 1 posicion
   * Goal 15. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - InsertUnaryOp IINC -1 posicion
   * Goal 16. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 0
   * Goal 17. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 1
   * Goal 18. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> -1
   * Goal 19. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 5
   * Goal 20. Weak Mutation 9: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 7
   * Goal 21. Weak Mutation 50: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.getPosicion()I:63 - InsertUnaryOp Negation
   * Goal 22. Weak Mutation 51: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.getPosicion()I:63 - InsertUnaryOp +1
   * Goal 23. Weak Mutation 52: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.getPosicion()I:63 - InsertUnaryOp -1
   */

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Impuesto impuesto0 = new Impuesto((String) null, 1050.0, (-2913));
      int int0 = impuesto0.getPosicion();
      assertEquals((-2913), int0);
  }

  //Test case number: 20
  /*
   * 22 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.setPropietario(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V: root-Branch
   * Goal 3. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.setPropietario(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V: root-Branch in context: 
   * Goal 4. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 27
   * Goal 5. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 28
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 29
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 30
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.setPropietario(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V: Line 99
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.setPropietario(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V: Line 100
   * Goal 10. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.comprar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V
   * Goal 11. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.comprar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V
   * Goal 12. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:27 - ReplaceVariable nombre -> nombre
   * Goal 13. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - ReplaceVariable posicion -> posicion
   * Goal 14. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - InsertUnaryOp Negation of posicion
   * Goal 15. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - InsertUnaryOp IINC 1 posicion
   * Goal 16. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - InsertUnaryOp IINC -1 posicion
   * Goal 17. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 0
   * Goal 18. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 1
   * Goal 19. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> -1
   * Goal 20. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 5
   * Goal 21. Weak Mutation 9: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 7
   * Goal 22. Weak Mutation 77: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.setPropietario(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V:99 - ReplaceVariable propietario -> propietario
   */

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Parking parking0 = new Parking((-4406));
      Jugador jugador0 = new Jugador("");
      parking0.propietario = jugador0;
      Compania compania0 = new Compania("", (double) 306, 2);
      compania0.comprar(parking0.propietario);
      assertEquals(4.0, compania0.getTasaPorCaer(), 0.01);
  }

  //Test case number: 21
  /*
   * 20 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.comprar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V: root-Branch
   * Goal 3. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.comprar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V: root-Branch in context: 
   * Goal 4. comprar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V_org.evosuite.runtime.mock.java.lang.MockException_DECLARED
   * Goal 5. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 27
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 28
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 29
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 30
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.comprar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V: Line 75
   * Goal 10. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.comprar(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)V
   * Goal 11. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:27 - ReplaceVariable nombre -> nombre
   * Goal 12. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - ReplaceVariable posicion -> posicion
   * Goal 13. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - InsertUnaryOp Negation of posicion
   * Goal 14. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - InsertUnaryOp IINC 1 posicion
   * Goal 15. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - InsertUnaryOp IINC -1 posicion
   * Goal 16. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 0
   * Goal 17. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 1
   * Goal 18. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> -1
   * Goal 19. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 5
   * Goal 20. Weak Mutation 9: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 7
   */

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Salida salida0 = new Salida((-684));
      Jugador jugador0 = new Jugador("kU2gI3nZG{O.L/t");
      try { 
        salida0.comprar(jugador0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla", e);
      }
  }

  //Test case number: 22
  /*
   * 81 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: root-Branch
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: I10 Branch 1 IFNULL L34 - true
   * Goal 4. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z: I9 Branch 2 IF_ICMPGE L52 - true
   * Goal 5. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z: I9 Branch 2 IF_ICMPGE L52 - false
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z: I16 Branch 3 IFNULL L53 - true
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z: I16 Branch 3 IFNULL L53 - false
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z: I22 Branch 4 IF_ACMPNE L53 - true
   * Goal 9. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: root-Branch in context: 
   * Goal 10. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: I10 Branch 1 IFNULL L34 - true in context: 
   * Goal 11. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z: I9 Branch 2 IF_ICMPGE L52 - false in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla:contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z
   * Goal 12. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z: I9 Branch 2 IF_ICMPGE L52 - true in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla:contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z
   * Goal 13. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z: I22 Branch 4 IF_ACMPNE L53 - true in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla:contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z
   * Goal 14. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z: I16 Branch 3 IFNULL L53 - false in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla:contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z
   * Goal 15. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z: I16 Branch 3 IFNULL L53 - true in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla:contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z
   * Goal 16. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:Zero
   * Goal 17. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z:False
   * Goal 18. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 27
   * Goal 19. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 28
   * Goal 20. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 29
   * Goal 21. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V: Line 30
   * Goal 22. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: Line 33
   * Goal 23. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: Line 34
   * Goal 24. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: Line 36
   * Goal 25. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: Line 37
   * Goal 26. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: Line 38
   * Goal 27. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: Line 39
   * Goal 28. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z: Line 52
   * Goal 29. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z: Line 53
   * Goal 30. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z: Line 55
   * Goal 31. edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: Line 43
   * Goal 32. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I
   * Goal 33. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z
   * Goal 34. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I
   * Goal 35. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z
   * Goal 36. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:27 - ReplaceVariable nombre -> nombre
   * Goal 37. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - ReplaceVariable posicion -> posicion
   * Goal 38. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - InsertUnaryOp Negation of posicion
   * Goal 39. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - InsertUnaryOp IINC 1 posicion
   * Goal 40. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:28 - InsertUnaryOp IINC -1 posicion
   * Goal 41. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 0
   * Goal 42. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 1
   * Goal 43. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> -1
   * Goal 44. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 5
   * Goal 45. Weak Mutation 9: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.<init>(Ljava/lang/String;I)V:29 - ReplaceConstant - 6 -> 7
   * Goal 46. Weak Mutation 10: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:33 - ReplaceConstant - 0 -> 1
   * Goal 47. Weak Mutation 11: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:34 - ReplaceVariable cont -> posicion
   * Goal 48. Weak Mutation 12: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:34 - InsertUnaryOp Negation of cont
   * Goal 49. Weak Mutation 13: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:34 - InsertUnaryOp IINC 1 cont
   * Goal 50. Weak Mutation 14: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:34 - InsertUnaryOp IINC -1 cont
   * Goal 51. Weak Mutation 15: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:34 - ReplaceComparisonOperator = null -> != null
   * Goal 52. Weak Mutation 16: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:36 - ReplaceVariable cont -> posicion
   * Goal 53. Weak Mutation 17: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:36 - InsertUnaryOp Negation of cont
   * Goal 54. Weak Mutation 18: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:36 - InsertUnaryOp IINC 1 cont
   * Goal 55. Weak Mutation 19: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:36 - InsertUnaryOp IINC -1 cont
   * Goal 56. Weak Mutation 20: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:36 - ReplaceVariable jugador -> propietario
   * Goal 57. Weak Mutation 21: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:37 - ReplaceVariable jugador -> propietario
   * Goal 58. Weak Mutation 22: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:38 - ReplaceVariable jugador -> propietario
   * Goal 59. Weak Mutation 24: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:39 - ReplaceVariable r -> posicion
   * Goal 60. Weak Mutation 25: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:39 - InsertUnaryOp Negation of r
   * Goal 61. Weak Mutation 26: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:39 - InsertUnaryOp IINC 1 r
   * Goal 62. Weak Mutation 27: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.add(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:39 - InsertUnaryOp IINC -1 r
   * Goal 63. Weak Mutation 28: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:43 - ReplaceConstant - 0 -> 1
   * Goal 64. Weak Mutation 29: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z:52 - ReplaceConstant - 0 -> 1
   * Goal 65. Weak Mutation 30: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z:52 - ReplaceVariable i -> posicion
   * Goal 66. Weak Mutation 31: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z:52 - InsertUnaryOp Negation of i
   * Goal 67. Weak Mutation 32: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z:52 - InsertUnaryOp IINC 1 i
   * Goal 68. Weak Mutation 33: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z:52 - InsertUnaryOp IINC -1 i
   * Goal 69. Weak Mutation 34: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z:52 - ReplaceComparisonOperator >= -> -1
   * Goal 70. Weak Mutation 35: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z:52 - ReplaceComparisonOperator >= -> >
   * Goal 71. Weak Mutation 37: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z:53 - ReplaceVariable i -> posicion
   * Goal 72. Weak Mutation 38: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z:53 - InsertUnaryOp Negation of i
   * Goal 73. Weak Mutation 39: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z:53 - InsertUnaryOp IINC 1 i
   * Goal 74. Weak Mutation 40: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z:53 - InsertUnaryOp IINC -1 i
   * Goal 75. Weak Mutation 41: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z:53 - ReplaceComparisonOperator = null -> != null
   * Goal 76. Weak Mutation 42: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z:53 - ReplaceVariable i -> posicion
   * Goal 77. Weak Mutation 43: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z:53 - InsertUnaryOp Negation of i
   * Goal 78. Weak Mutation 44: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z:53 - InsertUnaryOp IINC 1 i
   * Goal 79. Weak Mutation 45: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z:53 - InsertUnaryOp IINC -1 i
   * Goal 80. Weak Mutation 47: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z:53 - ReplaceComparisonOperator != -> ==
   * Goal 81. Weak Mutation 49: edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla.contains(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z:55 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Carcel carcel0 = new Carcel(1626);
      Jugador jugador0 = new Jugador((String) null);
      int int0 = carcel0.add(jugador0);
      assertEquals(0, int0);
      
      boolean boolean0 = carcel0.contains((Jugador) null);
      assertFalse(boolean0);
      assertEquals(1626, carcel0.getPosicion());
  }
}
