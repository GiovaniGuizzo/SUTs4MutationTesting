/*
 * This file was automatically generated by EvoSuite
 * Wed Jun 01 19:32:40 GMT 2016
 */

package edu.uclm.esi.iso5.juegos.monopoly.dominio;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.uclm.esi.iso5.juegos.monopoly.dominio.Casilla;
import edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto;
import edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador;
import edu.uclm.esi.iso5.juegos.monopoly.dominio.Tablero;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Impuesto_ESTest extends Impuesto_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 19 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.<init>(Ljava/lang/String;DI)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: root-Branch
   * Goal 3. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: root-Branch in context: 
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.<init>(Ljava/lang/String;DI)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto:<init>(Ljava/lang/String;DI)V
   * Goal 5. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:Positive
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.<init>(Ljava/lang/String;DI)V: Line 19
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.<init>(Ljava/lang/String;DI)V: Line 20
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: Line 31
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: Line 32
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: Line 33
   * Goal 11. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.<init>(Ljava/lang/String;DI)V
   * Goal 12. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I
   * Goal 13. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.<init>(Ljava/lang/String;DI)V
   * Goal 14. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I
   * Goal 15. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.<init>(Ljava/lang/String;DI)V:19 - InsertUnaryOp Negation of importe
   * Goal 16. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:31 - ReplaceVariable j -> propietario
   * Goal 17. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:31 - InsertUnaryOp Negation
   * Goal 18. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:32 - InsertUnaryOp Negation
   * Goal 19. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:33 - ReplaceConstant - 1 -> 0
   */

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Impuesto impuesto0 = new Impuesto(",zx\"(|1Ao$", 2623.1424170987, 4561);
      Tablero tablero0 = new Tablero();
      impuesto0.tablero = tablero0;
      Jugador jugador0 = new Jugador(",zx\"(|1Ao$");
      int int0 = impuesto0.operaciones(jugador0);
      assertEquals((-1123.1424170987002), jugador0.getCapital(), 0.01);
      assertEquals(1, int0);
  }

  //Test case number: 1
  /*
   * 14 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.<init>(Ljava/lang/String;DI)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.getImporte()D: root-Branch
   * Goal 3. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.getImporte()D: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto:getImporte()D
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.<init>(Ljava/lang/String;DI)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto:<init>(Ljava/lang/String;DI)V
   * Goal 5. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.getImporte()D:Positive
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.<init>(Ljava/lang/String;DI)V: Line 19
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.<init>(Ljava/lang/String;DI)V: Line 20
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.getImporte()D: Line 27
   * Goal 9. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.<init>(Ljava/lang/String;DI)V
   * Goal 10. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.getImporte()D
   * Goal 11. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.<init>(Ljava/lang/String;DI)V
   * Goal 12. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.getImporte()D
   * Goal 13. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.<init>(Ljava/lang/String;DI)V:19 - InsertUnaryOp Negation of importe
   * Goal 14. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.getImporte()D:27 - InsertUnaryOp Negation
   */

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Impuesto impuesto0 = new Impuesto(",zx\"(|1Ao$", 2623.1424170987, 4561);
      double double0 = impuesto0.getImporte();
      assertEquals(2623.1424170987, double0, 0.01);
  }

  //Test case number: 2
  /*
   * 14 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.<init>(Ljava/lang/String;DI)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.getImporte()D: root-Branch
   * Goal 3. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.getImporte()D: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto:getImporte()D
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.<init>(Ljava/lang/String;DI)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto:<init>(Ljava/lang/String;DI)V
   * Goal 5. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.getImporte()D:Negative
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.<init>(Ljava/lang/String;DI)V: Line 19
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.<init>(Ljava/lang/String;DI)V: Line 20
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.getImporte()D: Line 27
   * Goal 9. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.<init>(Ljava/lang/String;DI)V
   * Goal 10. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.getImporte()D
   * Goal 11. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.<init>(Ljava/lang/String;DI)V
   * Goal 12. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.getImporte()D
   * Goal 13. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.<init>(Ljava/lang/String;DI)V:19 - InsertUnaryOp Negation of importe
   * Goal 14. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.getImporte()D:27 - InsertUnaryOp Negation
   */

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Impuesto impuesto0 = new Impuesto("\tEstaci\u00F3n ", (-371.5081806), 0);
      double double0 = impuesto0.getImporte();
      assertEquals((-371.5081806), double0, 0.01);
  }

  //Test case number: 3
  /*
   * 16 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.<init>(Ljava/lang/String;DI)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: root-Branch
   * Goal 3. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: root-Branch in context: 
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.<init>(Ljava/lang/String;DI)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto:<init>(Ljava/lang/String;DI)V
   * Goal 5. operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I_java.lang.ArrayIndexOutOfBoundsException_IMPLICIT
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.<init>(Ljava/lang/String;DI)V: Line 19
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.<init>(Ljava/lang/String;DI)V: Line 20
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: Line 31
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: Line 32
   * Goal 10. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.<init>(Ljava/lang/String;DI)V
   * Goal 11. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I
   * Goal 12. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.<init>(Ljava/lang/String;DI)V
   * Goal 13. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.<init>(Ljava/lang/String;DI)V:19 - InsertUnaryOp Negation of importe
   * Goal 14. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:31 - ReplaceVariable j -> propietario
   * Goal 15. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:31 - InsertUnaryOp Negation
   * Goal 16. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:32 - InsertUnaryOp Negation
   */

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Impuesto impuesto0 = new Impuesto("z(", 0.0, 0);
      Tablero tablero0 = new Tablero();
      impuesto0.tablero = tablero0;
      Jugador jugador0 = new Jugador("z(");
      Casilla[] casillaArray0 = new Casilla[3];
      tablero0.casillas = casillaArray0;
      // Undeclared exception!
      try { 
        impuesto0.operaciones(jugador0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 20
         //
         assertThrownBy("edu.uclm.esi.iso5.juegos.monopoly.dominio.Tablero", e);
      }
  }

  //Test case number: 4
  /*
   * 16 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.<init>(Ljava/lang/String;DI)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: root-Branch
   * Goal 3. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: root-Branch in context: 
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.<init>(Ljava/lang/String;DI)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto:<init>(Ljava/lang/String;DI)V
   * Goal 5. operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I_java.lang.NullPointerException_IMPLICIT
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.<init>(Ljava/lang/String;DI)V: Line 19
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.<init>(Ljava/lang/String;DI)V: Line 20
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: Line 31
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: Line 32
   * Goal 10. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.<init>(Ljava/lang/String;DI)V
   * Goal 11. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I
   * Goal 12. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.<init>(Ljava/lang/String;DI)V
   * Goal 13. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.<init>(Ljava/lang/String;DI)V:19 - InsertUnaryOp Negation of importe
   * Goal 14. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:31 - ReplaceVariable j -> propietario
   * Goal 15. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:31 - InsertUnaryOp Negation
   * Goal 16. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:32 - InsertUnaryOp Negation
   */

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Impuesto impuesto0 = new Impuesto("z(", 0.0, 0);
      Jugador jugador0 = new Jugador("z(");
      // Undeclared exception!
      try { 
        impuesto0.operaciones(jugador0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto", e);
      }
  }

  //Test case number: 5
  /*
   * 14 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.<init>(Ljava/lang/String;DI)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.getImporte()D: root-Branch
   * Goal 3. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.getImporte()D: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto:getImporte()D
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.<init>(Ljava/lang/String;DI)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto:<init>(Ljava/lang/String;DI)V
   * Goal 5. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.getImporte()D:Zero
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.<init>(Ljava/lang/String;DI)V: Line 19
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.<init>(Ljava/lang/String;DI)V: Line 20
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.getImporte()D: Line 27
   * Goal 9. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.<init>(Ljava/lang/String;DI)V
   * Goal 10. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.getImporte()D
   * Goal 11. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.<init>(Ljava/lang/String;DI)V
   * Goal 12. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.getImporte()D
   * Goal 13. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.<init>(Ljava/lang/String;DI)V:19 - InsertUnaryOp Negation of importe
   * Goal 14. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Impuesto.getImporte()D:27 - InsertUnaryOp Negation
   */

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Impuesto impuesto0 = new Impuesto("", 0.0, (-1731));
      double double0 = impuesto0.getImporte();
      assertEquals(0.0, double0, 0.01);
  }
}
