/*
 * This file was automatically generated by EvoSuite
 * Wed Jun 01 19:25:05 GMT 2016
 */

package edu.uclm.esi.iso5.juegos.monopoly.dominio;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania;
import edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Compania_ESTest extends Compania_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 46 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.<init>(Ljava/lang/String;DI)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D: I4 Branch 1 IFNONNULL L18 - true
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D: I15 Branch 2 IF_ICMPNE L20 - true
   * Goal 4. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: I4 Branch 3 IFNONNULL L30 - true
   * Goal 5. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: I14 Branch 4 IF_ACMPEQ L32 - false
   * Goal 6. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.<init>(Ljava/lang/String;DI)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania:<init>(Ljava/lang/String;DI)V
   * Goal 7. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: I4 Branch 3 IFNONNULL L30 - true in context: 
   * Goal 8. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: I14 Branch 4 IF_ACMPEQ L32 - false in context: 
   * Goal 9. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:Positive
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.<init>(Ljava/lang/String;DI)V: Line 14
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.<init>(Ljava/lang/String;DI)V: Line 15
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D: Line 18
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D: Line 20
   * Goal 14. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D: Line 22
   * Goal 15. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: Line 30
   * Goal 16. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: Line 32
   * Goal 17. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: Line 33
   * Goal 18. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: Line 35
   * Goal 19. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: Line 41
   * Goal 20. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: Line 42
   * Goal 21. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.<init>(Ljava/lang/String;DI)V
   * Goal 22. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I
   * Goal 23. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.<init>(Ljava/lang/String;DI)V
   * Goal 24. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I
   * Goal 25. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.<init>(Ljava/lang/String;DI)V:14 - InsertUnaryOp Negation of precio
   * Goal 26. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D:18 - ReplaceComparisonOperator != null -> = null
   * Goal 27. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D:20 - ReplaceConstant - 1 -> 0
   * Goal 28. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D:20 - ReplaceComparisonOperator != -> ==
   * Goal 29. Weak Mutation 12: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D:22 - ReplaceConstant - 8.0 -> 0.0
   * Goal 30. Weak Mutation 13: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D:22 - ReplaceConstant - 8.0 -> 1.0
   * Goal 31. Weak Mutation 14: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D:22 - ReplaceConstant - 8.0 -> -1.0
   * Goal 32. Weak Mutation 15: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D:22 - ReplaceConstant - 8.0 -> 7.0
   * Goal 33. Weak Mutation 16: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D:22 - ReplaceConstant - 8.0 -> 9.0
   * Goal 34. Weak Mutation 21: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:30 - ReplaceComparisonOperator != null -> = null
   * Goal 35. Weak Mutation 26: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:32 - ReplaceVariable j -> propietario
   * Goal 36. Weak Mutation 27: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:32 - ReplaceComparisonOperator == -> !=
   * Goal 37. Weak Mutation 28: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:33 - ReplaceVariable j -> propietario
   * Goal 38. Weak Mutation 29: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:33 - ReplaceArithmeticOperator * -> +
   * Goal 39. Weak Mutation 31: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:33 - ReplaceArithmeticOperator * -> -
   * Goal 40. Weak Mutation 33: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:35 - ReplaceVariable j -> propietario
   * Goal 41. Weak Mutation 35: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:35 - InsertUnaryOp Negation of tasaPorPasar
   * Goal 42. Weak Mutation 50: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:42 - ReplaceConstant - 3 -> 0
   * Goal 43. Weak Mutation 51: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:42 - ReplaceConstant - 3 -> 1
   * Goal 44. Weak Mutation 52: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:42 - ReplaceConstant - 3 -> -1
   * Goal 45. Weak Mutation 53: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:42 - ReplaceConstant - 3 -> 2
   * Goal 46. Weak Mutation 54: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:42 - ReplaceConstant - 3 -> 4
   */

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Compania compania0 = new Compania("C_d(xz[", 0.0, 1);
      Jugador jugador0 = new Jugador("C_d(xz[");
      compania0.propietario = jugador0;
      Jugador jugador1 = new Jugador("C_d(xz[");
      int int0 = compania0.operaciones(jugador1);
      assertEquals(8.0, compania0.getTasaPorCaer(), 0.01);
      assertEquals(3, int0);
  }

  //Test case number: 1
  /*
   * 55 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.<init>(Ljava/lang/String;DI)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D: I4 Branch 1 IFNONNULL L18 - true
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D: I15 Branch 2 IF_ICMPNE L20 - false
   * Goal 4. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: I4 Branch 3 IFNONNULL L30 - true
   * Goal 5. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: I14 Branch 4 IF_ACMPEQ L32 - false
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: I42 Branch 5 IFEQ L37 - true
   * Goal 7. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.<init>(Ljava/lang/String;DI)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania:<init>(Ljava/lang/String;DI)V
   * Goal 8. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: I4 Branch 3 IFNONNULL L30 - true in context: 
   * Goal 9. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: I14 Branch 4 IF_ACMPEQ L32 - false in context: 
   * Goal 10. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: I42 Branch 5 IFEQ L37 - true in context: 
   * Goal 11. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:Positive
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.<init>(Ljava/lang/String;DI)V: Line 14
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.<init>(Ljava/lang/String;DI)V: Line 15
   * Goal 14. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D: Line 18
   * Goal 15. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D: Line 20
   * Goal 16. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D: Line 21
   * Goal 17. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: Line 30
   * Goal 18. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: Line 32
   * Goal 19. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: Line 33
   * Goal 20. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: Line 35
   * Goal 21. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: Line 36
   * Goal 22. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: Line 37
   * Goal 23. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: Line 40
   * Goal 24. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.<init>(Ljava/lang/String;DI)V
   * Goal 25. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I
   * Goal 26. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.<init>(Ljava/lang/String;DI)V
   * Goal 27. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I
   * Goal 28. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.<init>(Ljava/lang/String;DI)V:14 - ReplaceVariable precio -> precio
   * Goal 29. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.<init>(Ljava/lang/String;DI)V:14 - InsertUnaryOp Negation of precio
   * Goal 30. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D:18 - ReplaceComparisonOperator != null -> = null
   * Goal 31. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D:20 - ReplaceConstant - 1 -> 0
   * Goal 32. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D:20 - ReplaceComparisonOperator != -> ==
   * Goal 33. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D:21 - ReplaceConstant - 4.0 -> 0.0
   * Goal 34. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D:21 - ReplaceConstant - 4.0 -> 1.0
   * Goal 35. Weak Mutation 9: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D:21 - ReplaceConstant - 4.0 -> -1.0
   * Goal 36. Weak Mutation 10: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D:21 - ReplaceConstant - 4.0 -> 3.0
   * Goal 37. Weak Mutation 11: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D:21 - ReplaceConstant - 4.0 -> 5.0
   * Goal 38. Weak Mutation 21: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:30 - ReplaceComparisonOperator != null -> = null
   * Goal 39. Weak Mutation 26: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:32 - ReplaceVariable j -> propietario
   * Goal 40. Weak Mutation 27: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:32 - ReplaceComparisonOperator == -> !=
   * Goal 41. Weak Mutation 28: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:33 - ReplaceVariable j -> propietario
   * Goal 42. Weak Mutation 29: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:33 - ReplaceArithmeticOperator * -> +
   * Goal 43. Weak Mutation 31: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:33 - ReplaceArithmeticOperator * -> -
   * Goal 44. Weak Mutation 33: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:35 - ReplaceVariable j -> propietario
   * Goal 45. Weak Mutation 34: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:35 - ReplaceVariable tasaPorPasar -> precio
   * Goal 46. Weak Mutation 35: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:35 - InsertUnaryOp Negation of tasaPorPasar
   * Goal 47. Weak Mutation 36: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:37 - ReplaceVariable j -> propietario
   * Goal 48. Weak Mutation 37: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:37 - ReplaceVariable tasaPorPasar -> precio
   * Goal 49. Weak Mutation 38: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:37 - InsertUnaryOp Negation of tasaPorPasar
   * Goal 50. Weak Mutation 39: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:37 - ReplaceComparisonOperator == -> !=
   * Goal 51. Weak Mutation 45: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:40 - ReplaceConstant - 14 -> 0
   * Goal 52. Weak Mutation 46: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:40 - ReplaceConstant - 14 -> 1
   * Goal 53. Weak Mutation 47: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:40 - ReplaceConstant - 14 -> -1
   * Goal 54. Weak Mutation 48: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:40 - ReplaceConstant - 14 -> 13
   * Goal 55. Weak Mutation 49: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:40 - ReplaceConstant - 14 -> 15
   */

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Compania compania0 = new Compania("C<WnvbMr@qp5.(7", (-2480.205745663656), 2952);
      Jugador jugador0 = new Jugador("C<WnvbMr@qp5.(7");
      compania0.comprar(jugador0);
      Jugador jugador1 = new Jugador("C<WnvbMr@qp5.(7");
      jugador1.decrementarCapital(2952);
      int int0 = compania0.operaciones(jugador1);
      assertEquals(4.0, compania0.getTasaPorCaer(), 0.01);
      assertEquals(14, int0);
  }

  //Test case number: 2
  /*
   * 20 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.<init>(Ljava/lang/String;DI)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: I4 Branch 3 IFNONNULL L30 - true
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: I14 Branch 4 IF_ACMPEQ L32 - false
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.<init>(Ljava/lang/String;DI)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania:<init>(Ljava/lang/String;DI)V
   * Goal 5. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: I4 Branch 3 IFNONNULL L30 - true in context: 
   * Goal 6. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: I14 Branch 4 IF_ACMPEQ L32 - false in context: 
   * Goal 7. operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I_java.lang.NullPointerException_IMPLICIT
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.<init>(Ljava/lang/String;DI)V: Line 14
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.<init>(Ljava/lang/String;DI)V: Line 15
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: Line 30
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: Line 32
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: Line 33
   * Goal 13. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.<init>(Ljava/lang/String;DI)V
   * Goal 14. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I
   * Goal 15. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.<init>(Ljava/lang/String;DI)V
   * Goal 16. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.<init>(Ljava/lang/String;DI)V:14 - InsertUnaryOp Negation of precio
   * Goal 17. Weak Mutation 21: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:30 - ReplaceComparisonOperator != null -> = null
   * Goal 18. Weak Mutation 26: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:32 - ReplaceVariable j -> propietario
   * Goal 19. Weak Mutation 27: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:32 - ReplaceComparisonOperator == -> !=
   * Goal 20. Weak Mutation 28: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:33 - ReplaceVariable j -> propietario
   */

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Compania compania0 = new Compania("\tCompa\uFFFD\uFFFDa ", 0.0, 3092);
      Jugador jugador0 = new Jugador("\tCompa\uFFFD\uFFFDa ");
      compania0.setPropietario(jugador0);
      // Undeclared exception!
      try { 
        compania0.operaciones((Jugador) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania", e);
      }
  }

  //Test case number: 3
  /*
   * 20 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.<init>(Ljava/lang/String;DI)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: I4 Branch 3 IFNONNULL L30 - false
   * Goal 3. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.<init>(Ljava/lang/String;DI)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania:<init>(Ljava/lang/String;DI)V
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: I4 Branch 3 IFNONNULL L30 - false in context: 
   * Goal 5. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:Positive
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.<init>(Ljava/lang/String;DI)V: Line 14
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.<init>(Ljava/lang/String;DI)V: Line 15
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: Line 30
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: Line 31
   * Goal 10. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.<init>(Ljava/lang/String;DI)V
   * Goal 11. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I
   * Goal 12. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.<init>(Ljava/lang/String;DI)V
   * Goal 13. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I
   * Goal 14. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.<init>(Ljava/lang/String;DI)V:14 - ReplaceVariable precio -> precio
   * Goal 15. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.<init>(Ljava/lang/String;DI)V:14 - InsertUnaryOp Negation of precio
   * Goal 16. Weak Mutation 21: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:30 - ReplaceComparisonOperator != null -> = null
   * Goal 17. Weak Mutation 22: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:31 - ReplaceConstant - 2 -> 0
   * Goal 18. Weak Mutation 23: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:31 - ReplaceConstant - 2 -> 1
   * Goal 19. Weak Mutation 24: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:31 - ReplaceConstant - 2 -> -1
   * Goal 20. Weak Mutation 25: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:31 - ReplaceConstant - 2 -> 3
   */

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Compania compania0 = new Compania("/Q$IM&", 1447.3926, 1776);
      Jugador jugador0 = new Jugador("/Q$IM&");
      int int0 = compania0.operaciones(jugador0);
      assertEquals(1447.3926, compania0.getPrecio(), 0.01);
      assertEquals(2, int0);
  }

  //Test case number: 4
  /*
   * 20 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.<init>(Ljava/lang/String;DI)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: I4 Branch 3 IFNONNULL L30 - true
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: I14 Branch 4 IF_ACMPEQ L32 - true
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.<init>(Ljava/lang/String;DI)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania:<init>(Ljava/lang/String;DI)V
   * Goal 5. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: I4 Branch 3 IFNONNULL L30 - true in context: 
   * Goal 6. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: I14 Branch 4 IF_ACMPEQ L32 - true in context: 
   * Goal 7. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:Zero
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.<init>(Ljava/lang/String;DI)V: Line 14
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.<init>(Ljava/lang/String;DI)V: Line 15
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: Line 30
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: Line 32
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: Line 44
   * Goal 13. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.<init>(Ljava/lang/String;DI)V
   * Goal 14. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I
   * Goal 15. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.<init>(Ljava/lang/String;DI)V
   * Goal 16. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I
   * Goal 17. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.<init>(Ljava/lang/String;DI)V:14 - InsertUnaryOp Negation of precio
   * Goal 18. Weak Mutation 21: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:30 - ReplaceComparisonOperator != null -> = null
   * Goal 19. Weak Mutation 27: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:32 - ReplaceComparisonOperator == -> !=
   * Goal 20. Weak Mutation 55: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:44 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Compania compania0 = new Compania("\tCompa\uFFFD\uFFFDa ", 0.0, 3092);
      Jugador jugador0 = new Jugador("\tCompa\uFFFD\uFFFDa ");
      compania0.setPropietario(jugador0);
      int int0 = compania0.operaciones(jugador0);
      assertEquals(0, int0);
  }

  //Test case number: 5
  /*
   * 25 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.<init>(Ljava/lang/String;DI)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D: I4 Branch 1 IFNONNULL L18 - true
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D: I15 Branch 2 IF_ICMPNE L20 - false
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.<init>(Ljava/lang/String;DI)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania:<init>(Ljava/lang/String;DI)V
   * Goal 5. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D: I4 Branch 1 IFNONNULL L18 - true in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania:getTasaPorCaer()D
   * Goal 6. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D: I15 Branch 2 IF_ICMPNE L20 - false in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania:getTasaPorCaer()D
   * Goal 7. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D:Positive
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.<init>(Ljava/lang/String;DI)V: Line 14
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.<init>(Ljava/lang/String;DI)V: Line 15
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D: Line 18
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D: Line 20
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D: Line 21
   * Goal 13. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.<init>(Ljava/lang/String;DI)V
   * Goal 14. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D
   * Goal 15. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.<init>(Ljava/lang/String;DI)V
   * Goal 16. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D
   * Goal 17. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.<init>(Ljava/lang/String;DI)V:14 - InsertUnaryOp Negation of precio
   * Goal 18. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D:18 - ReplaceComparisonOperator != null -> = null
   * Goal 19. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D:20 - ReplaceConstant - 1 -> 0
   * Goal 20. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D:20 - ReplaceComparisonOperator != -> ==
   * Goal 21. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D:21 - ReplaceConstant - 4.0 -> 0.0
   * Goal 22. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D:21 - ReplaceConstant - 4.0 -> 1.0
   * Goal 23. Weak Mutation 9: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D:21 - ReplaceConstant - 4.0 -> -1.0
   * Goal 24. Weak Mutation 10: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D:21 - ReplaceConstant - 4.0 -> 3.0
   * Goal 25. Weak Mutation 11: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D:21 - ReplaceConstant - 4.0 -> 5.0
   */

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Compania compania0 = new Compania("U/yl", 0.0, 1);
      Jugador jugador0 = new Jugador("U/yl");
      compania0.comprar(jugador0);
      double double0 = compania0.getTasaPorCaer();
      assertEquals(4.0, double0, 0.01);
  }

  //Test case number: 6
  /*
   * 18 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.<init>(Ljava/lang/String;DI)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D: I4 Branch 1 IFNONNULL L18 - false
   * Goal 3. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.<init>(Ljava/lang/String;DI)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania:<init>(Ljava/lang/String;DI)V
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D: I4 Branch 1 IFNONNULL L18 - false in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania:getTasaPorCaer()D
   * Goal 5. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D:Zero
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.<init>(Ljava/lang/String;DI)V: Line 14
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.<init>(Ljava/lang/String;DI)V: Line 15
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D: Line 18
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D: Line 19
   * Goal 10. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.<init>(Ljava/lang/String;DI)V
   * Goal 11. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D
   * Goal 12. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.<init>(Ljava/lang/String;DI)V
   * Goal 13. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D
   * Goal 14. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.<init>(Ljava/lang/String;DI)V:14 - ReplaceVariable precio -> precio
   * Goal 15. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.<init>(Ljava/lang/String;DI)V:14 - InsertUnaryOp Negation of precio
   * Goal 16. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D:18 - ReplaceComparisonOperator != null -> = null
   * Goal 17. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D:19 - ReplaceConstant - 0.0 -> 1.0
   * Goal 18. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D:19 - ReplaceConstant - 0.0 -> -1.0
   */

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Compania compania0 = new Compania("/Q$IM&", 1447.3926, 1776);
      double double0 = compania0.getTasaPorCaer();
      assertEquals(0.0, double0, 0.01);
      assertEquals(1447.3926, compania0.getPrecio(), 0.01);
  }

  //Test case number: 7
  /*
   * 25 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.<init>(Ljava/lang/String;DI)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D: I4 Branch 1 IFNONNULL L18 - true
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D: I15 Branch 2 IF_ICMPNE L20 - true
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.<init>(Ljava/lang/String;DI)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania:<init>(Ljava/lang/String;DI)V
   * Goal 5. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D: I4 Branch 1 IFNONNULL L18 - true in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania:getTasaPorCaer()D
   * Goal 6. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D: I15 Branch 2 IF_ICMPNE L20 - true in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania:getTasaPorCaer()D
   * Goal 7. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D:Positive
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.<init>(Ljava/lang/String;DI)V: Line 14
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.<init>(Ljava/lang/String;DI)V: Line 15
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D: Line 18
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D: Line 20
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D: Line 22
   * Goal 13. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.<init>(Ljava/lang/String;DI)V
   * Goal 14. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D
   * Goal 15. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.<init>(Ljava/lang/String;DI)V
   * Goal 16. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D
   * Goal 17. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.<init>(Ljava/lang/String;DI)V:14 - InsertUnaryOp Negation of precio
   * Goal 18. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D:18 - ReplaceComparisonOperator != null -> = null
   * Goal 19. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D:20 - ReplaceConstant - 1 -> 0
   * Goal 20. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D:20 - ReplaceComparisonOperator != -> ==
   * Goal 21. Weak Mutation 12: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D:22 - ReplaceConstant - 8.0 -> 0.0
   * Goal 22. Weak Mutation 13: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D:22 - ReplaceConstant - 8.0 -> 1.0
   * Goal 23. Weak Mutation 14: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D:22 - ReplaceConstant - 8.0 -> -1.0
   * Goal 24. Weak Mutation 15: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D:22 - ReplaceConstant - 8.0 -> 7.0
   * Goal 25. Weak Mutation 16: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.getTasaPorCaer()D:22 - ReplaceConstant - 8.0 -> 9.0
   */

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Compania compania0 = new Compania("\tCompa\uFFFD\uFFFDa ", 0.0, 3092);
      Jugador jugador0 = new Jugador("\tCompa\uFFFD\uFFFDa ");
      compania0.setPropietario(jugador0);
      double double0 = compania0.getTasaPorCaer();
      assertEquals(8.0, double0, 0.01);
  }

  //Test case number: 8
  /*
   * 17 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.toString()Ljava/lang/String;: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.<init>(Ljava/lang/String;DI)V: root-Branch
   * Goal 3. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.<init>(Ljava/lang/String;DI)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania:<init>(Ljava/lang/String;DI)V
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.toString()Ljava/lang/String;: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania:toString()Ljava/lang/String;
   * Goal 5. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.toString()Ljava/lang/String;:NonEmptyString
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.<init>(Ljava/lang/String;DI)V: Line 14
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.<init>(Ljava/lang/String;DI)V: Line 15
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.toString()Ljava/lang/String;: Line 26
   * Goal 9. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.<init>(Ljava/lang/String;DI)V
   * Goal 10. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.toString()Ljava/lang/String;
   * Goal 11. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.<init>(Ljava/lang/String;DI)V
   * Goal 12. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.toString()Ljava/lang/String;
   * Goal 13. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.<init>(Ljava/lang/String;DI)V:14 - InsertUnaryOp Negation of precio
   * Goal 14. Weak Mutation 17: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.toString()Ljava/lang/String;:26 - ReplaceConstant - 	Compa??a  -> 
   * Goal 15. Weak Mutation 18: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.toString()Ljava/lang/String;:26 - ReplaceConstant - ; precio= -> 
   * Goal 16. Weak Mutation 19: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.toString()Ljava/lang/String;:26 - InsertUnaryOp Negation
   * Goal 17. Weak Mutation 20: edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania.toString()Ljava/lang/String;:26 - ReplaceConstant - 
 -> 
   */

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Compania compania0 = new Compania("\tCompa\uFFFD\uFFFDa ", 0.0, 3092);
      String string0 = compania0.toString();
      assertEquals("\tCompa\uFFFD\uFFFDa \tCompa\uFFFD\uFFFDa ; precio=0.0\n", string0);
  }
}
