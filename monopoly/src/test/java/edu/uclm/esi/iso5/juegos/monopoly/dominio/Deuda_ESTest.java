/*
 * This file was automatically generated by EvoSuite
 * Wed Jun 01 19:27:32 GMT 2016
 */

package edu.uclm.esi.iso5.juegos.monopoly.dominio;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda;
import edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador;
import edu.uclm.esi.iso5.juegos.monopoly.dominio.Tablero;
import edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.QuedaLibreDeLaCarcel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class Deuda_ESTest extends Deuda_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 15 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getImporteDeuda()D: root-Branch
   * Goal 3. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda:<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getImporteDeuda()D: root-Branch in context: 
   * Goal 5. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getImporteDeuda()D:Positive
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: Line 18
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: Line 19
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: Line 20
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getImporteDeuda()D: Line 27
   * Goal 10. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V
   * Goal 11. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getImporteDeuda()D
   * Goal 12. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V
   * Goal 13. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getImporteDeuda()D
   * Goal 14. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V:19 - InsertUnaryOp Negation of importe
   * Goal 15. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getImporteDeuda()D:27 - InsertUnaryOp Negation
   */

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Jugador jugador0 = new Jugador("");
      Deuda deuda0 = new Deuda(jugador0, 350.0);
      double double0 = deuda0.getImporteDeuda();
      assertEquals(350.0, double0, 0.01);
  }

  //Test case number: 1
  /*
   * 15 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getImporteDeuda()D: root-Branch
   * Goal 3. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda:<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getImporteDeuda()D: root-Branch in context: 
   * Goal 5. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getImporteDeuda()D:Negative
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: Line 18
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: Line 19
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: Line 20
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getImporteDeuda()D: Line 27
   * Goal 10. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V
   * Goal 11. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getImporteDeuda()D
   * Goal 12. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V
   * Goal 13. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getImporteDeuda()D
   * Goal 14. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V:19 - InsertUnaryOp Negation of importe
   * Goal 15. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getImporteDeuda()D:27 - InsertUnaryOp Negation
   */

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Jugador jugador0 = new Jugador("");
      Deuda deuda0 = new Deuda(jugador0, (-5885.6543476));
      double double0 = deuda0.getImporteDeuda();
      assertEquals((-5885.6543476), double0, 0.01);
  }

  //Test case number: 2
  /*
   * 14 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;: root-Branch
   * Goal 3. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;: root-Branch in context: 
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda:<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V
   * Goal 5. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;:Null
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: Line 18
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: Line 19
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: Line 20
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;: Line 23
   * Goal 10. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V
   * Goal 11. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;
   * Goal 12. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V
   * Goal 13. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;
   * Goal 14. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V:19 - InsertUnaryOp Negation of importe
   */

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Deuda deuda0 = new Deuda((Jugador) null, 1.0);
      Jugador jugador0 = deuda0.getAcreedor();
      assertNull(jugador0);
  }

  //Test case number: 3
  /*
   * 18 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;: root-Branch
   * Goal 3. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;: root-Branch in context: 
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda:<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V
   * Goal 5. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;:NonNull:edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:getCapital()D:Positive
   * Goal 6. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;:NonNull:edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:getDeudaConBanca()D:Zero
   * Goal 7. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;:NonNull:edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:getSumaDados()I:Zero
   * Goal 8. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;:NonNull:edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:getTurnosSinJugar()I:Zero
   * Goal 9. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;:NonNull:edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:tieneTarjetaDeSalirDeLaCarcel()Z:True
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: Line 18
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: Line 19
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: Line 20
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;: Line 23
   * Goal 14. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V
   * Goal 15. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;
   * Goal 16. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V
   * Goal 17. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;
   * Goal 18. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V:19 - InsertUnaryOp Negation of importe
   */

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Jugador jugador0 = new Jugador("");
      QuedaLibreDeLaCarcel quedaLibreDeLaCarcel0 = new QuedaLibreDeLaCarcel();
      jugador0.addTarjeta(quedaLibreDeLaCarcel0, 1);
      Deuda deuda0 = new Deuda(jugador0, 4.0);
      Jugador jugador1 = deuda0.getAcreedor();
      assertEquals(0, jugador1.getSumaDados());
  }

  //Test case number: 4
  /*
   * 18 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;: root-Branch
   * Goal 3. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;: root-Branch in context: 
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda:<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V
   * Goal 5. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;:NonNull:edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:getCapital()D:Positive
   * Goal 6. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;:NonNull:edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:getDeudaConBanca()D:Zero
   * Goal 7. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;:NonNull:edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:getSumaDados()I:Zero
   * Goal 8. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;:NonNull:edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:getTurnosSinJugar()I:Positive
   * Goal 9. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;:NonNull:edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:tieneTarjetaDeSalirDeLaCarcel()Z:False
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: Line 18
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: Line 19
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: Line 20
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;: Line 23
   * Goal 14. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V
   * Goal 15. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;
   * Goal 16. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V
   * Goal 17. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;
   * Goal 18. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V:19 - InsertUnaryOp Negation of importe
   */

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Jugador jugador0 = new Jugador("l4N_X5\r]jN7=\"]R!Le");
      Deuda deuda0 = new Deuda(jugador0, 0.0);
      jugador0.suspenderTurnos(1);
      Jugador jugador1 = deuda0.getAcreedor();
      assertEquals(1500.0, jugador1.getCapital(), 0.01);
  }

  //Test case number: 5
  /*
   * 18 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;: root-Branch
   * Goal 3. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;: root-Branch in context: 
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda:<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V
   * Goal 5. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;:NonNull:edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:getCapital()D:Positive
   * Goal 6. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;:NonNull:edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:getDeudaConBanca()D:Zero
   * Goal 7. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;:NonNull:edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:getSumaDados()I:Zero
   * Goal 8. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;:NonNull:edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:getTurnosSinJugar()I:Negative
   * Goal 9. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;:NonNull:edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:tieneTarjetaDeSalirDeLaCarcel()Z:False
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: Line 18
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: Line 19
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: Line 20
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;: Line 23
   * Goal 14. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V
   * Goal 15. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;
   * Goal 16. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V
   * Goal 17. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;
   * Goal 18. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V:19 - InsertUnaryOp Negation of importe
   */

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Jugador jugador0 = new Jugador("6ULM!+g1-");
      Deuda deuda0 = new Deuda(jugador0, 0.0);
      jugador0.suspenderTurnos((-832));
      Jugador jugador1 = deuda0.getAcreedor();
      assertEquals(1500.0, jugador1.getCapital(), 0.01);
  }

  //Test case number: 6
  /*
   * 18 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;: root-Branch
   * Goal 3. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;: root-Branch in context: 
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda:<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V
   * Goal 5. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;:NonNull:edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:getCapital()D:Positive
   * Goal 6. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;:NonNull:edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:getDeudaConBanca()D:Zero
   * Goal 7. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;:NonNull:edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:getSumaDados()I:Positive
   * Goal 8. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;:NonNull:edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:getTurnosSinJugar()I:Zero
   * Goal 9. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;:NonNull:edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:tieneTarjetaDeSalirDeLaCarcel()Z:False
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: Line 18
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: Line 19
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: Line 20
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;: Line 23
   * Goal 14. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V
   * Goal 15. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;
   * Goal 16. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V
   * Goal 17. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;
   * Goal 18. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V:19 - InsertUnaryOp Negation of importe
   */

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Jugador jugador0 = new Jugador("l09Z");
      Tablero tablero0 = new Tablero();
      jugador0.setTablero(tablero0);
      jugador0.tirarDados();
      Deuda deuda0 = new Deuda(jugador0, 37.52675601096334);
      Jugador jugador1 = deuda0.getAcreedor();
      assertEquals(0.0, jugador1.getDeudaConBanca(), 0.01);
  }

  //Test case number: 7
  /*
   * 18 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;: root-Branch
   * Goal 3. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;: root-Branch in context: 
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda:<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V
   * Goal 5. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;:NonNull:edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:getCapital()D:Positive
   * Goal 6. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;:NonNull:edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:getDeudaConBanca()D:Zero
   * Goal 7. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;:NonNull:edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:getSumaDados()I:Negative
   * Goal 8. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;:NonNull:edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:getTurnosSinJugar()I:Zero
   * Goal 9. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;:NonNull:edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:tieneTarjetaDeSalirDeLaCarcel()Z:False
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: Line 18
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: Line 19
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: Line 20
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;: Line 23
   * Goal 14. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V
   * Goal 15. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;
   * Goal 16. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V
   * Goal 17. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;
   * Goal 18. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V:19 - InsertUnaryOp Negation of importe
   */

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Jugador jugador0 = new Jugador("KP5%d=4#Op{nQV");
      Deuda deuda0 = new Deuda(jugador0, (-1598.217));
      Tablero tablero0 = new Tablero();
      jugador0.setTablero(tablero0);
      jugador0.setDados((-2217), (-1207));
      Jugador jugador1 = deuda0.getAcreedor();
      assertEquals(0, jugador1.getTurnosSinJugar());
  }

  //Test case number: 8
  /*
   * 18 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;: root-Branch
   * Goal 3. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;: root-Branch in context: 
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda:<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V
   * Goal 5. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;:NonNull:edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:getCapital()D:Positive
   * Goal 6. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;:NonNull:edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:getDeudaConBanca()D:Positive
   * Goal 7. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;:NonNull:edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:getSumaDados()I:Zero
   * Goal 8. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;:NonNull:edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:getTurnosSinJugar()I:Zero
   * Goal 9. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;:NonNull:edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:tieneTarjetaDeSalirDeLaCarcel()Z:False
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: Line 18
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: Line 19
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: Line 20
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;: Line 23
   * Goal 14. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V
   * Goal 15. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;
   * Goal 16. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V
   * Goal 17. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;
   * Goal 18. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V:19 - InsertUnaryOp Negation of importe
   */

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Jugador jugador0 = new Jugador("");
      Deuda deuda0 = new Deuda(jugador0, (-5885.6543476));
      jugador0.setDeudaConBanca(350.0);
      Jugador jugador1 = deuda0.getAcreedor();
      assertEquals(350.0, jugador1.getDeudaConBanca(), 0.01);
  }

  //Test case number: 9
  /*
   * 18 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;: root-Branch
   * Goal 3. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;: root-Branch in context: 
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda:<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V
   * Goal 5. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;:NonNull:edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:getCapital()D:Positive
   * Goal 6. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;:NonNull:edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:getDeudaConBanca()D:Negative
   * Goal 7. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;:NonNull:edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:getSumaDados()I:Zero
   * Goal 8. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;:NonNull:edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:getTurnosSinJugar()I:Zero
   * Goal 9. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;:NonNull:edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:tieneTarjetaDeSalirDeLaCarcel()Z:False
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: Line 18
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: Line 19
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: Line 20
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;: Line 23
   * Goal 14. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V
   * Goal 15. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;
   * Goal 16. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V
   * Goal 17. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;
   * Goal 18. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V:19 - InsertUnaryOp Negation of importe
   */

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Jugador jugador0 = new Jugador("");
      jugador0.setDeudaConBanca((-4695.0597241));
      Deuda deuda0 = new Deuda(jugador0, (-1.0));
      Jugador jugador1 = deuda0.getAcreedor();
      assertEquals(1500.0, jugador1.getCapital(), 0.01);
  }

  //Test case number: 10
  /*
   * 25 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;: root-Branch
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.pagar()V: root-Branch
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;: root-Branch in context: 
   * Goal 5. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda:<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V
   * Goal 6. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.pagar()V: root-Branch in context: 
   * Goal 7. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;:NonNull:edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:getCapital()D:Negative
   * Goal 8. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;:NonNull:edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:getDeudaConBanca()D:Zero
   * Goal 9. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;:NonNull:edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:getSumaDados()I:Zero
   * Goal 10. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;:NonNull:edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:getTurnosSinJugar()I:Zero
   * Goal 11. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;:NonNull:edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:tieneTarjetaDeSalirDeLaCarcel()Z:False
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: Line 18
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: Line 19
   * Goal 14. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: Line 20
   * Goal 15. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;: Line 23
   * Goal 16. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.pagar()V: Line 31
   * Goal 17. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.pagar()V: Line 32
   * Goal 18. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V
   * Goal 19. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;
   * Goal 20. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.pagar()V
   * Goal 21. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V
   * Goal 22. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getAcreedor()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;
   * Goal 23. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.pagar()V
   * Goal 24. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V:19 - InsertUnaryOp Negation of importe
   * Goal 25. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.pagar()V:31 - InsertUnaryOp Negation
   */

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Jugador jugador0 = new Jugador("");
      Deuda deuda0 = new Deuda(jugador0, (-5885.6543476));
      deuda0.pagar();
      Jugador jugador1 = deuda0.getAcreedor();
      assertEquals((-4385.6543476), jugador1.getCapital(), 0.01);
  }

  //Test case number: 11
  /*
   * 14 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.pagar()V: root-Branch
   * Goal 3. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda:<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.pagar()V: root-Branch in context: 
   * Goal 5. pagar()V_java.lang.NullPointerException_IMPLICIT
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: Line 18
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: Line 19
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: Line 20
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.pagar()V: Line 31
   * Goal 10. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V
   * Goal 11. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.pagar()V
   * Goal 12. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V
   * Goal 13. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V:19 - InsertUnaryOp Negation of importe
   * Goal 14. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.pagar()V:31 - InsertUnaryOp Negation
   */

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Deuda deuda0 = new Deuda((Jugador) null, (-2736.1281718));
      // Undeclared exception!
      try { 
        deuda0.pagar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda", e);
      }
  }

  //Test case number: 12
  /*
   * 15 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getImporteDeuda()D: root-Branch
   * Goal 3. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda:<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getImporteDeuda()D: root-Branch in context: 
   * Goal 5. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getImporteDeuda()D:Zero
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: Line 18
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: Line 19
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: Line 20
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getImporteDeuda()D: Line 27
   * Goal 10. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V
   * Goal 11. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getImporteDeuda()D
   * Goal 12. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V
   * Goal 13. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getImporteDeuda()D
   * Goal 14. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.<init>(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V:19 - InsertUnaryOp Negation of importe
   * Goal 15. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Deuda.getImporteDeuda()D:27 - InsertUnaryOp Negation
   */

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Jugador jugador0 = new Jugador("6ULM!+g1-");
      Deuda deuda0 = new Deuda(jugador0, 0.0);
      double double0 = deuda0.getImporteDeuda();
      assertEquals(0.0, double0, 0.01);
  }
}
