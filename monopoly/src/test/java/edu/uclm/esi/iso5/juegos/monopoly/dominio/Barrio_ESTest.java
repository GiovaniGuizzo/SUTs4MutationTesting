/*
 * This file was automatically generated by EvoSuite
 * Wed Jun 01 19:18:39 GMT 2016
 */

package edu.uclm.esi.iso5.juegos.monopoly.dominio;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio;
import edu.uclm.esi.iso5.juegos.monopoly.dominio.Calle;
import edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador;
import java.awt.Color;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class Barrio_ESTest extends Barrio_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 47 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.addCalle(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Calle;)V: root-Branch
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I: I13 Branch 3 IF_ICMPGE L32 - true
   * Goal 4. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I: I13 Branch 3 IF_ICMPGE L32 - false
   * Goal 5. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.addCalle(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Calle;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio:addCalle(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Calle;)V
   * Goal 6. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio:<init>(Ljava/awt/Color;)V
   * Goal 7. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I: I13 Branch 3 IF_ICMPGE L32 - true in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio:numeroDeCasas()I
   * Goal 8. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I: I13 Branch 3 IF_ICMPGE L32 - false in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio:numeroDeCasas()I
   * Goal 9. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:Zero
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: Line 12
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: Line 13
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: Line 14
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.addCalle(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Calle;)V: Line 17
   * Goal 14. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.addCalle(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Calle;)V: Line 18
   * Goal 15. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I: Line 31
   * Goal 16. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I: Line 32
   * Goal 17. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I: Line 33
   * Goal 18. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I: Line 34
   * Goal 19. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I: Line 36
   * Goal 20. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V
   * Goal 21. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.addCalle(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Calle;)V
   * Goal 22. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I
   * Goal 23. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V
   * Goal 24. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.addCalle(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Calle;)V
   * Goal 25. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I
   * Goal 26. Weak Mutation 13: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:31 - ReplaceConstant - 0 -> 1
   * Goal 27. Weak Mutation 14: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:32 - ReplaceConstant - 0 -> 1
   * Goal 28. Weak Mutation 15: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:32 - ReplaceVariable i -> r
   * Goal 29. Weak Mutation 16: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:32 - InsertUnaryOp Negation of i
   * Goal 30. Weak Mutation 17: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:32 - InsertUnaryOp IINC 1 i
   * Goal 31. Weak Mutation 18: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:32 - InsertUnaryOp IINC -1 i
   * Goal 32. Weak Mutation 19: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:32 - ReplaceComparisonOperator >= -> -1
   * Goal 33. Weak Mutation 20: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:32 - ReplaceComparisonOperator >= -> >
   * Goal 34. Weak Mutation 34: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:32 - ReplaceVariable i -> r
   * Goal 35. Weak Mutation 22: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:33 - ReplaceVariable i -> r
   * Goal 36. Weak Mutation 23: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:33 - InsertUnaryOp Negation of i
   * Goal 37. Weak Mutation 24: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:33 - InsertUnaryOp IINC 1 i
   * Goal 38. Weak Mutation 25: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:33 - InsertUnaryOp IINC -1 i
   * Goal 39. Weak Mutation 26: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:34 - ReplaceVariable r -> i
   * Goal 40. Weak Mutation 27: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:34 - InsertUnaryOp Negation of r
   * Goal 41. Weak Mutation 28: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:34 - InsertUnaryOp IINC 1 r
   * Goal 42. Weak Mutation 29: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:34 - InsertUnaryOp IINC -1 r
   * Goal 43. Weak Mutation 30: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:34 - ReplaceArithmeticOperator + -> %
   * Goal 44. Weak Mutation 33: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:34 - ReplaceArithmeticOperator + -> /
   * Goal 45. Weak Mutation 35: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:36 - InsertUnaryOp Negation of r
   * Goal 46. Weak Mutation 36: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:36 - InsertUnaryOp IINC 1 r
   * Goal 47. Weak Mutation 37: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:36 - InsertUnaryOp IINC -1 r
   */

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Color color0 = Color.YELLOW;
      Barrio barrio0 = new Barrio(color0);
      Calle calle0 = new Calle((String) null, (-562.076596849411), barrio0, (-107), (-562.076596849411), (-562.076596849411), (-562.076596849411), 0.0, (-562.076596849411), 0.0, (-562.076596849411));
      barrio0.addCalle(calle0);
      int int0 = barrio0.numeroDeCasas();
      assertEquals(0, int0);
  }

  //Test case number: 1
  /*
   * 43 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.addCalle(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Calle;)V: root-Branch
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I: I13 Branch 3 IF_ICMPGE L32 - true
   * Goal 4. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I: I13 Branch 3 IF_ICMPGE L32 - false
   * Goal 5. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio:<init>(Ljava/awt/Color;)V
   * Goal 6. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I: I13 Branch 3 IF_ICMPGE L32 - true in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio:numeroDeCasas()I
   * Goal 7. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I: I13 Branch 3 IF_ICMPGE L32 - false in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio:numeroDeCasas()I
   * Goal 8. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:Positive
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: Line 12
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: Line 13
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: Line 14
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.addCalle(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Calle;)V: Line 17
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.addCalle(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Calle;)V: Line 18
   * Goal 14. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I: Line 31
   * Goal 15. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I: Line 32
   * Goal 16. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I: Line 33
   * Goal 17. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I: Line 34
   * Goal 18. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I: Line 36
   * Goal 19. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V
   * Goal 20. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I
   * Goal 21. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V
   * Goal 22. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I
   * Goal 23. Weak Mutation 13: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:31 - ReplaceConstant - 0 -> 1
   * Goal 24. Weak Mutation 14: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:32 - ReplaceConstant - 0 -> 1
   * Goal 25. Weak Mutation 16: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:32 - InsertUnaryOp Negation of i
   * Goal 26. Weak Mutation 17: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:32 - InsertUnaryOp IINC 1 i
   * Goal 27. Weak Mutation 18: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:32 - InsertUnaryOp IINC -1 i
   * Goal 28. Weak Mutation 19: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:32 - ReplaceComparisonOperator >= -> -1
   * Goal 29. Weak Mutation 20: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:32 - ReplaceComparisonOperator >= -> >
   * Goal 30. Weak Mutation 34: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:32 - ReplaceVariable i -> r
   * Goal 31. Weak Mutation 23: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:33 - InsertUnaryOp Negation of i
   * Goal 32. Weak Mutation 24: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:33 - InsertUnaryOp IINC 1 i
   * Goal 33. Weak Mutation 25: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:33 - InsertUnaryOp IINC -1 i
   * Goal 34. Weak Mutation 27: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:34 - InsertUnaryOp Negation of r
   * Goal 35. Weak Mutation 28: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:34 - InsertUnaryOp IINC 1 r
   * Goal 36. Weak Mutation 29: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:34 - InsertUnaryOp IINC -1 r
   * Goal 37. Weak Mutation 30: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:34 - ReplaceArithmeticOperator + -> %
   * Goal 38. Weak Mutation 31: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:34 - ReplaceArithmeticOperator + -> -
   * Goal 39. Weak Mutation 32: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:34 - ReplaceArithmeticOperator + -> *
   * Goal 40. Weak Mutation 33: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:34 - ReplaceArithmeticOperator + -> /
   * Goal 41. Weak Mutation 35: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:36 - InsertUnaryOp Negation of r
   * Goal 42. Weak Mutation 36: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:36 - InsertUnaryOp IINC 1 r
   * Goal 43. Weak Mutation 37: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:36 - InsertUnaryOp IINC -1 r
   */

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Color color0 = Color.GRAY;
      Barrio barrio0 = new Barrio(color0);
      Calle calle0 = new Calle("TOAVBPS#", 26.0, barrio0, (-1), 26.0, 26.0, (double) (-1), (double) (-1), (double) (-1), 26.0, 0.0);
      calle0.quitarCasas((-1));
      int int0 = barrio0.numeroDeCasas();
      assertEquals(1, int0);
  }

  //Test case number: 2
  /*
   * 44 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.addCalle(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Calle;)V: root-Branch
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I: I13 Branch 3 IF_ICMPGE L32 - true
   * Goal 4. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I: I13 Branch 3 IF_ICMPGE L32 - false
   * Goal 5. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio:<init>(Ljava/awt/Color;)V
   * Goal 6. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I: I13 Branch 3 IF_ICMPGE L32 - true in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio:numeroDeCasas()I
   * Goal 7. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I: I13 Branch 3 IF_ICMPGE L32 - false in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio:numeroDeCasas()I
   * Goal 8. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:Negative
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: Line 12
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: Line 13
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: Line 14
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.addCalle(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Calle;)V: Line 17
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.addCalle(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Calle;)V: Line 18
   * Goal 14. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I: Line 31
   * Goal 15. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I: Line 32
   * Goal 16. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I: Line 33
   * Goal 17. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I: Line 34
   * Goal 18. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I: Line 36
   * Goal 19. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V
   * Goal 20. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I
   * Goal 21. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V
   * Goal 22. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I
   * Goal 23. Weak Mutation 13: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:31 - ReplaceConstant - 0 -> 1
   * Goal 24. Weak Mutation 14: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:32 - ReplaceConstant - 0 -> 1
   * Goal 25. Weak Mutation 15: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:32 - ReplaceVariable i -> r
   * Goal 26. Weak Mutation 16: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:32 - InsertUnaryOp Negation of i
   * Goal 27. Weak Mutation 17: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:32 - InsertUnaryOp IINC 1 i
   * Goal 28. Weak Mutation 18: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:32 - InsertUnaryOp IINC -1 i
   * Goal 29. Weak Mutation 19: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:32 - ReplaceComparisonOperator >= -> -1
   * Goal 30. Weak Mutation 20: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:32 - ReplaceComparisonOperator >= -> >
   * Goal 31. Weak Mutation 34: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:32 - ReplaceVariable i -> r
   * Goal 32. Weak Mutation 23: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:33 - InsertUnaryOp Negation of i
   * Goal 33. Weak Mutation 24: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:33 - InsertUnaryOp IINC 1 i
   * Goal 34. Weak Mutation 25: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:33 - InsertUnaryOp IINC -1 i
   * Goal 35. Weak Mutation 27: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:34 - InsertUnaryOp Negation of r
   * Goal 36. Weak Mutation 28: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:34 - InsertUnaryOp IINC 1 r
   * Goal 37. Weak Mutation 29: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:34 - InsertUnaryOp IINC -1 r
   * Goal 38. Weak Mutation 30: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:34 - ReplaceArithmeticOperator + -> %
   * Goal 39. Weak Mutation 31: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:34 - ReplaceArithmeticOperator + -> -
   * Goal 40. Weak Mutation 32: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:34 - ReplaceArithmeticOperator + -> *
   * Goal 41. Weak Mutation 33: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:34 - ReplaceArithmeticOperator + -> /
   * Goal 42. Weak Mutation 35: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:36 - InsertUnaryOp Negation of r
   * Goal 43. Weak Mutation 36: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:36 - InsertUnaryOp IINC 1 r
   * Goal 44. Weak Mutation 37: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:36 - InsertUnaryOp IINC -1 r
   */

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Color color0 = Color.YELLOW;
      Barrio barrio0 = new Barrio(color0);
      Calle calle0 = new Calle((String) null, (-562.076596849411), barrio0, (-107), (-562.076596849411), (-562.076596849411), (-562.076596849411), 0.0, (-562.076596849411), 0.0, (-562.076596849411));
      calle0.edificar((-107));
      int int0 = barrio0.numeroDeCasas();
      assertEquals((-107), int0);
  }

  //Test case number: 3
  /*
   * 17 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.addCalle(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Calle;)V: root-Branch
   * Goal 3. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.addCalle(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Calle;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio:addCalle(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Calle;)V
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio:<init>(Ljava/awt/Color;)V
   * Goal 5. todasLasCallesPertenecenAlMismo()Z_java.lang.NullPointerException_IMPLICIT
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: Line 12
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: Line 13
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: Line 14
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.addCalle(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Calle;)V: Line 17
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.addCalle(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Calle;)V: Line 18
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z: Line 40
   * Goal 12. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V
   * Goal 13. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.addCalle(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Calle;)V
   * Goal 14. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z
   * Goal 15. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V
   * Goal 16. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.addCalle(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Calle;)V
   * Goal 17. Weak Mutation 38: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z:40 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Color color0 = Color.MAGENTA;
      Barrio barrio0 = new Barrio(color0);
      barrio0.addCalle((Calle) null);
      // Undeclared exception!
      try { 
        barrio0.todasLasCallesPertenecenAlMismo();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio", e);
      }
  }

  //Test case number: 4
  /*
   * 11 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: root-Branch
   * Goal 2. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio:<init>(Ljava/awt/Color;)V
   * Goal 3. todasLasCallesPertenecenAlMismo()Z_java.lang.ClassCastException_IMPLICIT
   * Goal 4. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: Line 12
   * Goal 5. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: Line 13
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: Line 14
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z: Line 40
   * Goal 8. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V
   * Goal 9. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z
   * Goal 10. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V
   * Goal 11. Weak Mutation 38: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z:40 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Barrio barrio0 = new Barrio((Color) null);
      Vector<String> vector0 = new Vector<String>();
      vector0.add("H@&qa,53n0lGU");
      barrio0.calles = vector0;
      // Undeclared exception!
      try { 
        barrio0.todasLasCallesPertenecenAlMismo();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to edu.uclm.esi.iso5.juegos.monopoly.dominio.Calle
         //
         assertThrownBy("edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio", e);
      }
  }

  //Test case number: 5
  /*
   * 11 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: root-Branch
   * Goal 2. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio:<init>(Ljava/awt/Color;)V
   * Goal 3. todasLasCallesPertenecenAlMismo()Z_java.lang.ArrayIndexOutOfBoundsException_IMPLICIT
   * Goal 4. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: Line 12
   * Goal 5. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: Line 13
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: Line 14
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z: Line 40
   * Goal 8. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V
   * Goal 9. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z
   * Goal 10. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V
   * Goal 11. Weak Mutation 38: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z:40 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Barrio barrio0 = new Barrio((Color) null);
      // Undeclared exception!
      try { 
        barrio0.todasLasCallesPertenecenAlMismo();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         assertThrownBy("java.util.Vector", e);
      }
  }

  //Test case number: 6
  /*
   * 23 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I: I13 Branch 3 IF_ICMPGE L32 - false
   * Goal 3. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio:<init>(Ljava/awt/Color;)V
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I: I13 Branch 3 IF_ICMPGE L32 - false in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio:numeroDeCasas()I
   * Goal 5. numeroDeCasas()I_java.lang.ClassCastException_IMPLICIT
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: Line 12
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: Line 13
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: Line 14
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I: Line 31
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I: Line 32
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I: Line 33
   * Goal 12. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V
   * Goal 13. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I
   * Goal 14. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V
   * Goal 15. Weak Mutation 13: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:31 - ReplaceConstant - 0 -> 1
   * Goal 16. Weak Mutation 14: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:32 - ReplaceConstant - 0 -> 1
   * Goal 17. Weak Mutation 16: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:32 - InsertUnaryOp Negation of i
   * Goal 18. Weak Mutation 17: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:32 - InsertUnaryOp IINC 1 i
   * Goal 19. Weak Mutation 18: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:32 - InsertUnaryOp IINC -1 i
   * Goal 20. Weak Mutation 19: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:32 - ReplaceComparisonOperator >= -> -1
   * Goal 21. Weak Mutation 23: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:33 - InsertUnaryOp Negation of i
   * Goal 22. Weak Mutation 24: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:33 - InsertUnaryOp IINC 1 i
   * Goal 23. Weak Mutation 25: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.numeroDeCasas()I:33 - InsertUnaryOp IINC -1 i
   */

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Color color0 = Color.RED;
      Barrio barrio0 = new Barrio(color0);
      Vector<Integer> vector0 = new Vector<Integer>();
      Integer integer0 = new Integer(0);
      vector0.add(integer0);
      barrio0.calles = vector0;
      // Undeclared exception!
      try { 
        barrio0.numeroDeCasas();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Integer cannot be cast to edu.uclm.esi.iso5.juegos.monopoly.dominio.Calle
         //
         assertThrownBy("edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio", e);
      }
  }

  //Test case number: 7
  /*
   * 14 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: root-Branch
   * Goal 2. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio:<init>(Ljava/awt/Color;)V
   * Goal 3. algunaCasillaEstaHipotecada()Z_java.lang.NullPointerException_IMPLICIT
   * Goal 4. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: Line 12
   * Goal 5. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: Line 13
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: Line 14
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.algunaCasillaEstaHipotecada()Z: Line 21
   * Goal 8. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V
   * Goal 9. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.algunaCasillaEstaHipotecada()Z
   * Goal 10. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V
   * Goal 11. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.algunaCasillaEstaHipotecada()Z:21 - ReplaceConstant - 0 -> 1
   * Goal 12. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.algunaCasillaEstaHipotecada()Z:21 - InsertUnaryOp Negation of i
   * Goal 13. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.algunaCasillaEstaHipotecada()Z:21 - InsertUnaryOp IINC 1 i
   * Goal 14. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.algunaCasillaEstaHipotecada()Z:21 - InsertUnaryOp IINC -1 i
   */

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Color color0 = Color.green;
      Barrio barrio0 = new Barrio(color0);
      barrio0.calles = null;
      // Undeclared exception!
      try { 
        barrio0.algunaCasillaEstaHipotecada();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio", e);
      }
  }

  //Test case number: 8
  /*
   * 21 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.algunaCasillaEstaHipotecada()Z: I9 Branch 1 IF_ICMPGE L21 - false
   * Goal 3. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio:<init>(Ljava/awt/Color;)V
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.algunaCasillaEstaHipotecada()Z: I9 Branch 1 IF_ICMPGE L21 - false in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio:algunaCasillaEstaHipotecada()Z
   * Goal 5. algunaCasillaEstaHipotecada()Z_java.lang.ClassCastException_IMPLICIT
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: Line 12
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: Line 13
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: Line 14
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.algunaCasillaEstaHipotecada()Z: Line 21
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.algunaCasillaEstaHipotecada()Z: Line 22
   * Goal 11. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V
   * Goal 12. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.algunaCasillaEstaHipotecada()Z
   * Goal 13. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V
   * Goal 14. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.algunaCasillaEstaHipotecada()Z:21 - ReplaceConstant - 0 -> 1
   * Goal 15. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.algunaCasillaEstaHipotecada()Z:21 - InsertUnaryOp Negation of i
   * Goal 16. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.algunaCasillaEstaHipotecada()Z:21 - InsertUnaryOp IINC 1 i
   * Goal 17. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.algunaCasillaEstaHipotecada()Z:21 - InsertUnaryOp IINC -1 i
   * Goal 18. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.algunaCasillaEstaHipotecada()Z:21 - ReplaceComparisonOperator >= -> -1
   * Goal 19. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.algunaCasillaEstaHipotecada()Z:22 - InsertUnaryOp Negation of i
   * Goal 20. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.algunaCasillaEstaHipotecada()Z:22 - InsertUnaryOp IINC 1 i
   * Goal 21. Weak Mutation 9: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.algunaCasillaEstaHipotecada()Z:22 - InsertUnaryOp IINC -1 i
   */

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Color color0 = Color.darkGray;
      Barrio barrio0 = new Barrio(color0);
      Vector<String> vector0 = new Vector<String>();
      vector0.add("");
      barrio0.calles = vector0;
      // Undeclared exception!
      try { 
        barrio0.algunaCasillaEstaHipotecada();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to edu.uclm.esi.iso5.juegos.monopoly.dominio.Calle
         //
         assertThrownBy("edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio", e);
      }
  }

  //Test case number: 9
  /*
   * 12 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.addCalle(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Calle;)V: root-Branch
   * Goal 3. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.addCalle(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Calle;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio:addCalle(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Calle;)V
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio:<init>(Ljava/awt/Color;)V
   * Goal 5. addCalle(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Calle;)V_java.lang.NullPointerException_IMPLICIT
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: Line 12
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: Line 13
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: Line 14
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.addCalle(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Calle;)V: Line 17
   * Goal 10. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V
   * Goal 11. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.addCalle(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Calle;)V
   * Goal 12. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V
   */

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Barrio barrio0 = new Barrio((Color) null);
      barrio0.calles = null;
      // Undeclared exception!
      try { 
        barrio0.addCalle((Calle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio", e);
      }
  }

  //Test case number: 10
  /*
   * 42 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.addCalle(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Calle;)V: root-Branch
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z: I12 Branch 4 IFNONNULL L41 - true
   * Goal 4. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z: I26 Branch 5 IF_ICMPGE L44 - false
   * Goal 5. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z: I39 Branch 6 IFNULL L46 - true
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z: I39 Branch 6 IFNULL L46 - false
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z: I43 Branch 7 IF_ACMPEQ L46 - true
   * Goal 8. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio:<init>(Ljava/awt/Color;)V
   * Goal 9. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z: I12 Branch 4 IFNONNULL L41 - true in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio:todasLasCallesPertenecenAlMismo()Z
   * Goal 10. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z: I26 Branch 5 IF_ICMPGE L44 - false in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio:todasLasCallesPertenecenAlMismo()Z
   * Goal 11. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z: I39 Branch 6 IFNULL L46 - true in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio:todasLasCallesPertenecenAlMismo()Z
   * Goal 12. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z: I43 Branch 7 IF_ACMPEQ L46 - true in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio:todasLasCallesPertenecenAlMismo()Z
   * Goal 13. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z: I39 Branch 6 IFNULL L46 - false in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio:todasLasCallesPertenecenAlMismo()Z
   * Goal 14. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z:False
   * Goal 15. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: Line 12
   * Goal 16. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: Line 13
   * Goal 17. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: Line 14
   * Goal 18. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.addCalle(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Calle;)V: Line 17
   * Goal 19. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.addCalle(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Calle;)V: Line 18
   * Goal 20. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z: Line 40
   * Goal 21. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z: Line 41
   * Goal 22. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z: Line 44
   * Goal 23. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z: Line 45
   * Goal 24. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z: Line 46
   * Goal 25. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z: Line 47
   * Goal 26. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V
   * Goal 27. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z
   * Goal 28. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V
   * Goal 29. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z
   * Goal 30. Weak Mutation 38: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z:40 - ReplaceConstant - 0 -> 1
   * Goal 31. Weak Mutation 39: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z:41 - ReplaceComparisonOperator != null -> = null
   * Goal 32. Weak Mutation 41: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z:44 - ReplaceConstant - 0 -> 1
   * Goal 33. Weak Mutation 42: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z:44 - InsertUnaryOp Negation of i
   * Goal 34. Weak Mutation 43: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z:44 - InsertUnaryOp IINC 1 i
   * Goal 35. Weak Mutation 44: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z:44 - InsertUnaryOp IINC -1 i
   * Goal 36. Weak Mutation 45: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z:44 - ReplaceComparisonOperator >= -> -1
   * Goal 37. Weak Mutation 48: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z:45 - InsertUnaryOp Negation of i
   * Goal 38. Weak Mutation 49: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z:45 - InsertUnaryOp IINC 1 i
   * Goal 39. Weak Mutation 50: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z:45 - InsertUnaryOp IINC -1 i
   * Goal 40. Weak Mutation 51: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z:46 - ReplaceComparisonOperator = null -> != null
   * Goal 41. Weak Mutation 52: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z:46 - ReplaceComparisonOperator == -> !=
   * Goal 42. Weak Mutation 53: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z:47 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Color color0 = Color.GRAY;
      Barrio barrio0 = new Barrio(color0);
      Calle calle0 = new Calle("THNOVS#", 16.67901767863659, barrio0, (-1), 16.67901767863659, 16.67901767863659, (double) (-1), (double) (-1), (double) (-1), 16.67901767863659, 16.67901767863659);
      Calle calle1 = new Calle("THNOVS#", (double) (-1), barrio0, (-1), (double) (-1), (double) (-1), 16.67901767863659, 16.67901767863659, 16.67901767863659, 16.67901767863659, 16.67901767863659);
      Jugador jugador0 = new Jugador("THNOVS#");
      calle0.setPropietario(jugador0);
      boolean boolean0 = barrio0.todasLasCallesPertenecenAlMismo();
      assertFalse(boolean0);
  }

  //Test case number: 11
  /*
   * 21 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.addCalle(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Calle;)V: root-Branch
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z: I12 Branch 4 IFNONNULL L41 - false
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio:<init>(Ljava/awt/Color;)V
   * Goal 5. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z: I12 Branch 4 IFNONNULL L41 - false in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio:todasLasCallesPertenecenAlMismo()Z
   * Goal 6. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z:False
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: Line 12
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: Line 13
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: Line 14
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.addCalle(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Calle;)V: Line 17
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.addCalle(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Calle;)V: Line 18
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z: Line 40
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z: Line 41
   * Goal 14. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z: Line 42
   * Goal 15. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V
   * Goal 16. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z
   * Goal 17. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V
   * Goal 18. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z
   * Goal 19. Weak Mutation 38: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z:40 - ReplaceConstant - 0 -> 1
   * Goal 20. Weak Mutation 39: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z:41 - ReplaceComparisonOperator != null -> = null
   * Goal 21. Weak Mutation 40: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z:42 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Color color0 = Color.orange;
      Barrio barrio0 = new Barrio(color0);
      Calle calle0 = new Calle("I99^^FQV", (double) 0, barrio0, 0, (double) 0, (double) 0, (double) 0, (double) 0, (double) 0, (double) 0, (double) 0);
      boolean boolean0 = barrio0.todasLasCallesPertenecenAlMismo();
      assertFalse(boolean0);
  }

  //Test case number: 12
  /*
   * 43 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.addCalle(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Calle;)V: root-Branch
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z: I12 Branch 4 IFNONNULL L41 - true
   * Goal 4. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z: I26 Branch 5 IF_ICMPGE L44 - true
   * Goal 5. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z: I26 Branch 5 IF_ICMPGE L44 - false
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z: I39 Branch 6 IFNULL L46 - false
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z: I43 Branch 7 IF_ACMPEQ L46 - true
   * Goal 8. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio:<init>(Ljava/awt/Color;)V
   * Goal 9. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z: I12 Branch 4 IFNONNULL L41 - true in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio:todasLasCallesPertenecenAlMismo()Z
   * Goal 10. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z: I26 Branch 5 IF_ICMPGE L44 - true in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio:todasLasCallesPertenecenAlMismo()Z
   * Goal 11. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z: I26 Branch 5 IF_ICMPGE L44 - false in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio:todasLasCallesPertenecenAlMismo()Z
   * Goal 12. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z: I43 Branch 7 IF_ACMPEQ L46 - true in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio:todasLasCallesPertenecenAlMismo()Z
   * Goal 13. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z: I39 Branch 6 IFNULL L46 - false in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio:todasLasCallesPertenecenAlMismo()Z
   * Goal 14. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z:True
   * Goal 15. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: Line 12
   * Goal 16. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: Line 13
   * Goal 17. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: Line 14
   * Goal 18. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.addCalle(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Calle;)V: Line 17
   * Goal 19. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.addCalle(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Calle;)V: Line 18
   * Goal 20. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z: Line 40
   * Goal 21. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z: Line 41
   * Goal 22. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z: Line 44
   * Goal 23. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z: Line 45
   * Goal 24. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z: Line 46
   * Goal 25. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z: Line 50
   * Goal 26. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V
   * Goal 27. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z
   * Goal 28. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V
   * Goal 29. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z
   * Goal 30. Weak Mutation 38: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z:40 - ReplaceConstant - 0 -> 1
   * Goal 31. Weak Mutation 39: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z:41 - ReplaceComparisonOperator != null -> = null
   * Goal 32. Weak Mutation 41: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z:44 - ReplaceConstant - 0 -> 1
   * Goal 33. Weak Mutation 42: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z:44 - InsertUnaryOp Negation of i
   * Goal 34. Weak Mutation 43: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z:44 - InsertUnaryOp IINC 1 i
   * Goal 35. Weak Mutation 44: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z:44 - InsertUnaryOp IINC -1 i
   * Goal 36. Weak Mutation 45: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z:44 - ReplaceComparisonOperator >= -> -1
   * Goal 37. Weak Mutation 46: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z:44 - ReplaceComparisonOperator >= -> >
   * Goal 38. Weak Mutation 48: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z:45 - InsertUnaryOp Negation of i
   * Goal 39. Weak Mutation 49: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z:45 - InsertUnaryOp IINC 1 i
   * Goal 40. Weak Mutation 50: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z:45 - InsertUnaryOp IINC -1 i
   * Goal 41. Weak Mutation 51: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z:46 - ReplaceComparisonOperator = null -> != null
   * Goal 42. Weak Mutation 52: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z:46 - ReplaceComparisonOperator == -> !=
   * Goal 43. Weak Mutation 54: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.todasLasCallesPertenecenAlMismo()Z:50 - ReplaceConstant - 1 -> 0
   */

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Color color0 = Color.GRAY;
      Barrio barrio0 = new Barrio(color0);
      Calle calle0 = new Calle("TOAVBPS#", 26.0, barrio0, (-1), 26.0, 26.0, (double) (-1), (double) (-1), (double) (-1), 26.0, 0.0);
      Jugador jugador0 = new Jugador("TOAVBPS#");
      calle0.setPropietario(jugador0);
      boolean boolean0 = barrio0.todasLasCallesPertenecenAlMismo();
      assertTrue(boolean0);
  }

  //Test case number: 13
  /*
   * 31 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.addCalle(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Calle;)V: root-Branch
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.algunaCasillaEstaHipotecada()Z: I9 Branch 1 IF_ICMPGE L21 - false
   * Goal 4. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.algunaCasillaEstaHipotecada()Z: I22 Branch 2 IFEQ L23 - false
   * Goal 5. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio:<init>(Ljava/awt/Color;)V
   * Goal 6. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.algunaCasillaEstaHipotecada()Z: I9 Branch 1 IF_ICMPGE L21 - false in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio:algunaCasillaEstaHipotecada()Z
   * Goal 7. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.algunaCasillaEstaHipotecada()Z: I22 Branch 2 IFEQ L23 - false in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio:algunaCasillaEstaHipotecada()Z
   * Goal 8. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.algunaCasillaEstaHipotecada()Z:True
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: Line 12
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: Line 13
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: Line 14
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.addCalle(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Calle;)V: Line 17
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.addCalle(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Calle;)V: Line 18
   * Goal 14. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.algunaCasillaEstaHipotecada()Z: Line 21
   * Goal 15. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.algunaCasillaEstaHipotecada()Z: Line 22
   * Goal 16. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.algunaCasillaEstaHipotecada()Z: Line 23
   * Goal 17. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.algunaCasillaEstaHipotecada()Z: Line 24
   * Goal 18. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V
   * Goal 19. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.algunaCasillaEstaHipotecada()Z
   * Goal 20. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V
   * Goal 21. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.algunaCasillaEstaHipotecada()Z
   * Goal 22. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.algunaCasillaEstaHipotecada()Z:21 - ReplaceConstant - 0 -> 1
   * Goal 23. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.algunaCasillaEstaHipotecada()Z:21 - InsertUnaryOp Negation of i
   * Goal 24. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.algunaCasillaEstaHipotecada()Z:21 - InsertUnaryOp IINC 1 i
   * Goal 25. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.algunaCasillaEstaHipotecada()Z:21 - InsertUnaryOp IINC -1 i
   * Goal 26. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.algunaCasillaEstaHipotecada()Z:21 - ReplaceComparisonOperator >= -> -1
   * Goal 27. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.algunaCasillaEstaHipotecada()Z:22 - InsertUnaryOp Negation of i
   * Goal 28. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.algunaCasillaEstaHipotecada()Z:22 - InsertUnaryOp IINC 1 i
   * Goal 29. Weak Mutation 9: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.algunaCasillaEstaHipotecada()Z:22 - InsertUnaryOp IINC -1 i
   * Goal 30. Weak Mutation 10: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.algunaCasillaEstaHipotecada()Z:23 - ReplaceComparisonOperator == -> !=
   * Goal 31. Weak Mutation 11: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.algunaCasillaEstaHipotecada()Z:24 - ReplaceConstant - 1 -> 0
   */

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Color color0 = Color.DARK_GRAY;
      Barrio barrio0 = new Barrio(color0);
      Calle calle0 = new Calle("; precio=", 1535.0623333572767, barrio0, 38, (double) 38, (double) 38, (double) 38, (double) 38, (double) 38, 1535.0623333572767, (double) 38);
      calle0.estaHipotecada = true;
      boolean boolean0 = barrio0.algunaCasillaEstaHipotecada();
      assertTrue(boolean0);
  }

  //Test case number: 14
  /*
   * 34 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.addCalle(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Calle;)V: root-Branch
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.algunaCasillaEstaHipotecada()Z: I9 Branch 1 IF_ICMPGE L21 - true
   * Goal 4. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.algunaCasillaEstaHipotecada()Z: I9 Branch 1 IF_ICMPGE L21 - false
   * Goal 5. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.algunaCasillaEstaHipotecada()Z: I22 Branch 2 IFEQ L23 - true
   * Goal 6. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio:<init>(Ljava/awt/Color;)V
   * Goal 7. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.algunaCasillaEstaHipotecada()Z: I9 Branch 1 IF_ICMPGE L21 - true in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio:algunaCasillaEstaHipotecada()Z
   * Goal 8. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.algunaCasillaEstaHipotecada()Z: I9 Branch 1 IF_ICMPGE L21 - false in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio:algunaCasillaEstaHipotecada()Z
   * Goal 9. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.algunaCasillaEstaHipotecada()Z: I22 Branch 2 IFEQ L23 - true in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio:algunaCasillaEstaHipotecada()Z
   * Goal 10. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.algunaCasillaEstaHipotecada()Z:False
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: Line 12
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: Line 13
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V: Line 14
   * Goal 14. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.addCalle(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Calle;)V: Line 17
   * Goal 15. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.addCalle(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Calle;)V: Line 18
   * Goal 16. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.algunaCasillaEstaHipotecada()Z: Line 21
   * Goal 17. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.algunaCasillaEstaHipotecada()Z: Line 22
   * Goal 18. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.algunaCasillaEstaHipotecada()Z: Line 23
   * Goal 19. edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.algunaCasillaEstaHipotecada()Z: Line 27
   * Goal 20. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V
   * Goal 21. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.algunaCasillaEstaHipotecada()Z
   * Goal 22. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.<init>(Ljava/awt/Color;)V
   * Goal 23. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.algunaCasillaEstaHipotecada()Z
   * Goal 24. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.algunaCasillaEstaHipotecada()Z:21 - ReplaceConstant - 0 -> 1
   * Goal 25. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.algunaCasillaEstaHipotecada()Z:21 - InsertUnaryOp Negation of i
   * Goal 26. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.algunaCasillaEstaHipotecada()Z:21 - InsertUnaryOp IINC 1 i
   * Goal 27. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.algunaCasillaEstaHipotecada()Z:21 - InsertUnaryOp IINC -1 i
   * Goal 28. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.algunaCasillaEstaHipotecada()Z:21 - ReplaceComparisonOperator >= -> -1
   * Goal 29. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.algunaCasillaEstaHipotecada()Z:21 - ReplaceComparisonOperator >= -> >
   * Goal 30. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.algunaCasillaEstaHipotecada()Z:22 - InsertUnaryOp Negation of i
   * Goal 31. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.algunaCasillaEstaHipotecada()Z:22 - InsertUnaryOp IINC 1 i
   * Goal 32. Weak Mutation 9: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.algunaCasillaEstaHipotecada()Z:22 - InsertUnaryOp IINC -1 i
   * Goal 33. Weak Mutation 10: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.algunaCasillaEstaHipotecada()Z:23 - ReplaceComparisonOperator == -> !=
   * Goal 34. Weak Mutation 12: edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio.algunaCasillaEstaHipotecada()Z:27 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Color color0 = Color.darkGray;
      Barrio barrio0 = new Barrio(color0);
      Calle calle0 = new Calle((String) null, 2804.7958812041793, barrio0, 0, 1999.55533215669, 1275.0, 1999.55533215669, 2804.7958812041793, (-3784.447009792102), 1275.0, 0.0);
      boolean boolean0 = barrio0.algunaCasillaEstaHipotecada();
      assertFalse(boolean0);
  }
}
