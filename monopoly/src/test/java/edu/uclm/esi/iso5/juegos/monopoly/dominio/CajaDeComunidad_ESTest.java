/*
 * This file was automatically generated by EvoSuite
 * Wed Jun 01 19:19:48 GMT 2016
 */

package edu.uclm.esi.iso5.juegos.monopoly.dominio;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.uclm.esi.iso5.juegos.monopoly.dominio.CajaDeComunidad;
import edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador;
import edu.uclm.esi.iso5.juegos.monopoly.dominio.Tablero;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CajaDeComunidad_ESTest extends CajaDeComunidad_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 42 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.CajaDeComunidad.<init>(I)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.CajaDeComunidad.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: I11 Branch 1 IFEQ L13 - true
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.CajaDeComunidad.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: I11 Branch 1 IFEQ L13 - false
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.CajaDeComunidad.<init>(I)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.CajaDeComunidad:<init>(I)V
   * Goal 5. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.CajaDeComunidad.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: I11 Branch 1 IFEQ L13 - false in context: 
   * Goal 6. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.CajaDeComunidad.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: I11 Branch 1 IFEQ L13 - true in context: 
   * Goal 7. operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I_java.lang.NullPointerException_IMPLICIT
   * Goal 8. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.CajaDeComunidad.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:Positive
   * Goal 9. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.CajaDeComunidad.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:Zero
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.CajaDeComunidad.<init>(I)V: Line 9
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.CajaDeComunidad.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: Line 12
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.CajaDeComunidad.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: Line 13
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.CajaDeComunidad.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: Line 14
   * Goal 14. edu.uclm.esi.iso5.juegos.monopoly.dominio.CajaDeComunidad.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: Line 16
   * Goal 15. edu.uclm.esi.iso5.juegos.monopoly.dominio.CajaDeComunidad.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: Line 17
   * Goal 16. edu.uclm.esi.iso5.juegos.monopoly.dominio.CajaDeComunidad.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: Line 19
   * Goal 17. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.CajaDeComunidad.<init>(I)V
   * Goal 18. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.CajaDeComunidad.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I
   * Goal 19. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.CajaDeComunidad.<init>(I)V
   * Goal 20. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.CajaDeComunidad.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I
   * Goal 21. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.CajaDeComunidad.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:12 - ReplaceConstant - 2 -> 0
   * Goal 22. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.CajaDeComunidad.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:12 - ReplaceConstant - 2 -> 1
   * Goal 23. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.CajaDeComunidad.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:12 - ReplaceConstant - 2 -> -1
   * Goal 24. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.CajaDeComunidad.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:12 - ReplaceConstant - 2 -> 3
   * Goal 25. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.CajaDeComunidad.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:13 - ReplaceComparisonOperator == -> !=
   * Goal 26. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.CajaDeComunidad.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:14 - ReplaceConstant - 2 -> 0
   * Goal 27. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.CajaDeComunidad.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:14 - ReplaceConstant - 2 -> 1
   * Goal 28. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.CajaDeComunidad.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:14 - ReplaceConstant - 2 -> -1
   * Goal 29. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.CajaDeComunidad.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:14 - ReplaceConstant - 2 -> 3
   * Goal 30. Weak Mutation 9: edu.uclm.esi.iso5.juegos.monopoly.dominio.CajaDeComunidad.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:16 - ReplaceConstant - 2 -> 0
   * Goal 31. Weak Mutation 10: edu.uclm.esi.iso5.juegos.monopoly.dominio.CajaDeComunidad.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:16 - ReplaceConstant - 2 -> 1
   * Goal 32. Weak Mutation 11: edu.uclm.esi.iso5.juegos.monopoly.dominio.CajaDeComunidad.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:16 - ReplaceConstant - 2 -> -1
   * Goal 33. Weak Mutation 12: edu.uclm.esi.iso5.juegos.monopoly.dominio.CajaDeComunidad.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:16 - ReplaceConstant - 2 -> 3
   * Goal 34. Weak Mutation 13: edu.uclm.esi.iso5.juegos.monopoly.dominio.CajaDeComunidad.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:17 - ReplaceConstant - 2 -> 0
   * Goal 35. Weak Mutation 14: edu.uclm.esi.iso5.juegos.monopoly.dominio.CajaDeComunidad.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:17 - ReplaceConstant - 2 -> 1
   * Goal 36. Weak Mutation 15: edu.uclm.esi.iso5.juegos.monopoly.dominio.CajaDeComunidad.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:17 - ReplaceConstant - 2 -> -1
   * Goal 37. Weak Mutation 16: edu.uclm.esi.iso5.juegos.monopoly.dominio.CajaDeComunidad.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:17 - ReplaceConstant - 2 -> 3
   * Goal 38. Weak Mutation 17: edu.uclm.esi.iso5.juegos.monopoly.dominio.CajaDeComunidad.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:19 - ReplaceVariable j -> propietario
   * Goal 39. Weak Mutation 18: edu.uclm.esi.iso5.juegos.monopoly.dominio.CajaDeComunidad.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:19 - ReplaceConstant - 2 -> 0
   * Goal 40. Weak Mutation 19: edu.uclm.esi.iso5.juegos.monopoly.dominio.CajaDeComunidad.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:19 - ReplaceConstant - 2 -> 1
   * Goal 41. Weak Mutation 20: edu.uclm.esi.iso5.juegos.monopoly.dominio.CajaDeComunidad.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:19 - ReplaceConstant - 2 -> -1
   * Goal 42. Weak Mutation 21: edu.uclm.esi.iso5.juegos.monopoly.dominio.CajaDeComunidad.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:19 - ReplaceConstant - 2 -> 3
   */

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CajaDeComunidad cajaDeComunidad0 = new CajaDeComunidad(66);
      Jugador jugador0 = new Jugador("rrer de ntanr");
      Tablero tablero0 = new Tablero();
      tablero0.addTarjetasPorDefecto();
      cajaDeComunidad0.tablero = tablero0;
      cajaDeComunidad0.operaciones(jugador0);
      cajaDeComunidad0.operaciones(jugador0);
      cajaDeComunidad0.operaciones(jugador0);
      // Undeclared exception!
      try { 
        cajaDeComunidad0.operaciones((Jugador) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.QuedaLibreDeLaCarcel", e);
      }
  }

  //Test case number: 1
  /*
   * 12 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.CajaDeComunidad.<init>(I)V: root-Branch
   * Goal 2. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.CajaDeComunidad.<init>(I)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.CajaDeComunidad:<init>(I)V
   * Goal 3. operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I_java.lang.ArrayIndexOutOfBoundsException_IMPLICIT
   * Goal 4. edu.uclm.esi.iso5.juegos.monopoly.dominio.CajaDeComunidad.<init>(I)V: Line 9
   * Goal 5. edu.uclm.esi.iso5.juegos.monopoly.dominio.CajaDeComunidad.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I: Line 12
   * Goal 6. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.CajaDeComunidad.<init>(I)V
   * Goal 7. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.CajaDeComunidad.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I
   * Goal 8. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.CajaDeComunidad.<init>(I)V
   * Goal 9. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.CajaDeComunidad.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:12 - ReplaceConstant - 2 -> 0
   * Goal 10. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.CajaDeComunidad.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:12 - ReplaceConstant - 2 -> 1
   * Goal 11. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.CajaDeComunidad.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:12 - ReplaceConstant - 2 -> -1
   * Goal 12. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.CajaDeComunidad.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)I:12 - ReplaceConstant - 2 -> 3
   */

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CajaDeComunidad cajaDeComunidad0 = new CajaDeComunidad((-2428));
      Tablero tablero0 = new Tablero();
      cajaDeComunidad0.tablero = tablero0;
      // Undeclared exception!
      try { 
        cajaDeComunidad0.operaciones((Jugador) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         assertThrownBy("java.util.Vector", e);
      }
  }
}
