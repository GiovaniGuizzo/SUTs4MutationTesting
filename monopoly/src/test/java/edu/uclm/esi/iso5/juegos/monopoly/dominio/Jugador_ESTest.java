/*
 * This file was automatically generated by EvoSuite
 * Wed Jun 01 19:34:47 GMT 2016
 */

package edu.uclm.esi.iso5.juegos.monopoly.dominio;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.uclm.esi.iso5.juegos.monopoly.dominio.Barrio;
import edu.uclm.esi.iso5.juegos.monopoly.dominio.Calle;
import edu.uclm.esi.iso5.juegos.monopoly.dominio.CasillaConPrecio;
import edu.uclm.esi.iso5.juegos.monopoly.dominio.Compania;
import edu.uclm.esi.iso5.juegos.monopoly.dominio.Dados;
import edu.uclm.esi.iso5.juegos.monopoly.dominio.Estacion;
import edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador;
import edu.uclm.esi.iso5.juegos.monopoly.dominio.Parking;
import edu.uclm.esi.iso5.juegos.monopoly.dominio.Tablero;
import edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta;
import java.awt.Color;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.TooManyResourcesException;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class Jugador_ESTest extends Jugador_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 70 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getCapital()D: root-Branch
   * Goal 4. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addPosesion(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: root-Branch
   * Goal 5. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeCompanias()I: I13 Branch 61 IF_ICMPGE L485 - true
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeCompanias()I: I13 Branch 61 IF_ICMPGE L485 - false
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeCompanias()I: I26 Branch 62 IFEQ L487 - true
   * Goal 8. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addPosesion(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:addPosesion(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V
   * Goal 9. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:<init>(Ljava/lang/String;)V
   * Goal 10. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeCompanias()I: I13 Branch 61 IF_ICMPGE L485 - true in context: 
   * Goal 11. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeCompanias()I: I13 Branch 61 IF_ICMPGE L485 - false in context: 
   * Goal 12. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeCompanias()I: I26 Branch 62 IFEQ L487 - true in context: 
   * Goal 13. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeCompanias()I:Zero
   * Goal 14. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 48
   * Goal 15. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 49
   * Goal 16. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 50
   * Goal 17. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 51
   * Goal 18. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 52
   * Goal 19. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 53
   * Goal 20. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 54
   * Goal 21. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addPosesion(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: Line 222
   * Goal 22. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addPosesion(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: Line 223
   * Goal 23. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addPosesion(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: Line 224
   * Goal 24. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V: Line 148
   * Goal 25. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V: Line 149
   * Goal 26. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getCapital()D: Line 140
   * Goal 27. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeCompanias()I: Line 484
   * Goal 28. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeCompanias()I: Line 485
   * Goal 29. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeCompanias()I: Line 486
   * Goal 30. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeCompanias()I: Line 487
   * Goal 31. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeCompanias()I: Line 490
   * Goal 32. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 33. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addPosesion(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V
   * Goal 34. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeCompanias()I
   * Goal 35. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 36. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addPosesion(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V
   * Goal 37. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeCompanias()I
   * Goal 38. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 0.0
   * Goal 39. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1.0
   * Goal 40. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> -1.0
   * Goal 41. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1499.0
   * Goal 42. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1501.0
   * Goal 43. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 0
   * Goal 44. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 1
   * Goal 45. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> -1
   * Goal 46. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 3
   * Goal 47. Weak Mutation 98: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getCapital()D:140 - InsertUnaryOp Negation
   * Goal 48. Weak Mutation 99: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V:148 - InsertUnaryOp Negation
   * Goal 49. Weak Mutation 100: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V:148 - InsertUnaryOp Negation of importe
   * Goal 50. Weak Mutation 101: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V:148 - ReplaceArithmeticOperator - -> +
   * Goal 51. Weak Mutation 102: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V:148 - ReplaceArithmeticOperator - -> %
   * Goal 52. Weak Mutation 103: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V:148 - ReplaceArithmeticOperator - -> *
   * Goal 53. Weak Mutation 104: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V:148 - ReplaceArithmeticOperator - -> /
   * Goal 54. Weak Mutation 484: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeCompanias()I:484 - ReplaceConstant - 0 -> 1
   * Goal 55. Weak Mutation 485: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeCompanias()I:485 - ReplaceConstant - 0 -> 1
   * Goal 56. Weak Mutation 486: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeCompanias()I:485 - ReplaceVariable i -> r
   * Goal 57. Weak Mutation 487: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeCompanias()I:485 - InsertUnaryOp Negation of i
   * Goal 58. Weak Mutation 488: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeCompanias()I:485 - InsertUnaryOp IINC 1 i
   * Goal 59. Weak Mutation 489: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeCompanias()I:485 - InsertUnaryOp IINC -1 i
   * Goal 60. Weak Mutation 490: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeCompanias()I:485 - ReplaceComparisonOperator >= -> -1
   * Goal 61. Weak Mutation 491: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeCompanias()I:485 - ReplaceComparisonOperator >= -> >
   * Goal 62. Weak Mutation 499: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeCompanias()I:485 - ReplaceVariable i -> r
   * Goal 63. Weak Mutation 493: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeCompanias()I:486 - ReplaceVariable i -> r
   * Goal 64. Weak Mutation 494: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeCompanias()I:486 - InsertUnaryOp Negation of i
   * Goal 65. Weak Mutation 495: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeCompanias()I:486 - InsertUnaryOp IINC 1 i
   * Goal 66. Weak Mutation 496: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeCompanias()I:486 - InsertUnaryOp IINC -1 i
   * Goal 67. Weak Mutation 497: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeCompanias()I:487 - ReplaceComparisonOperator == -> !=
   * Goal 68. Weak Mutation 500: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeCompanias()I:490 - InsertUnaryOp Negation of r
   * Goal 69. Weak Mutation 501: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeCompanias()I:490 - InsertUnaryOp IINC 1 r
   * Goal 70. Weak Mutation 502: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeCompanias()I:490 - InsertUnaryOp IINC -1 r
   */

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Jugador jugador0 = new Jugador("");
      Color color0 = Color.green;
      Barrio barrio0 = new Barrio(color0);
      Calle calle0 = new Calle("\n", 110.0, barrio0, (-2596), 0.0, 2248.3171, 20.0, (double) (-2596), 20.0, 20.0, (double) (-2596));
      calle0.comprar(jugador0);
      jugador0.addPosesion(calle0);
      int int0 = jugador0.getNumeroDeCompanias();
      assertEquals(1390.0, jugador0.getCapital(), 0.01);
      assertEquals(0, int0);
  }

  //Test case number: 1
  /*
   * 40 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z: I14 Branch 37 IF_ICMPGE L330 - true
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z: I46 Branch 39 IFLT L335 - false
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:<init>(Ljava/lang/String;)V
   * Goal 5. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z: I14 Branch 37 IF_ICMPGE L330 - true in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:puedeHipotecarHasta(D)Z
   * Goal 6. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z: I46 Branch 39 IFLT L335 - false in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:puedeHipotecarHasta(D)Z
   * Goal 7. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:True
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 48
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 49
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 50
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 51
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 52
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 53
   * Goal 14. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 54
   * Goal 15. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z: Line 329
   * Goal 16. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z: Line 330
   * Goal 17. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z: Line 335
   * Goal 18. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 19. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z
   * Goal 20. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 21. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z
   * Goal 22. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 0.0
   * Goal 23. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1.0
   * Goal 24. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> -1.0
   * Goal 25. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1499.0
   * Goal 26. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1501.0
   * Goal 27. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 0
   * Goal 28. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 1
   * Goal 29. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> -1
   * Goal 30. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 3
   * Goal 31. Weak Mutation 311: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:329 - InsertUnaryOp Negation
   * Goal 32. Weak Mutation 312: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:330 - ReplaceConstant - 0 -> 1
   * Goal 33. Weak Mutation 313: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:330 - InsertUnaryOp Negation of i
   * Goal 34. Weak Mutation 314: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:330 - InsertUnaryOp IINC 1 i
   * Goal 35. Weak Mutation 315: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:330 - InsertUnaryOp IINC -1 i
   * Goal 36. Weak Mutation 317: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:330 - ReplaceComparisonOperator >= -> >
   * Goal 37. Weak Mutation 338: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:335 - InsertUnaryOp Negation of r
   * Goal 38. Weak Mutation 340: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:335 - InsertUnaryOp Negation of cantidad
   * Goal 39. Weak Mutation 343: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:335 - ReplaceComparisonOperator < -> <=
   * Goal 40. Weak Mutation 344: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:335 - ReplaceConstant - 1 -> 0
   */

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Jugador jugador0 = new Jugador("");
      boolean boolean0 = jugador0.puedeHipotecarHasta(1500.0);
      assertEquals(1500.0, jugador0.getCapital(), 0.01);
      assertTrue(boolean0);
  }

  //Test case number: 2
  /*
   * 70 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getCapital()D: root-Branch
   * Goal 4. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addPosesion(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: root-Branch
   * Goal 5. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeEstaciones()I: I13 Branch 35 IF_ICMPGE L314 - true
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeEstaciones()I: I13 Branch 35 IF_ICMPGE L314 - false
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeEstaciones()I: I26 Branch 36 IFEQ L316 - true
   * Goal 8. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addPosesion(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:addPosesion(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V
   * Goal 9. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:<init>(Ljava/lang/String;)V
   * Goal 10. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeEstaciones()I: I13 Branch 35 IF_ICMPGE L314 - false in context: 
   * Goal 11. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeEstaciones()I: I13 Branch 35 IF_ICMPGE L314 - true in context: 
   * Goal 12. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeEstaciones()I: I26 Branch 36 IFEQ L316 - true in context: 
   * Goal 13. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeEstaciones()I:Zero
   * Goal 14. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 48
   * Goal 15. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 49
   * Goal 16. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 50
   * Goal 17. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 51
   * Goal 18. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 52
   * Goal 19. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 53
   * Goal 20. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 54
   * Goal 21. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addPosesion(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: Line 222
   * Goal 22. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addPosesion(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: Line 223
   * Goal 23. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addPosesion(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: Line 224
   * Goal 24. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V: Line 148
   * Goal 25. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V: Line 149
   * Goal 26. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getCapital()D: Line 140
   * Goal 27. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeEstaciones()I: Line 313
   * Goal 28. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeEstaciones()I: Line 314
   * Goal 29. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeEstaciones()I: Line 315
   * Goal 30. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeEstaciones()I: Line 316
   * Goal 31. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeEstaciones()I: Line 319
   * Goal 32. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 33. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addPosesion(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V
   * Goal 34. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeEstaciones()I
   * Goal 35. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 36. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addPosesion(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V
   * Goal 37. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeEstaciones()I
   * Goal 38. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 0.0
   * Goal 39. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1.0
   * Goal 40. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> -1.0
   * Goal 41. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1499.0
   * Goal 42. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1501.0
   * Goal 43. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 0
   * Goal 44. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 1
   * Goal 45. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> -1
   * Goal 46. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 3
   * Goal 47. Weak Mutation 98: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getCapital()D:140 - InsertUnaryOp Negation
   * Goal 48. Weak Mutation 99: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V:148 - InsertUnaryOp Negation
   * Goal 49. Weak Mutation 100: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V:148 - InsertUnaryOp Negation of importe
   * Goal 50. Weak Mutation 101: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V:148 - ReplaceArithmeticOperator - -> +
   * Goal 51. Weak Mutation 102: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V:148 - ReplaceArithmeticOperator - -> %
   * Goal 52. Weak Mutation 103: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V:148 - ReplaceArithmeticOperator - -> *
   * Goal 53. Weak Mutation 104: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V:148 - ReplaceArithmeticOperator - -> /
   * Goal 54. Weak Mutation 292: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeEstaciones()I:313 - ReplaceConstant - 0 -> 1
   * Goal 55. Weak Mutation 293: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeEstaciones()I:314 - ReplaceConstant - 0 -> 1
   * Goal 56. Weak Mutation 294: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeEstaciones()I:314 - ReplaceVariable i -> r
   * Goal 57. Weak Mutation 295: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeEstaciones()I:314 - InsertUnaryOp Negation of i
   * Goal 58. Weak Mutation 296: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeEstaciones()I:314 - InsertUnaryOp IINC 1 i
   * Goal 59. Weak Mutation 297: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeEstaciones()I:314 - InsertUnaryOp IINC -1 i
   * Goal 60. Weak Mutation 298: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeEstaciones()I:314 - ReplaceComparisonOperator >= -> -1
   * Goal 61. Weak Mutation 299: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeEstaciones()I:314 - ReplaceComparisonOperator >= -> >
   * Goal 62. Weak Mutation 307: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeEstaciones()I:314 - ReplaceVariable i -> r
   * Goal 63. Weak Mutation 301: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeEstaciones()I:315 - ReplaceVariable i -> r
   * Goal 64. Weak Mutation 302: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeEstaciones()I:315 - InsertUnaryOp Negation of i
   * Goal 65. Weak Mutation 303: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeEstaciones()I:315 - InsertUnaryOp IINC 1 i
   * Goal 66. Weak Mutation 304: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeEstaciones()I:315 - InsertUnaryOp IINC -1 i
   * Goal 67. Weak Mutation 305: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeEstaciones()I:316 - ReplaceComparisonOperator == -> !=
   * Goal 68. Weak Mutation 308: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeEstaciones()I:319 - InsertUnaryOp Negation of r
   * Goal 69. Weak Mutation 309: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeEstaciones()I:319 - InsertUnaryOp IINC 1 r
   * Goal 70. Weak Mutation 310: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeEstaciones()I:319 - InsertUnaryOp IINC -1 r
   */

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Jugador jugador0 = new Jugador("");
      Color color0 = Color.green;
      Barrio barrio0 = new Barrio(color0);
      Calle calle0 = new Calle("\n", 110.0, barrio0, (-2596), 0.0, 2248.3171, 20.0, (double) (-2596), 20.0, 20.0, (double) (-2596));
      calle0.comprar(jugador0);
      jugador0.addPosesion(calle0);
      int int0 = jugador0.getNumeroDeEstaciones();
      assertEquals(1390.0, jugador0.getCapital(), 0.01);
      assertEquals(0, int0);
  }

  //Test case number: 3
  /*
   * 42 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addTarjeta(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/tarjetas/Tarjeta;I)V: I4 Branch 29 IF_ICMPNE L282 - true
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addTarjeta(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/tarjetas/Tarjeta;I)V: I17 Branch 30 IF_ICMPNE L284 - true
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:<init>(Ljava/lang/String;)V
   * Goal 5. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addTarjeta(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/tarjetas/Tarjeta;I)V: I4 Branch 29 IF_ICMPNE L282 - true in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:addTarjeta(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/tarjetas/Tarjeta;I)V
   * Goal 6. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addTarjeta(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/tarjetas/Tarjeta;I)V: I17 Branch 30 IF_ICMPNE L284 - true in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:addTarjeta(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/tarjetas/Tarjeta;I)V
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 48
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 49
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 50
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 51
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 52
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 53
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 54
   * Goal 14. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addTarjeta(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/tarjetas/Tarjeta;I)V: Line 282
   * Goal 15. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addTarjeta(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/tarjetas/Tarjeta;I)V: Line 284
   * Goal 16. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addTarjeta(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/tarjetas/Tarjeta;I)V: Line 286
   * Goal 17. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 18. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addTarjeta(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/tarjetas/Tarjeta;I)V
   * Goal 19. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 20. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addTarjeta(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/tarjetas/Tarjeta;I)V
   * Goal 21. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 0.0
   * Goal 22. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1.0
   * Goal 23. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> -1.0
   * Goal 24. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1499.0
   * Goal 25. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1501.0
   * Goal 26. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 0
   * Goal 27. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 1
   * Goal 28. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> -1
   * Goal 29. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 3
   * Goal 30. Weak Mutation 244: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addTarjeta(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/tarjetas/Tarjeta;I)V:282 - InsertUnaryOp Negation of tipoDeTarjeta
   * Goal 31. Weak Mutation 245: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addTarjeta(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/tarjetas/Tarjeta;I)V:282 - InsertUnaryOp IINC 1 tipoDeTarjeta
   * Goal 32. Weak Mutation 246: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addTarjeta(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/tarjetas/Tarjeta;I)V:282 - InsertUnaryOp IINC -1 tipoDeTarjeta
   * Goal 33. Weak Mutation 247: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addTarjeta(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/tarjetas/Tarjeta;I)V:282 - ReplaceConstant - 1 -> 0
   * Goal 34. Weak Mutation 248: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addTarjeta(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/tarjetas/Tarjeta;I)V:282 - ReplaceComparisonOperator != -> ==
   * Goal 35. Weak Mutation 249: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addTarjeta(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/tarjetas/Tarjeta;I)V:284 - InsertUnaryOp Negation of tipoDeTarjeta
   * Goal 36. Weak Mutation 250: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addTarjeta(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/tarjetas/Tarjeta;I)V:284 - InsertUnaryOp IINC 1 tipoDeTarjeta
   * Goal 37. Weak Mutation 251: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addTarjeta(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/tarjetas/Tarjeta;I)V:284 - InsertUnaryOp IINC -1 tipoDeTarjeta
   * Goal 38. Weak Mutation 252: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addTarjeta(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/tarjetas/Tarjeta;I)V:284 - ReplaceConstant - 2 -> 0
   * Goal 39. Weak Mutation 253: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addTarjeta(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/tarjetas/Tarjeta;I)V:284 - ReplaceConstant - 2 -> 1
   * Goal 40. Weak Mutation 254: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addTarjeta(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/tarjetas/Tarjeta;I)V:284 - ReplaceConstant - 2 -> -1
   * Goal 41. Weak Mutation 255: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addTarjeta(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/tarjetas/Tarjeta;I)V:284 - ReplaceConstant - 2 -> 3
   * Goal 42. Weak Mutation 257: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addTarjeta(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/tarjetas/Tarjeta;I)V:284 - ReplaceComparisonOperator != -> <
   */

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Jugador jugador0 = new Jugador("");
      jugador0.addTarjeta((Tarjeta) null, 5);
      assertEquals(1500.0, jugador0.getCapital(), 0.01);
  }

  //Test case number: 4
  /*
   * 55 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.incrementarCapital(D)V: root-Branch
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 4. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getCapital()D: root-Branch
   * Goal 5. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.pagarA(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: I6 Branch 24 IFGE L243 - true
   * Goal 6. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:<init>(Ljava/lang/String;)V
   * Goal 7. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.incrementarCapital(D)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:incrementarCapital(D)V
   * Goal 8. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.pagarA(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: I6 Branch 24 IFGE L243 - true in context: 
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 48
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 49
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 50
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 51
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 52
   * Goal 14. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 53
   * Goal 15. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 54
   * Goal 16. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V: Line 148
   * Goal 17. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V: Line 149
   * Goal 18. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getCapital()D: Line 140
   * Goal 19. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.incrementarCapital(D)V: Line 254
   * Goal 20. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.incrementarCapital(D)V: Line 255
   * Goal 21. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.pagarA(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: Line 243
   * Goal 22. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.pagarA(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: Line 245
   * Goal 23. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.pagarA(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: Line 246
   * Goal 24. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.pagarA(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: Line 247
   * Goal 25. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 26. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.incrementarCapital(D)V
   * Goal 27. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.pagarA(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V
   * Goal 28. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 29. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.incrementarCapital(D)V
   * Goal 30. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.pagarA(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V
   * Goal 31. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 0.0
   * Goal 32. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1.0
   * Goal 33. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> -1.0
   * Goal 34. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1499.0
   * Goal 35. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1501.0
   * Goal 36. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 0
   * Goal 37. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 1
   * Goal 38. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> -1
   * Goal 39. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 3
   * Goal 40. Weak Mutation 98: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getCapital()D:140 - InsertUnaryOp Negation
   * Goal 41. Weak Mutation 99: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V:148 - InsertUnaryOp Negation
   * Goal 42. Weak Mutation 100: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V:148 - InsertUnaryOp Negation of importe
   * Goal 43. Weak Mutation 101: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V:148 - ReplaceArithmeticOperator - -> +
   * Goal 44. Weak Mutation 103: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V:148 - ReplaceArithmeticOperator - -> *
   * Goal 45. Weak Mutation 104: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V:148 - ReplaceArithmeticOperator - -> /
   * Goal 46. Weak Mutation 206: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.pagarA(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V:243 - InsertUnaryOp Negation of importe
   * Goal 47. Weak Mutation 209: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.pagarA(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V:243 - ReplaceComparisonOperator >= -> >
   * Goal 48. Weak Mutation 210: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.pagarA(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V:245 - InsertUnaryOp Negation of importe
   * Goal 49. Weak Mutation 212: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.pagarA(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V:246 - InsertUnaryOp Negation of importe
   * Goal 50. Weak Mutation 213: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.incrementarCapital(D)V:254 - InsertUnaryOp Negation
   * Goal 51. Weak Mutation 214: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.incrementarCapital(D)V:254 - InsertUnaryOp Negation of importe
   * Goal 52. Weak Mutation 215: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.incrementarCapital(D)V:254 - ReplaceArithmeticOperator + -> %
   * Goal 53. Weak Mutation 216: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.incrementarCapital(D)V:254 - ReplaceArithmeticOperator + -> -
   * Goal 54. Weak Mutation 217: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.incrementarCapital(D)V:254 - ReplaceArithmeticOperator + -> *
   * Goal 55. Weak Mutation 218: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.incrementarCapital(D)V:254 - ReplaceArithmeticOperator + -> /
   */

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Jugador jugador0 = new Jugador(")");
      jugador0.incrementarCapital((-238.6375));
      jugador0.pagarA(jugador0, 1261.3625);
      assertEquals(1261.3625, jugador0.getCapital(), 0.01);
  }

  //Test case number: 5
  /*
   * 74 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: root-Branch
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: I11 Branch 8 IFEQ L108 - true
   * Goal 4. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: I29 Branch 10 IFNONNULL L111 - false
   * Goal 5. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: I34 Branch 11 IFLE L111 - true
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: I59 Branch 12 IF_ICMPNE L116 - true
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: I79 Branch 13 IFEQ L119 - true
   * Goal 8. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:<init>(Ljava/lang/String;)V
   * Goal 9. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: root-Branch in context: 
   * Goal 10. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: I11 Branch 8 IFEQ L108 - true in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:setDados(II)V
   * Goal 11. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: I29 Branch 10 IFNONNULL L111 - false in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:setDados(II)V
   * Goal 12. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: I34 Branch 11 IFLE L111 - true in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:setDados(II)V
   * Goal 13. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: I59 Branch 12 IF_ICMPNE L116 - true in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:setDados(II)V
   * Goal 14. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: I79 Branch 13 IFEQ L119 - true in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:setDados(II)V
   * Goal 15. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 48
   * Goal 16. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 49
   * Goal 17. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 50
   * Goal 18. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 51
   * Goal 19. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 52
   * Goal 20. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 53
   * Goal 21. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 54
   * Goal 22. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: Line 107
   * Goal 23. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: Line 108
   * Goal 24. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: Line 111
   * Goal 25. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: Line 114
   * Goal 26. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: Line 115
   * Goal 27. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: Line 116
   * Goal 28. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: Line 118
   * Goal 29. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: Line 119
   * Goal 30. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: Line 121
   * Goal 31. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: Line 152
   * Goal 32. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: Line 153
   * Goal 33. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 34. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V
   * Goal 35. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V
   * Goal 36. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 37. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V
   * Goal 38. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V
   * Goal 39. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 0.0
   * Goal 40. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1.0
   * Goal 41. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> -1.0
   * Goal 42. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1499.0
   * Goal 43. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1501.0
   * Goal 44. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 0
   * Goal 45. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 1
   * Goal 46. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> -1
   * Goal 47. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 3
   * Goal 48. Weak Mutation 53: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:108 - ReplaceComparisonOperator == -> !=
   * Goal 49. Weak Mutation 60: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:111 - ReplaceComparisonOperator != null -> = null
   * Goal 50. Weak Mutation 61: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:111 - InsertUnaryOp Negation
   * Goal 51. Weak Mutation 62: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:111 - ReplaceConstant - 0.0 -> 1.0
   * Goal 52. Weak Mutation 63: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:111 - ReplaceConstant - 0.0 -> -1.0
   * Goal 53. Weak Mutation 66: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:111 - ReplaceComparisonOperator <= -> <
   * Goal 54. Weak Mutation 67: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:114 - ReplaceConstant - 0 -> 1
   * Goal 55. Weak Mutation 68: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:114 - ReplaceVariable dado1 -> dado2
   * Goal 56. Weak Mutation 69: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:114 - ReplaceVariable dado1 -> jugadorConElTurno
   * Goal 57. Weak Mutation 70: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:114 - InsertUnaryOp Negation of dado1
   * Goal 58. Weak Mutation 71: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:115 - ReplaceConstant - 1 -> 0
   * Goal 59. Weak Mutation 72: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:115 - ReplaceVariable dado2 -> dado1
   * Goal 60. Weak Mutation 73: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:115 - ReplaceVariable dado2 -> jugadorConElTurno
   * Goal 61. Weak Mutation 74: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:115 - InsertUnaryOp Negation of dado2
   * Goal 62. Weak Mutation 75: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:116 - ReplaceVariable dado1 -> dado2
   * Goal 63. Weak Mutation 76: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:116 - ReplaceVariable dado1 -> jugadorConElTurno
   * Goal 64. Weak Mutation 77: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:116 - InsertUnaryOp Negation of dado1
   * Goal 65. Weak Mutation 78: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:116 - InsertUnaryOp IINC 1 dado1
   * Goal 66. Weak Mutation 79: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:116 - InsertUnaryOp IINC -1 dado1
   * Goal 67. Weak Mutation 80: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:116 - ReplaceVariable dado2 -> dado1
   * Goal 68. Weak Mutation 81: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:116 - ReplaceVariable dado2 -> jugadorConElTurno
   * Goal 69. Weak Mutation 82: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:116 - InsertUnaryOp Negation of dado2
   * Goal 70. Weak Mutation 83: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:116 - InsertUnaryOp IINC 1 dado2
   * Goal 71. Weak Mutation 84: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:116 - InsertUnaryOp IINC -1 dado2
   * Goal 72. Weak Mutation 86: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:116 - ReplaceComparisonOperator != -> <
   * Goal 73. Weak Mutation 96: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:118 - ReplaceConstant - 0 -> 1
   * Goal 74. Weak Mutation 97: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:119 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Jugador jugador0 = new Jugador("\n\tTarjetas de suerte:\n");
      Tablero tablero0 = new Tablero();
      jugador0.setTablero(tablero0);
      jugador0.setDados(2169, 37);
      assertEquals(2206, jugador0.getSumaDados());
  }

  //Test case number: 6
  /*
   * 87 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getSumaDados()I: root-Branch
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: root-Branch
   * Goal 4. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.tirarDados()V: I11 Branch 1 IFEQ L58 - true
   * Goal 5. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: I11 Branch 8 IFEQ L108 - true
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: I29 Branch 10 IFNONNULL L111 - false
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: I34 Branch 11 IFLE L111 - true
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: I59 Branch 12 IF_ICMPNE L116 - false
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: I79 Branch 13 IFEQ L119 - true
   * Goal 10. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:<init>(Ljava/lang/String;)V
   * Goal 11. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: root-Branch in context: 
   * Goal 12. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.tirarDados()V: I11 Branch 1 IFEQ L58 - true in context: 
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 48
   * Goal 14. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 49
   * Goal 15. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 50
   * Goal 16. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 51
   * Goal 17. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 52
   * Goal 18. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 53
   * Goal 19. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 54
   * Goal 20. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getSumaDados()I: Line 68
   * Goal 21. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: Line 107
   * Goal 22. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: Line 108
   * Goal 23. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: Line 111
   * Goal 24. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: Line 114
   * Goal 25. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: Line 115
   * Goal 26. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: Line 116
   * Goal 27. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: Line 117
   * Goal 28. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: Line 119
   * Goal 29. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: Line 121
   * Goal 30. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: Line 152
   * Goal 31. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: Line 153
   * Goal 32. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.tirarDados()V: Line 57
   * Goal 33. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.tirarDados()V: Line 58
   * Goal 34. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.tirarDados()V: Line 60
   * Goal 35. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.tirarDados()V: Line 61
   * Goal 36. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 37. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V
   * Goal 38. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 39. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V
   * Goal 40. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 0.0
   * Goal 41. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1.0
   * Goal 42. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> -1.0
   * Goal 43. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1499.0
   * Goal 44. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1501.0
   * Goal 45. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 0
   * Goal 46. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 1
   * Goal 47. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> -1
   * Goal 48. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 3
   * Goal 49. Weak Mutation 9: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.tirarDados()V:58 - ReplaceComparisonOperator == -> !=
   * Goal 50. Weak Mutation 14: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.tirarDados()V:60 - ReplaceConstant - 0 -> 1
   * Goal 51. Weak Mutation 15: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.tirarDados()V:60 - ReplaceConstant - 1 -> 0
   * Goal 52. Weak Mutation 16: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getSumaDados()I:68 - ReplaceConstant - 0 -> 1
   * Goal 53. Weak Mutation 17: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getSumaDados()I:68 - ReplaceConstant - 1 -> 0
   * Goal 54. Weak Mutation 18: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getSumaDados()I:68 - ReplaceArithmeticOperator + -> %
   * Goal 55. Weak Mutation 19: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getSumaDados()I:68 - ReplaceArithmeticOperator + -> -
   * Goal 56. Weak Mutation 20: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getSumaDados()I:68 - ReplaceArithmeticOperator + -> *
   * Goal 57. Weak Mutation 21: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getSumaDados()I:68 - ReplaceArithmeticOperator + -> /
   * Goal 58. Weak Mutation 53: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:108 - ReplaceComparisonOperator == -> !=
   * Goal 59. Weak Mutation 60: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:111 - ReplaceComparisonOperator != null -> = null
   * Goal 60. Weak Mutation 61: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:111 - InsertUnaryOp Negation
   * Goal 61. Weak Mutation 62: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:111 - ReplaceConstant - 0.0 -> 1.0
   * Goal 62. Weak Mutation 63: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:111 - ReplaceConstant - 0.0 -> -1.0
   * Goal 63. Weak Mutation 66: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:111 - ReplaceComparisonOperator <= -> <
   * Goal 64. Weak Mutation 67: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:114 - ReplaceConstant - 0 -> 1
   * Goal 65. Weak Mutation 69: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:114 - ReplaceVariable dado1 -> jugadorConElTurno
   * Goal 66. Weak Mutation 70: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:114 - InsertUnaryOp Negation of dado1
   * Goal 67. Weak Mutation 71: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:115 - ReplaceConstant - 1 -> 0
   * Goal 68. Weak Mutation 73: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:115 - ReplaceVariable dado2 -> jugadorConElTurno
   * Goal 69. Weak Mutation 74: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:115 - InsertUnaryOp Negation of dado2
   * Goal 70. Weak Mutation 76: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:116 - ReplaceVariable dado1 -> jugadorConElTurno
   * Goal 71. Weak Mutation 77: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:116 - InsertUnaryOp Negation of dado1
   * Goal 72. Weak Mutation 78: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:116 - InsertUnaryOp IINC 1 dado1
   * Goal 73. Weak Mutation 79: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:116 - InsertUnaryOp IINC -1 dado1
   * Goal 74. Weak Mutation 81: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:116 - ReplaceVariable dado2 -> jugadorConElTurno
   * Goal 75. Weak Mutation 82: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:116 - InsertUnaryOp Negation of dado2
   * Goal 76. Weak Mutation 83: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:116 - InsertUnaryOp IINC 1 dado2
   * Goal 77. Weak Mutation 84: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:116 - InsertUnaryOp IINC -1 dado2
   * Goal 78. Weak Mutation 85: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:116 - ReplaceComparisonOperator != -> -1
   * Goal 79. Weak Mutation 88: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:117 - InsertUnaryOp Negation
   * Goal 80. Weak Mutation 89: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:117 - InsertUnaryOp +1
   * Goal 81. Weak Mutation 90: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:117 - InsertUnaryOp -1
   * Goal 82. Weak Mutation 91: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:117 - ReplaceConstant - 1 -> 0
   * Goal 83. Weak Mutation 92: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:117 - ReplaceArithmeticOperator + -> %
   * Goal 84. Weak Mutation 93: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:117 - ReplaceArithmeticOperator + -> -
   * Goal 85. Weak Mutation 94: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:117 - ReplaceArithmeticOperator + -> *
   * Goal 86. Weak Mutation 95: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:117 - ReplaceArithmeticOperator + -> /
   * Goal 87. Weak Mutation 97: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:119 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Jugador jugador0 = new Jugador("\n\tTarjetas de suerte:\n");
      Tablero tablero0 = new Tablero();
      jugador0.setTablero(tablero0);
      Jugador[] jugadorArray0 = new Jugador[9];
      jugadorArray0[0] = jugador0;
      jugadorArray0[1] = jugador0;
      tablero0.jugadores = jugadorArray0;
      // Undeclared exception!
      try { 
        tablero0.comenzarPartida();
        fail("Expecting exception: TooManyResourcesException");
      
      } catch(TooManyResourcesException e) {
         //
         // Loop has been executed more times than the allowed 10000
         //
         assertThrownBy("org.evosuite.runtime.LoopCounter", e);
      }
  }

  //Test case number: 7
  /*
   * 52 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.incrementarCapital(D)V: root-Branch
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 4. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getCapital()D: root-Branch
   * Goal 5. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.pagarA(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: I6 Branch 24 IFGE L243 - true
   * Goal 6. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:<init>(Ljava/lang/String;)V
   * Goal 7. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.pagarA(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: I6 Branch 24 IFGE L243 - true in context: 
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 48
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 49
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 50
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 51
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 52
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 53
   * Goal 14. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 54
   * Goal 15. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V: Line 148
   * Goal 16. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V: Line 149
   * Goal 17. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getCapital()D: Line 140
   * Goal 18. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.incrementarCapital(D)V: Line 254
   * Goal 19. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.incrementarCapital(D)V: Line 255
   * Goal 20. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.pagarA(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: Line 243
   * Goal 21. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.pagarA(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: Line 245
   * Goal 22. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.pagarA(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: Line 246
   * Goal 23. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.pagarA(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: Line 247
   * Goal 24. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 25. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.pagarA(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V
   * Goal 26. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 27. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.pagarA(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V
   * Goal 28. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 0.0
   * Goal 29. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1.0
   * Goal 30. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> -1.0
   * Goal 31. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1499.0
   * Goal 32. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1501.0
   * Goal 33. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 0
   * Goal 34. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 1
   * Goal 35. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> -1
   * Goal 36. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 3
   * Goal 37. Weak Mutation 98: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getCapital()D:140 - InsertUnaryOp Negation
   * Goal 38. Weak Mutation 99: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V:148 - InsertUnaryOp Negation
   * Goal 39. Weak Mutation 100: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V:148 - InsertUnaryOp Negation of importe
   * Goal 40. Weak Mutation 101: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V:148 - ReplaceArithmeticOperator - -> +
   * Goal 41. Weak Mutation 103: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V:148 - ReplaceArithmeticOperator - -> *
   * Goal 42. Weak Mutation 104: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V:148 - ReplaceArithmeticOperator - -> /
   * Goal 43. Weak Mutation 206: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.pagarA(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V:243 - InsertUnaryOp Negation of importe
   * Goal 44. Weak Mutation 208: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.pagarA(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V:243 - ReplaceComparisonOperator >= -> ==
   * Goal 45. Weak Mutation 210: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.pagarA(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V:245 - InsertUnaryOp Negation of importe
   * Goal 46. Weak Mutation 212: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.pagarA(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V:246 - InsertUnaryOp Negation of importe
   * Goal 47. Weak Mutation 213: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.incrementarCapital(D)V:254 - InsertUnaryOp Negation
   * Goal 48. Weak Mutation 214: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.incrementarCapital(D)V:254 - InsertUnaryOp Negation of importe
   * Goal 49. Weak Mutation 215: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.incrementarCapital(D)V:254 - ReplaceArithmeticOperator + -> %
   * Goal 50. Weak Mutation 216: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.incrementarCapital(D)V:254 - ReplaceArithmeticOperator + -> -
   * Goal 51. Weak Mutation 217: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.incrementarCapital(D)V:254 - ReplaceArithmeticOperator + -> *
   * Goal 52. Weak Mutation 218: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.incrementarCapital(D)V:254 - ReplaceArithmeticOperator + -> /
   */

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Jugador jugador0 = new Jugador(")");
      jugador0.pagarA(jugador0, 1261.3625);
      assertEquals(1500.0, jugador0.getCapital(), 0.01);
  }

  //Test case number: 8
  /*
   * 27 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.hipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: I5 Branch 40 IF_ACMPEQ L346 - false
   * Goal 3. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:<init>(Ljava/lang/String;)V
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.hipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: I5 Branch 40 IF_ACMPEQ L346 - false in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:hipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V
   * Goal 5. hipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V_org.evosuite.runtime.mock.java.lang.MockException_DECLARED
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 48
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 49
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 50
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 51
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 52
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 53
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 54
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.hipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: Line 346
   * Goal 14. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.hipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: Line 347
   * Goal 15. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 16. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.hipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V
   * Goal 17. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 18. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 0.0
   * Goal 19. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1.0
   * Goal 20. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> -1.0
   * Goal 21. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1499.0
   * Goal 22. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1501.0
   * Goal 23. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 0
   * Goal 24. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 1
   * Goal 25. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> -1
   * Goal 26. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 3
   * Goal 27. Weak Mutation 346: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.hipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V:346 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Jugador jugador0 = new Jugador("b'h)7/");
      Compania compania0 = new Compania("b'h)7/", 0.0, (-130));
      try { 
        jugador0.hipoteca(compania0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador", e);
      }
  }

  //Test case number: 9
  /*
   * 38 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.suspenderTurnos(I)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getTurnosSinJugar()I: root-Branch
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.suspenderTurnos(I)V: root-Branch in context: 
   * Goal 5. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:<init>(Ljava/lang/String;)V
   * Goal 6. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getTurnosSinJugar()I: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:getTurnosSinJugar()I
   * Goal 7. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getTurnosSinJugar()I:Positive
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 48
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 49
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 50
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 51
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 52
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 53
   * Goal 14. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 54
   * Goal 15. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getTurnosSinJugar()I: Line 239
   * Goal 16. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.suspenderTurnos(I)V: Line 199
   * Goal 17. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.suspenderTurnos(I)V: Line 200
   * Goal 18. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 19. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getTurnosSinJugar()I
   * Goal 20. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.suspenderTurnos(I)V
   * Goal 21. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 22. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getTurnosSinJugar()I
   * Goal 23. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.suspenderTurnos(I)V
   * Goal 24. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 0.0
   * Goal 25. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1.0
   * Goal 26. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> -1.0
   * Goal 27. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1499.0
   * Goal 28. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1501.0
   * Goal 29. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 0
   * Goal 30. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 1
   * Goal 31. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> -1
   * Goal 32. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 3
   * Goal 33. Weak Mutation 191: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.suspenderTurnos(I)V:199 - InsertUnaryOp Negation of turnosSinJugar
   * Goal 34. Weak Mutation 192: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.suspenderTurnos(I)V:199 - InsertUnaryOp IINC 1 turnosSinJugar
   * Goal 35. Weak Mutation 193: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.suspenderTurnos(I)V:199 - InsertUnaryOp IINC -1 turnosSinJugar
   * Goal 36. Weak Mutation 203: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getTurnosSinJugar()I:239 - InsertUnaryOp Negation
   * Goal 37. Weak Mutation 204: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getTurnosSinJugar()I:239 - InsertUnaryOp +1
   * Goal 38. Weak Mutation 205: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getTurnosSinJugar()I:239 - InsertUnaryOp -1
   */

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Jugador jugador0 = new Jugador("7-N(2>djh$d)4,Su<hz");
      jugador0.suspenderTurnos(2146966817);
      int int0 = jugador0.getTurnosSinJugar();
      assertEquals(2146966817, int0);
  }

  //Test case number: 10
  /*
   * 35 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addPosesion(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: root-Branch
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getPosesiones()Ljava/util/Vector;: root-Branch
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addPosesion(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:addPosesion(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V
   * Goal 5. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:<init>(Ljava/lang/String;)V
   * Goal 6. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getPosesiones()Ljava/util/Vector;: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:getPosesiones()Ljava/util/Vector;
   * Goal 7. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getPosesiones()Ljava/util/Vector;:NonNull:java.util.Vector:capacity()I:Positive
   * Goal 8. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getPosesiones()Ljava/util/Vector;:NonNull:java.util.Vector:isEmpty()Z:False
   * Goal 9. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getPosesiones()Ljava/util/Vector;:NonNull:java.util.Vector:size()I:Positive
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 48
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 49
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 50
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 51
   * Goal 14. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 52
   * Goal 15. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 53
   * Goal 16. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 54
   * Goal 17. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addPosesion(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: Line 222
   * Goal 18. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addPosesion(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: Line 223
   * Goal 19. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addPosesion(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: Line 224
   * Goal 20. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getPosesiones()Ljava/util/Vector;: Line 231
   * Goal 21. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 22. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addPosesion(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V
   * Goal 23. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getPosesiones()Ljava/util/Vector;
   * Goal 24. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 25. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addPosesion(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V
   * Goal 26. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getPosesiones()Ljava/util/Vector;
   * Goal 27. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 0.0
   * Goal 28. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1.0
   * Goal 29. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> -1.0
   * Goal 30. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1499.0
   * Goal 31. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1501.0
   * Goal 32. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 0
   * Goal 33. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 1
   * Goal 34. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> -1
   * Goal 35. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 3
   */

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Jugador jugador0 = new Jugador("%XP29");
      Estacion estacion0 = new Estacion("%XP29", (-2570.4), 705);
      jugador0.addPosesion(estacion0);
      jugador0.getPosesiones();
      assertEquals(1500.0, jugador0.getCapital(), 0.01);
  }

  //Test case number: 11
  /*
   * 34 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getDeudaConBanca()D: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDeudaConBanca(D)V: root-Branch
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:<init>(Ljava/lang/String;)V
   * Goal 5. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getDeudaConBanca()D: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:getDeudaConBanca()D
   * Goal 6. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDeudaConBanca(D)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:setDeudaConBanca(D)V
   * Goal 7. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getDeudaConBanca()D:Positive
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 48
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 49
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 50
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 51
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 52
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 53
   * Goal 14. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 54
   * Goal 15. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getDeudaConBanca()D: Line 390
   * Goal 16. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDeudaConBanca(D)V: Line 382
   * Goal 17. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDeudaConBanca(D)V: Line 383
   * Goal 18. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 19. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getDeudaConBanca()D
   * Goal 20. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDeudaConBanca(D)V
   * Goal 21. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 22. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getDeudaConBanca()D
   * Goal 23. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDeudaConBanca(D)V
   * Goal 24. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 0.0
   * Goal 25. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1.0
   * Goal 26. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> -1.0
   * Goal 27. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1499.0
   * Goal 28. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1501.0
   * Goal 29. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 0
   * Goal 30. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 1
   * Goal 31. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> -1
   * Goal 32. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 3
   * Goal 33. Weak Mutation 362: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDeudaConBanca(D)V:382 - InsertUnaryOp Negation of importe
   * Goal 34. Weak Mutation 363: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getDeudaConBanca()D:390 - InsertUnaryOp Negation
   */

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Jugador jugador0 = new Jugador("");
      jugador0.setDeudaConBanca(350.0);
      double double0 = jugador0.getDeudaConBanca();
      assertEquals(350.0, double0, 0.01);
  }

  //Test case number: 12
  /*
   * 34 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getDeudaConBanca()D: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDeudaConBanca(D)V: root-Branch
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:<init>(Ljava/lang/String;)V
   * Goal 5. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getDeudaConBanca()D: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:getDeudaConBanca()D
   * Goal 6. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDeudaConBanca(D)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:setDeudaConBanca(D)V
   * Goal 7. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getDeudaConBanca()D:Negative
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 48
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 49
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 50
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 51
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 52
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 53
   * Goal 14. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 54
   * Goal 15. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getDeudaConBanca()D: Line 390
   * Goal 16. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDeudaConBanca(D)V: Line 382
   * Goal 17. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDeudaConBanca(D)V: Line 383
   * Goal 18. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 19. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getDeudaConBanca()D
   * Goal 20. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDeudaConBanca(D)V
   * Goal 21. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 22. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getDeudaConBanca()D
   * Goal 23. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDeudaConBanca(D)V
   * Goal 24. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 0.0
   * Goal 25. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1.0
   * Goal 26. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> -1.0
   * Goal 27. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1499.0
   * Goal 28. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1501.0
   * Goal 29. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 0
   * Goal 30. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 1
   * Goal 31. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> -1
   * Goal 32. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 3
   * Goal 33. Weak Mutation 362: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDeudaConBanca(D)V:382 - InsertUnaryOp Negation of importe
   * Goal 34. Weak Mutation 363: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getDeudaConBanca()D:390 - InsertUnaryOp Negation
   */

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Jugador jugador0 = new Jugador("\n");
      jugador0.setDeudaConBanca((-1083.0953501));
      double double0 = jugador0.getDeudaConBanca();
      assertEquals((-1083.0953501), double0, 0.01);
  }

  //Test case number: 13
  /*
   * 24 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:<init>(Ljava/lang/String;)V
   * Goal 3. toString()Ljava/lang/String;_java.lang.NullPointerException_IMPLICIT
   * Goal 4. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 48
   * Goal 5. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 49
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 50
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 51
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 52
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 53
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 54
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.toString()Ljava/lang/String;: Line 77
   * Goal 12. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 13. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.toString()Ljava/lang/String;
   * Goal 14. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 15. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 0.0
   * Goal 16. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1.0
   * Goal 17. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> -1.0
   * Goal 18. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1499.0
   * Goal 19. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1501.0
   * Goal 20. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 0
   * Goal 21. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 1
   * Goal 22. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> -1
   * Goal 23. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 3
   * Goal 24. Weak Mutation 22: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.toString()Ljava/lang/String;:77 - ReplaceConstant -  (en  -> 
   */

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Jugador jugador0 = new Jugador(":DJpi::iCg1X");
      // Undeclared exception!
      try { 
        jugador0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador", e);
      }
  }

  //Test case number: 14
  /*
   * 23 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:<init>(Ljava/lang/String;)V
   * Goal 3. tirarDados()V_java.lang.NullPointerException_IMPLICIT
   * Goal 4. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 48
   * Goal 5. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 49
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 50
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 51
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 52
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 53
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 54
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.tirarDados()V: Line 57
   * Goal 12. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 13. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.tirarDados()V
   * Goal 14. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 15. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 0.0
   * Goal 16. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1.0
   * Goal 17. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> -1.0
   * Goal 18. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1499.0
   * Goal 19. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1501.0
   * Goal 20. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 0
   * Goal 21. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 1
   * Goal 22. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> -1
   * Goal 23. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 3
   */

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Jugador jugador0 = new Jugador("3N6WzfZ0");
      // Undeclared exception!
      try { 
        jugador0.tirarDados();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador", e);
      }
  }

  //Test case number: 15
  /*
   * 23 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:<init>(Ljava/lang/String;)V
   * Goal 3. setDados(II)V_java.lang.NullPointerException_IMPLICIT
   * Goal 4. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 48
   * Goal 5. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 49
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 50
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 51
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 52
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 53
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 54
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: Line 107
   * Goal 12. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 13. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V
   * Goal 14. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 15. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 0.0
   * Goal 16. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1.0
   * Goal 17. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> -1.0
   * Goal 18. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1499.0
   * Goal 19. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1501.0
   * Goal 20. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 0
   * Goal 21. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 1
   * Goal 22. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> -1
   * Goal 23. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 3
   */

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Jugador jugador0 = new Jugador("");
      // Undeclared exception!
      try { 
        jugador0.setDados(1828, 13);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 16
  /*
   * 56 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: root-Branch
   * Goal 4. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.saldarDeudaConBanca()V: I7 Branch 46 IFGE L398 - true
   * Goal 5. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.saldarDeudaConBanca()V: I36 Branch 47 IFNE L403 - false
   * Goal 6. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:<init>(Ljava/lang/String;)V
   * Goal 7. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: root-Branch in context: 
   * Goal 8. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.saldarDeudaConBanca()V: I7 Branch 46 IFGE L398 - true in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:saldarDeudaConBanca()V
   * Goal 9. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.saldarDeudaConBanca()V: I36 Branch 47 IFNE L403 - false in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:saldarDeudaConBanca()V
   * Goal 10. saldarDeudaConBanca()V_java.lang.ArithmeticException_IMPLICIT
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 48
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 49
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 50
   * Goal 14. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 51
   * Goal 15. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 52
   * Goal 16. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 53
   * Goal 17. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 54
   * Goal 18. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V: Line 148
   * Goal 19. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V: Line 149
   * Goal 20. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.saldarDeudaConBanca()V: Line 398
   * Goal 21. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.saldarDeudaConBanca()V: Line 400
   * Goal 22. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.saldarDeudaConBanca()V: Line 401
   * Goal 23. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.saldarDeudaConBanca()V: Line 402
   * Goal 24. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.saldarDeudaConBanca()V: Line 403
   * Goal 25. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.saldarDeudaConBanca()V: Line 404
   * Goal 26. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: Line 152
   * Goal 27. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: Line 153
   * Goal 28. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 29. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.saldarDeudaConBanca()V
   * Goal 30. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V
   * Goal 31. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 32. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V
   * Goal 33. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 0.0
   * Goal 34. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1.0
   * Goal 35. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> -1.0
   * Goal 36. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1499.0
   * Goal 37. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1501.0
   * Goal 38. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 0
   * Goal 39. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 1
   * Goal 40. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> -1
   * Goal 41. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 3
   * Goal 42. Weak Mutation 99: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V:148 - InsertUnaryOp Negation
   * Goal 43. Weak Mutation 100: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V:148 - InsertUnaryOp Negation of importe
   * Goal 44. Weak Mutation 102: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V:148 - ReplaceArithmeticOperator - -> %
   * Goal 45. Weak Mutation 104: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V:148 - ReplaceArithmeticOperator - -> /
   * Goal 46. Weak Mutation 364: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.saldarDeudaConBanca()V:398 - InsertUnaryOp Negation
   * Goal 47. Weak Mutation 365: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.saldarDeudaConBanca()V:398 - InsertUnaryOp Negation
   * Goal 48. Weak Mutation 367: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.saldarDeudaConBanca()V:398 - ReplaceComparisonOperator >= -> ==
   * Goal 49. Weak Mutation 369: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.saldarDeudaConBanca()V:400 - InsertUnaryOp Negation
   * Goal 50. Weak Mutation 370: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.saldarDeudaConBanca()V:401 - InsertUnaryOp Negation
   * Goal 51. Weak Mutation 371: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.saldarDeudaConBanca()V:402 - ReplaceConstant - 0.0 -> 1.0
   * Goal 52. Weak Mutation 372: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.saldarDeudaConBanca()V:402 - ReplaceConstant - 0.0 -> -1.0
   * Goal 53. Weak Mutation 373: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.saldarDeudaConBanca()V:403 - InsertUnaryOp Negation
   * Goal 54. Weak Mutation 374: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.saldarDeudaConBanca()V:403 - InsertUnaryOp +1
   * Goal 55. Weak Mutation 375: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.saldarDeudaConBanca()V:403 - InsertUnaryOp -1
   * Goal 56. Weak Mutation 376: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.saldarDeudaConBanca()V:403 - ReplaceComparisonOperator != -> -1
   */

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Jugador jugador0 = new Jugador("ow.tm");
      Tablero tablero0 = new Tablero();
      jugador0.setTablero(tablero0);
      // Undeclared exception!
      try { 
        jugador0.saldarDeudaConBanca();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         assertThrownBy("edu.uclm.esi.iso5.juegos.monopoly.dominio.Tablero", e);
      }
  }

  //Test case number: 17
  /*
   * 26 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getCapital()D: root-Branch
   * Goal 3. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:<init>(Ljava/lang/String;)V
   * Goal 4. pagarDeuda()V_java.lang.NullPointerException_IMPLICIT
   * Goal 5. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 48
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 49
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 50
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 51
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 52
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 53
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 54
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getCapital()D: Line 140
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.pagarDeuda()V: Line 367
   * Goal 14. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 15. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.pagarDeuda()V
   * Goal 16. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 17. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 0.0
   * Goal 18. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1.0
   * Goal 19. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> -1.0
   * Goal 20. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1499.0
   * Goal 21. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1501.0
   * Goal 22. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 0
   * Goal 23. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 1
   * Goal 24. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> -1
   * Goal 25. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 3
   * Goal 26. Weak Mutation 98: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getCapital()D:140 - InsertUnaryOp Negation
   */

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Jugador jugador0 = new Jugador((String) null);
      // Undeclared exception!
      try { 
        jugador0.pagarDeuda();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador", e);
      }
  }

  //Test case number: 18
  /*
   * 23 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:<init>(Ljava/lang/String;)V
   * Goal 3. levantarHipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V_java.lang.NullPointerException_IMPLICIT
   * Goal 4. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 48
   * Goal 5. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 49
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 50
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 51
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 52
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 53
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 54
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.levantarHipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: Line 462
   * Goal 12. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 13. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.levantarHipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V
   * Goal 14. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 15. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 0.0
   * Goal 16. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1.0
   * Goal 17. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> -1.0
   * Goal 18. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1499.0
   * Goal 19. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1501.0
   * Goal 20. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 0
   * Goal 21. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 1
   * Goal 22. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> -1
   * Goal 23. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 3
   */

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Jugador jugador0 = new Jugador("^6:|QF4}9Y8D$.JQU");
      // Undeclared exception!
      try { 
        jugador0.levantarHipoteca((CasillaConPrecio) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador", e);
      }
  }

  //Test case number: 19
  /*
   * 23 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:<init>(Ljava/lang/String;)V
   * Goal 3. hipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V_java.lang.NullPointerException_IMPLICIT
   * Goal 4. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 48
   * Goal 5. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 49
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 50
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 51
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 52
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 53
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 54
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.hipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: Line 346
   * Goal 12. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 13. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.hipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V
   * Goal 14. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 15. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 0.0
   * Goal 16. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1.0
   * Goal 17. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> -1.0
   * Goal 18. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1499.0
   * Goal 19. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1501.0
   * Goal 20. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 0
   * Goal 21. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 1
   * Goal 22. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> -1
   * Goal 23. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 3
   */

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Jugador jugador0 = new Jugador("h`|J3T");
      // Undeclared exception!
      try { 
        jugador0.hipoteca((CasillaConPrecio) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador", e);
      }
  }

  //Test case number: 20
  /*
   * 27 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:<init>(Ljava/lang/String;)V
   * Goal 3. edificar(II)V_java.lang.NullPointerException_IMPLICIT
   * Goal 4. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 48
   * Goal 5. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 49
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 50
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 51
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 52
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 53
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 54
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V: Line 435
   * Goal 12. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 13. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V
   * Goal 14. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 15. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 0.0
   * Goal 16. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1.0
   * Goal 17. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> -1.0
   * Goal 18. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1499.0
   * Goal 19. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1501.0
   * Goal 20. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 0
   * Goal 21. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 1
   * Goal 22. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> -1
   * Goal 23. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 3
   * Goal 24. Weak Mutation 401: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V:435 - ReplaceVariable posCasilla -> numeroDeCasas
   * Goal 25. Weak Mutation 402: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V:435 - InsertUnaryOp Negation of posCasilla
   * Goal 26. Weak Mutation 403: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V:435 - InsertUnaryOp IINC 1 posCasilla
   * Goal 27. Weak Mutation 404: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V:435 - InsertUnaryOp IINC -1 posCasilla
   */

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Jugador jugador0 = new Jugador("");
      // Undeclared exception!
      try { 
        jugador0.edificar(14, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador", e);
      }
  }

  //Test case number: 21
  /*
   * 33 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: root-Branch
   * Goal 3. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:<init>(Ljava/lang/String;)V
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: root-Branch in context: 
   * Goal 5. edificar(II)V_java.lang.ArrayIndexOutOfBoundsException_IMPLICIT
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 48
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 49
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 50
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 51
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 52
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 53
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 54
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V: Line 435
   * Goal 14. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: Line 152
   * Goal 15. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: Line 153
   * Goal 16. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 17. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V
   * Goal 18. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V
   * Goal 19. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 20. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V
   * Goal 21. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 0.0
   * Goal 22. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1.0
   * Goal 23. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> -1.0
   * Goal 24. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1499.0
   * Goal 25. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1501.0
   * Goal 26. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 0
   * Goal 27. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 1
   * Goal 28. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> -1
   * Goal 29. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 3
   * Goal 30. Weak Mutation 401: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V:435 - ReplaceVariable posCasilla -> numeroDeCasas
   * Goal 31. Weak Mutation 402: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V:435 - InsertUnaryOp Negation of posCasilla
   * Goal 32. Weak Mutation 403: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V:435 - InsertUnaryOp IINC 1 posCasilla
   * Goal 33. Weak Mutation 404: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V:435 - InsertUnaryOp IINC -1 posCasilla
   */

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Jugador jugador0 = new Jugador("ow.tm");
      Tablero tablero0 = new Tablero();
      jugador0.setTablero(tablero0);
      // Undeclared exception!
      try { 
        jugador0.edificar((-716), 12);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -716
         //
         assertThrownBy("edu.uclm.esi.iso5.juegos.monopoly.dominio.Tablero", e);
      }
  }

  //Test case number: 22
  /*
   * 27 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:<init>(Ljava/lang/String;)V
   * Goal 3. devolverEdificaciones(II)V_java.lang.NullPointerException_IMPLICIT
   * Goal 4. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 48
   * Goal 5. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 49
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 50
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 51
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 52
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 53
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 54
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.devolverEdificaciones(II)V: Line 503
   * Goal 12. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 13. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.devolverEdificaciones(II)V
   * Goal 14. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 15. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 0.0
   * Goal 16. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1.0
   * Goal 17. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> -1.0
   * Goal 18. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1499.0
   * Goal 19. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1501.0
   * Goal 20. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 0
   * Goal 21. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 1
   * Goal 22. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> -1
   * Goal 23. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 3
   * Goal 24. Weak Mutation 503: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.devolverEdificaciones(II)V:503 - ReplaceVariable posicion -> numeroDeCasas
   * Goal 25. Weak Mutation 504: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.devolverEdificaciones(II)V:503 - InsertUnaryOp Negation of posicion
   * Goal 26. Weak Mutation 505: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.devolverEdificaciones(II)V:503 - InsertUnaryOp IINC 1 posicion
   * Goal 27. Weak Mutation 506: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.devolverEdificaciones(II)V:503 - InsertUnaryOp IINC -1 posicion
   */

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Jugador jugador0 = new Jugador("^6:|QF4}9Y8D$.JQU");
      // Undeclared exception!
      try { 
        jugador0.devolverEdificaciones(822, (-3410));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador", e);
      }
  }

  //Test case number: 23
  /*
   * 35 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: root-Branch
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setCasilla(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Casilla;)V: root-Branch
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setCasilla(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Casilla;)V: root-Branch in context: 
   * Goal 5. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:<init>(Ljava/lang/String;)V
   * Goal 6. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: root-Branch in context: 
   * Goal 7. devolverEdificaciones(II)V_java.lang.ArrayIndexOutOfBoundsException_IMPLICIT
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 48
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 49
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 50
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 51
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 52
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 53
   * Goal 14. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 54
   * Goal 15. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.devolverEdificaciones(II)V: Line 503
   * Goal 16. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setCasilla(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Casilla;)V: Line 124
   * Goal 17. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setCasilla(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Casilla;)V: Line 125
   * Goal 18. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: Line 152
   * Goal 19. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: Line 153
   * Goal 20. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 21. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.devolverEdificaciones(II)V
   * Goal 22. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 23. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 0.0
   * Goal 24. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1.0
   * Goal 25. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> -1.0
   * Goal 26. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1499.0
   * Goal 27. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1501.0
   * Goal 28. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 0
   * Goal 29. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 1
   * Goal 30. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> -1
   * Goal 31. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 3
   * Goal 32. Weak Mutation 503: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.devolverEdificaciones(II)V:503 - ReplaceVariable posicion -> numeroDeCasas
   * Goal 33. Weak Mutation 504: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.devolverEdificaciones(II)V:503 - InsertUnaryOp Negation of posicion
   * Goal 34. Weak Mutation 505: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.devolverEdificaciones(II)V:503 - InsertUnaryOp IINC 1 posicion
   * Goal 35. Weak Mutation 506: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.devolverEdificaciones(II)V:503 - InsertUnaryOp IINC -1 posicion
   */

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Jugador jugador0 = new Jugador("ow.tm");
      Tablero tablero0 = new Tablero();
      tablero0.add(jugador0);
      // Undeclared exception!
      try { 
        jugador0.devolverEdificaciones(2144802644, 4426);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2144802644
         //
         assertThrownBy("edu.uclm.esi.iso5.juegos.monopoly.dominio.Tablero", e);
      }
  }

  //Test case number: 24
  /*
   * 38 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: root-Branch
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.desecharOpcionDeCompra()V: I9 Branch 60 IFNE L479 - false
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:<init>(Ljava/lang/String;)V
   * Goal 5. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: root-Branch in context: 
   * Goal 6. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.desecharOpcionDeCompra()V: I9 Branch 60 IFNE L479 - false in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:desecharOpcionDeCompra()V
   * Goal 7. desecharOpcionDeCompra()V_java.lang.ArithmeticException_IMPLICIT
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 48
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 49
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 50
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 51
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 52
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 53
   * Goal 14. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 54
   * Goal 15. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.desecharOpcionDeCompra()V: Line 478
   * Goal 16. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.desecharOpcionDeCompra()V: Line 479
   * Goal 17. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.desecharOpcionDeCompra()V: Line 480
   * Goal 18. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: Line 152
   * Goal 19. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: Line 153
   * Goal 20. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 21. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.desecharOpcionDeCompra()V
   * Goal 22. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V
   * Goal 23. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 24. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V
   * Goal 25. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 0.0
   * Goal 26. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1.0
   * Goal 27. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> -1.0
   * Goal 28. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1499.0
   * Goal 29. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1501.0
   * Goal 30. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 0
   * Goal 31. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 1
   * Goal 32. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> -1
   * Goal 33. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 3
   * Goal 34. Weak Mutation 477: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.desecharOpcionDeCompra()V:478 - ReplaceConstant - 0 -> 1
   * Goal 35. Weak Mutation 478: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.desecharOpcionDeCompra()V:479 - InsertUnaryOp Negation
   * Goal 36. Weak Mutation 479: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.desecharOpcionDeCompra()V:479 - InsertUnaryOp +1
   * Goal 37. Weak Mutation 480: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.desecharOpcionDeCompra()V:479 - InsertUnaryOp -1
   * Goal 38. Weak Mutation 481: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.desecharOpcionDeCompra()V:479 - ReplaceComparisonOperator != -> -1
   */

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Jugador jugador0 = new Jugador("\n\tTarjetas de suerte:\n");
      Tablero tablero0 = new Tablero();
      jugador0.setTablero(tablero0);
      // Undeclared exception!
      try { 
        jugador0.desecharOpcionDeCompra();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         assertThrownBy("edu.uclm.esi.iso5.juegos.monopoly.dominio.Tablero", e);
      }
  }

  //Test case number: 25
  /*
   * 26 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addPosesion(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: root-Branch
   * Goal 3. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addPosesion(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:addPosesion(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:<init>(Ljava/lang/String;)V
   * Goal 5. addPosesion(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V_java.lang.NullPointerException_IMPLICIT
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 48
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 49
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 50
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 51
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 52
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 53
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 54
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addPosesion(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: Line 222
   * Goal 14. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addPosesion(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: Line 223
   * Goal 15. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 16. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addPosesion(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V
   * Goal 17. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 18. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 0.0
   * Goal 19. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1.0
   * Goal 20. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> -1.0
   * Goal 21. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1499.0
   * Goal 22. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1501.0
   * Goal 23. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 0
   * Goal 24. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 1
   * Goal 25. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> -1
   * Goal 26. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 3
   */

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Jugador jugador0 = new Jugador("}>xsjS`Mcl");
      // Undeclared exception!
      try { 
        jugador0.addPosesion((CasillaConPrecio) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador", e);
      }
  }

  //Test case number: 26
  /*
   * 77 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: root-Branch
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: I11 Branch 8 IFEQ L108 - true
   * Goal 4. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: I29 Branch 10 IFNONNULL L111 - false
   * Goal 5. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: I34 Branch 11 IFLE L111 - true
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: I59 Branch 12 IF_ICMPNE L116 - false
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: I79 Branch 13 IFEQ L119 - true
   * Goal 8. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:<init>(Ljava/lang/String;)V
   * Goal 9. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: root-Branch in context: 
   * Goal 10. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: I11 Branch 8 IFEQ L108 - true in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:setDados(II)V
   * Goal 11. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: I29 Branch 10 IFNONNULL L111 - false in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:setDados(II)V
   * Goal 12. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: I34 Branch 11 IFLE L111 - true in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:setDados(II)V
   * Goal 13. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: I59 Branch 12 IF_ICMPNE L116 - false in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:setDados(II)V
   * Goal 14. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: I79 Branch 13 IFEQ L119 - true in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:setDados(II)V
   * Goal 15. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 48
   * Goal 16. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 49
   * Goal 17. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 50
   * Goal 18. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 51
   * Goal 19. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 52
   * Goal 20. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 53
   * Goal 21. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 54
   * Goal 22. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: Line 107
   * Goal 23. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: Line 108
   * Goal 24. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: Line 111
   * Goal 25. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: Line 114
   * Goal 26. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: Line 115
   * Goal 27. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: Line 116
   * Goal 28. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: Line 117
   * Goal 29. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: Line 119
   * Goal 30. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: Line 121
   * Goal 31. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: Line 152
   * Goal 32. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: Line 153
   * Goal 33. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 34. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V
   * Goal 35. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V
   * Goal 36. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 37. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V
   * Goal 38. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V
   * Goal 39. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 0.0
   * Goal 40. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1.0
   * Goal 41. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> -1.0
   * Goal 42. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1499.0
   * Goal 43. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1501.0
   * Goal 44. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 0
   * Goal 45. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 1
   * Goal 46. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> -1
   * Goal 47. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 3
   * Goal 48. Weak Mutation 53: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:108 - ReplaceComparisonOperator == -> !=
   * Goal 49. Weak Mutation 60: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:111 - ReplaceComparisonOperator != null -> = null
   * Goal 50. Weak Mutation 61: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:111 - InsertUnaryOp Negation
   * Goal 51. Weak Mutation 62: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:111 - ReplaceConstant - 0.0 -> 1.0
   * Goal 52. Weak Mutation 63: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:111 - ReplaceConstant - 0.0 -> -1.0
   * Goal 53. Weak Mutation 66: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:111 - ReplaceComparisonOperator <= -> <
   * Goal 54. Weak Mutation 67: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:114 - ReplaceConstant - 0 -> 1
   * Goal 55. Weak Mutation 69: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:114 - ReplaceVariable dado1 -> jugadorConElTurno
   * Goal 56. Weak Mutation 70: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:114 - InsertUnaryOp Negation of dado1
   * Goal 57. Weak Mutation 71: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:115 - ReplaceConstant - 1 -> 0
   * Goal 58. Weak Mutation 73: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:115 - ReplaceVariable dado2 -> jugadorConElTurno
   * Goal 59. Weak Mutation 74: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:115 - InsertUnaryOp Negation of dado2
   * Goal 60. Weak Mutation 76: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:116 - ReplaceVariable dado1 -> jugadorConElTurno
   * Goal 61. Weak Mutation 77: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:116 - InsertUnaryOp Negation of dado1
   * Goal 62. Weak Mutation 78: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:116 - InsertUnaryOp IINC 1 dado1
   * Goal 63. Weak Mutation 79: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:116 - InsertUnaryOp IINC -1 dado1
   * Goal 64. Weak Mutation 81: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:116 - ReplaceVariable dado2 -> jugadorConElTurno
   * Goal 65. Weak Mutation 82: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:116 - InsertUnaryOp Negation of dado2
   * Goal 66. Weak Mutation 83: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:116 - InsertUnaryOp IINC 1 dado2
   * Goal 67. Weak Mutation 84: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:116 - InsertUnaryOp IINC -1 dado2
   * Goal 68. Weak Mutation 85: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:116 - ReplaceComparisonOperator != -> -1
   * Goal 69. Weak Mutation 88: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:117 - InsertUnaryOp Negation
   * Goal 70. Weak Mutation 89: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:117 - InsertUnaryOp +1
   * Goal 71. Weak Mutation 90: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:117 - InsertUnaryOp -1
   * Goal 72. Weak Mutation 91: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:117 - ReplaceConstant - 1 -> 0
   * Goal 73. Weak Mutation 92: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:117 - ReplaceArithmeticOperator + -> %
   * Goal 74. Weak Mutation 93: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:117 - ReplaceArithmeticOperator + -> -
   * Goal 75. Weak Mutation 94: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:117 - ReplaceArithmeticOperator + -> *
   * Goal 76. Weak Mutation 95: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:117 - ReplaceArithmeticOperator + -> /
   * Goal 77. Weak Mutation 97: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:119 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Jugador jugador0 = new Jugador("\n\tTarjetas de suerte:\n");
      Tablero tablero0 = new Tablero();
      jugador0.setTablero(tablero0);
      jugador0.setDados(2169, 2169);
      assertEquals(4338, jugador0.getSumaDados());
  }

  //Test case number: 27
  /*
   * 51 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDeudaConBanca(D)V: root-Branch
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: root-Branch
   * Goal 4. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: I11 Branch 8 IFEQ L108 - true
   * Goal 5. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: I29 Branch 10 IFNONNULL L111 - false
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: I34 Branch 11 IFLE L111 - false
   * Goal 7. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:<init>(Ljava/lang/String;)V
   * Goal 8. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: root-Branch in context: 
   * Goal 9. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDeudaConBanca(D)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:setDeudaConBanca(D)V
   * Goal 10. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: I11 Branch 8 IFEQ L108 - true in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:setDados(II)V
   * Goal 11. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: I34 Branch 11 IFLE L111 - false in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:setDados(II)V
   * Goal 12. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: I29 Branch 10 IFNONNULL L111 - false in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:setDados(II)V
   * Goal 13. setDados(II)V_org.evosuite.runtime.mock.java.lang.MockException_DECLARED
   * Goal 14. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 48
   * Goal 15. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 49
   * Goal 16. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 50
   * Goal 17. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 51
   * Goal 18. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 52
   * Goal 19. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 53
   * Goal 20. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 54
   * Goal 21. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: Line 107
   * Goal 22. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: Line 108
   * Goal 23. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: Line 111
   * Goal 24. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: Line 112
   * Goal 25. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDeudaConBanca(D)V: Line 382
   * Goal 26. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDeudaConBanca(D)V: Line 383
   * Goal 27. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: Line 152
   * Goal 28. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: Line 153
   * Goal 29. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 30. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V
   * Goal 31. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDeudaConBanca(D)V
   * Goal 32. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V
   * Goal 33. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 34. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDeudaConBanca(D)V
   * Goal 35. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V
   * Goal 36. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 0.0
   * Goal 37. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1.0
   * Goal 38. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> -1.0
   * Goal 39. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1499.0
   * Goal 40. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1501.0
   * Goal 41. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 0
   * Goal 42. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 1
   * Goal 43. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> -1
   * Goal 44. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 3
   * Goal 45. Weak Mutation 53: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:108 - ReplaceComparisonOperator == -> !=
   * Goal 46. Weak Mutation 60: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:111 - ReplaceComparisonOperator != null -> = null
   * Goal 47. Weak Mutation 61: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:111 - InsertUnaryOp Negation
   * Goal 48. Weak Mutation 62: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:111 - ReplaceConstant - 0.0 -> 1.0
   * Goal 49. Weak Mutation 63: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:111 - ReplaceConstant - 0.0 -> -1.0
   * Goal 50. Weak Mutation 64: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:111 - ReplaceComparisonOperator <= -> -1
   * Goal 51. Weak Mutation 362: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDeudaConBanca(D)V:382 - InsertUnaryOp Negation of importe
   */

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Jugador jugador0 = new Jugador("");
      Tablero tablero0 = new Tablero();
      jugador0.setDeudaConBanca(350.0);
      jugador0.setTablero(tablero0);
      try { 
        jugador0.setDados(20, 24);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador", e);
      }
  }

  //Test case number: 28
  /*
   * 74 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: root-Branch
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: I11 Branch 8 IFEQ L108 - true
   * Goal 4. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: I29 Branch 10 IFNONNULL L111 - false
   * Goal 5. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: I34 Branch 11 IFLE L111 - true
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: I59 Branch 12 IF_ICMPNE L116 - true
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: I79 Branch 13 IFEQ L119 - true
   * Goal 8. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:<init>(Ljava/lang/String;)V
   * Goal 9. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: root-Branch in context: 
   * Goal 10. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: I11 Branch 8 IFEQ L108 - true in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:setDados(II)V
   * Goal 11. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: I29 Branch 10 IFNONNULL L111 - false in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:setDados(II)V
   * Goal 12. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: I34 Branch 11 IFLE L111 - true in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:setDados(II)V
   * Goal 13. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: I59 Branch 12 IF_ICMPNE L116 - true in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:setDados(II)V
   * Goal 14. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: I79 Branch 13 IFEQ L119 - true in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:setDados(II)V
   * Goal 15. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 48
   * Goal 16. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 49
   * Goal 17. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 50
   * Goal 18. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 51
   * Goal 19. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 52
   * Goal 20. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 53
   * Goal 21. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 54
   * Goal 22. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: Line 107
   * Goal 23. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: Line 108
   * Goal 24. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: Line 111
   * Goal 25. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: Line 114
   * Goal 26. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: Line 115
   * Goal 27. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: Line 116
   * Goal 28. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: Line 118
   * Goal 29. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: Line 119
   * Goal 30. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: Line 121
   * Goal 31. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: Line 152
   * Goal 32. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: Line 153
   * Goal 33. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 34. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V
   * Goal 35. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V
   * Goal 36. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 37. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V
   * Goal 38. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V
   * Goal 39. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 0.0
   * Goal 40. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1.0
   * Goal 41. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> -1.0
   * Goal 42. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1499.0
   * Goal 43. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1501.0
   * Goal 44. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 0
   * Goal 45. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 1
   * Goal 46. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> -1
   * Goal 47. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 3
   * Goal 48. Weak Mutation 53: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:108 - ReplaceComparisonOperator == -> !=
   * Goal 49. Weak Mutation 60: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:111 - ReplaceComparisonOperator != null -> = null
   * Goal 50. Weak Mutation 61: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:111 - InsertUnaryOp Negation
   * Goal 51. Weak Mutation 62: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:111 - ReplaceConstant - 0.0 -> 1.0
   * Goal 52. Weak Mutation 63: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:111 - ReplaceConstant - 0.0 -> -1.0
   * Goal 53. Weak Mutation 66: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:111 - ReplaceComparisonOperator <= -> <
   * Goal 54. Weak Mutation 67: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:114 - ReplaceConstant - 0 -> 1
   * Goal 55. Weak Mutation 68: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:114 - ReplaceVariable dado1 -> dado2
   * Goal 56. Weak Mutation 69: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:114 - ReplaceVariable dado1 -> jugadorConElTurno
   * Goal 57. Weak Mutation 70: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:114 - InsertUnaryOp Negation of dado1
   * Goal 58. Weak Mutation 71: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:115 - ReplaceConstant - 1 -> 0
   * Goal 59. Weak Mutation 72: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:115 - ReplaceVariable dado2 -> dado1
   * Goal 60. Weak Mutation 73: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:115 - ReplaceVariable dado2 -> jugadorConElTurno
   * Goal 61. Weak Mutation 74: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:115 - InsertUnaryOp Negation of dado2
   * Goal 62. Weak Mutation 75: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:116 - ReplaceVariable dado1 -> dado2
   * Goal 63. Weak Mutation 76: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:116 - ReplaceVariable dado1 -> jugadorConElTurno
   * Goal 64. Weak Mutation 77: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:116 - InsertUnaryOp Negation of dado1
   * Goal 65. Weak Mutation 78: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:116 - InsertUnaryOp IINC 1 dado1
   * Goal 66. Weak Mutation 79: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:116 - InsertUnaryOp IINC -1 dado1
   * Goal 67. Weak Mutation 80: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:116 - ReplaceVariable dado2 -> dado1
   * Goal 68. Weak Mutation 81: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:116 - ReplaceVariable dado2 -> jugadorConElTurno
   * Goal 69. Weak Mutation 82: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:116 - InsertUnaryOp Negation of dado2
   * Goal 70. Weak Mutation 83: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:116 - InsertUnaryOp IINC 1 dado2
   * Goal 71. Weak Mutation 84: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:116 - InsertUnaryOp IINC -1 dado2
   * Goal 72. Weak Mutation 87: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:116 - ReplaceComparisonOperator != -> >
   * Goal 73. Weak Mutation 96: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:118 - ReplaceConstant - 0 -> 1
   * Goal 74. Weak Mutation 97: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:119 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Jugador jugador0 = new Jugador("");
      Tablero tablero0 = new Tablero();
      jugador0.setTablero(tablero0);
      jugador0.setDados(20, 24);
      assertEquals(44, jugador0.getSumaDados());
  }

  //Test case number: 29
  /*
   * 27 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getCapital()D: root-Branch
   * Goal 3. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:<init>(Ljava/lang/String;)V
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getCapital()D: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:getCapital()D
   * Goal 5. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getCapital()D:Positive
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 48
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 49
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 50
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 51
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 52
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 53
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 54
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getCapital()D: Line 140
   * Goal 14. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 15. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getCapital()D
   * Goal 16. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 17. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getCapital()D
   * Goal 18. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 0.0
   * Goal 19. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1.0
   * Goal 20. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> -1.0
   * Goal 21. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1499.0
   * Goal 22. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1501.0
   * Goal 23. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 0
   * Goal 24. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 1
   * Goal 25. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> -1
   * Goal 26. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 3
   * Goal 27. Weak Mutation 98: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getCapital()D:140 - InsertUnaryOp Negation
   */

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Jugador jugador0 = new Jugador(")");
      double double0 = jugador0.getCapital();
      assertEquals(1500.0, double0, 0.01);
  }

  //Test case number: 30
  /*
   * 26 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getCasilla()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Casilla;: root-Branch
   * Goal 3. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getCasilla()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Casilla;: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:getCasilla()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Casilla;
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:<init>(Ljava/lang/String;)V
   * Goal 5. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getCasilla()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Casilla;:Null
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 48
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 49
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 50
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 51
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 52
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 53
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 54
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getCasilla()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Casilla;: Line 132
   * Goal 14. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 15. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getCasilla()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Casilla;
   * Goal 16. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 17. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getCasilla()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Casilla;
   * Goal 18. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 0.0
   * Goal 19. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1.0
   * Goal 20. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> -1.0
   * Goal 21. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1499.0
   * Goal 22. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1501.0
   * Goal 23. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 0
   * Goal 24. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 1
   * Goal 25. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> -1
   * Goal 26. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 3
   */

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Jugador jugador0 = new Jugador("F'Lb$");
      jugador0.getCasilla();
      assertEquals(1500.0, jugador0.getCapital(), 0.01);
  }

  //Test case number: 31
  /*
   * 32 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 3. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:decrementarCapital(D)V
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:<init>(Ljava/lang/String;)V
   * Goal 5. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 48
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 49
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 50
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 51
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 52
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 53
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 54
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V: Line 148
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V: Line 149
   * Goal 14. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 15. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V
   * Goal 16. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 17. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V
   * Goal 18. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 0.0
   * Goal 19. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1.0
   * Goal 20. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> -1.0
   * Goal 21. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1499.0
   * Goal 22. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1501.0
   * Goal 23. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 0
   * Goal 24. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 1
   * Goal 25. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> -1
   * Goal 26. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 3
   * Goal 27. Weak Mutation 99: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V:148 - InsertUnaryOp Negation
   * Goal 28. Weak Mutation 100: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V:148 - InsertUnaryOp Negation of importe
   * Goal 29. Weak Mutation 101: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V:148 - ReplaceArithmeticOperator - -> +
   * Goal 30. Weak Mutation 102: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V:148 - ReplaceArithmeticOperator - -> %
   * Goal 31. Weak Mutation 103: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V:148 - ReplaceArithmeticOperator - -> *
   * Goal 32. Weak Mutation 104: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V:148 - ReplaceArithmeticOperator - -> /
   */

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Jugador jugador0 = new Jugador("^6:|QF4}9Y8D$.JQU");
      jugador0.decrementarCapital((-2007.066660939));
      assertEquals(3507.066660939, jugador0.getCapital(), 0.01);
  }

  //Test case number: 32
  /*
   * 38 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: root-Branch
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.devolverEdificaciones(II)V: I11 Branch 63 IFNE L504 - false
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:<init>(Ljava/lang/String;)V
   * Goal 5. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: root-Branch in context: 
   * Goal 6. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.devolverEdificaciones(II)V: I11 Branch 63 IFNE L504 - false in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:devolverEdificaciones(II)V
   * Goal 7. devolverEdificaciones(II)V_org.evosuite.runtime.mock.java.lang.MockException_DECLARED
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 48
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 49
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 50
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 51
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 52
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 53
   * Goal 14. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 54
   * Goal 15. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.devolverEdificaciones(II)V: Line 503
   * Goal 16. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.devolverEdificaciones(II)V: Line 504
   * Goal 17. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.devolverEdificaciones(II)V: Line 505
   * Goal 18. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: Line 152
   * Goal 19. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: Line 153
   * Goal 20. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 21. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.devolverEdificaciones(II)V
   * Goal 22. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V
   * Goal 23. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 24. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V
   * Goal 25. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 0.0
   * Goal 26. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1.0
   * Goal 27. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> -1.0
   * Goal 28. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1499.0
   * Goal 29. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1501.0
   * Goal 30. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 0
   * Goal 31. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 1
   * Goal 32. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> -1
   * Goal 33. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 3
   * Goal 34. Weak Mutation 503: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.devolverEdificaciones(II)V:503 - ReplaceVariable posicion -> numeroDeCasas
   * Goal 35. Weak Mutation 504: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.devolverEdificaciones(II)V:503 - InsertUnaryOp Negation of posicion
   * Goal 36. Weak Mutation 505: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.devolverEdificaciones(II)V:503 - InsertUnaryOp IINC 1 posicion
   * Goal 37. Weak Mutation 506: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.devolverEdificaciones(II)V:503 - InsertUnaryOp IINC -1 posicion
   * Goal 38. Weak Mutation 507: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.devolverEdificaciones(II)V:504 - ReplaceComparisonOperator != -> ==
   */

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Jugador jugador0 = new Jugador("");
      Tablero tablero0 = new Tablero();
      jugador0.setTablero(tablero0);
      try { 
        jugador0.devolverEdificaciones(0, 21);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador", e);
      }
  }

  //Test case number: 33
  /*
   * 58 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addPosesion(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: root-Branch
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeCompanias()I: I13 Branch 61 IF_ICMPGE L485 - true
   * Goal 4. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeCompanias()I: I13 Branch 61 IF_ICMPGE L485 - false
   * Goal 5. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeCompanias()I: I26 Branch 62 IFEQ L487 - false
   * Goal 6. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addPosesion(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:addPosesion(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V
   * Goal 7. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:<init>(Ljava/lang/String;)V
   * Goal 8. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeCompanias()I: I13 Branch 61 IF_ICMPGE L485 - true in context: 
   * Goal 9. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeCompanias()I: I13 Branch 61 IF_ICMPGE L485 - false in context: 
   * Goal 10. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeCompanias()I: I26 Branch 62 IFEQ L487 - false in context: 
   * Goal 11. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeCompanias()I:Positive
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 48
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 49
   * Goal 14. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 50
   * Goal 15. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 51
   * Goal 16. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 52
   * Goal 17. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 53
   * Goal 18. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 54
   * Goal 19. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addPosesion(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: Line 222
   * Goal 20. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addPosesion(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: Line 223
   * Goal 21. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addPosesion(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: Line 224
   * Goal 22. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeCompanias()I: Line 484
   * Goal 23. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeCompanias()I: Line 485
   * Goal 24. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeCompanias()I: Line 486
   * Goal 25. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeCompanias()I: Line 487
   * Goal 26. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeCompanias()I: Line 488
   * Goal 27. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeCompanias()I: Line 490
   * Goal 28. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 29. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addPosesion(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V
   * Goal 30. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeCompanias()I
   * Goal 31. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 32. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addPosesion(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V
   * Goal 33. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeCompanias()I
   * Goal 34. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 0.0
   * Goal 35. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1.0
   * Goal 36. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> -1.0
   * Goal 37. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1499.0
   * Goal 38. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1501.0
   * Goal 39. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 0
   * Goal 40. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 1
   * Goal 41. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> -1
   * Goal 42. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 3
   * Goal 43. Weak Mutation 484: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeCompanias()I:484 - ReplaceConstant - 0 -> 1
   * Goal 44. Weak Mutation 485: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeCompanias()I:485 - ReplaceConstant - 0 -> 1
   * Goal 45. Weak Mutation 487: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeCompanias()I:485 - InsertUnaryOp Negation of i
   * Goal 46. Weak Mutation 488: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeCompanias()I:485 - InsertUnaryOp IINC 1 i
   * Goal 47. Weak Mutation 489: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeCompanias()I:485 - InsertUnaryOp IINC -1 i
   * Goal 48. Weak Mutation 490: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeCompanias()I:485 - ReplaceComparisonOperator >= -> -1
   * Goal 49. Weak Mutation 491: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeCompanias()I:485 - ReplaceComparisonOperator >= -> >
   * Goal 50. Weak Mutation 499: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeCompanias()I:485 - ReplaceVariable i -> r
   * Goal 51. Weak Mutation 494: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeCompanias()I:486 - InsertUnaryOp Negation of i
   * Goal 52. Weak Mutation 495: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeCompanias()I:486 - InsertUnaryOp IINC 1 i
   * Goal 53. Weak Mutation 496: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeCompanias()I:486 - InsertUnaryOp IINC -1 i
   * Goal 54. Weak Mutation 497: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeCompanias()I:487 - ReplaceComparisonOperator == -> !=
   * Goal 55. Weak Mutation 498: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeCompanias()I:488 - ReplaceVariable r -> i
   * Goal 56. Weak Mutation 500: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeCompanias()I:490 - InsertUnaryOp Negation of r
   * Goal 57. Weak Mutation 501: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeCompanias()I:490 - InsertUnaryOp IINC 1 r
   * Goal 58. Weak Mutation 502: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getNumeroDeCompanias()I:490 - InsertUnaryOp IINC -1 r
   */

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Jugador jugador0 = new Jugador("");
      Compania compania0 = new Compania("", 4026.296306035564, (-1349));
      jugador0.addPosesion(compania0);
      assertEquals(4.0, compania0.getTasaPorCaer(), 0.01);
      
      int int0 = jugador0.getNumeroDeCompanias();
      assertEquals(1, int0);
  }

  //Test case number: 34
  /*
   * 32 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.desecharOpcionDeCompra()V: I9 Branch 60 IFNE L479 - false
   * Goal 3. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:<init>(Ljava/lang/String;)V
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.desecharOpcionDeCompra()V: I9 Branch 60 IFNE L479 - false in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:desecharOpcionDeCompra()V
   * Goal 5. desecharOpcionDeCompra()V_java.lang.NullPointerException_IMPLICIT
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 48
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 49
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 50
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 51
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 52
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 53
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 54
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.desecharOpcionDeCompra()V: Line 478
   * Goal 14. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.desecharOpcionDeCompra()V: Line 479
   * Goal 15. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.desecharOpcionDeCompra()V: Line 480
   * Goal 16. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 17. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.desecharOpcionDeCompra()V
   * Goal 18. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 19. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 0.0
   * Goal 20. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1.0
   * Goal 21. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> -1.0
   * Goal 22. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1499.0
   * Goal 23. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1501.0
   * Goal 24. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 0
   * Goal 25. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 1
   * Goal 26. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> -1
   * Goal 27. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 3
   * Goal 28. Weak Mutation 477: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.desecharOpcionDeCompra()V:478 - ReplaceConstant - 0 -> 1
   * Goal 29. Weak Mutation 478: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.desecharOpcionDeCompra()V:479 - InsertUnaryOp Negation
   * Goal 30. Weak Mutation 479: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.desecharOpcionDeCompra()V:479 - InsertUnaryOp +1
   * Goal 31. Weak Mutation 480: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.desecharOpcionDeCompra()V:479 - InsertUnaryOp -1
   * Goal 32. Weak Mutation 481: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.desecharOpcionDeCompra()V:479 - ReplaceComparisonOperator != -> -1
   */

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Jugador jugador0 = new Jugador("Salida");
      // Undeclared exception!
      try { 
        jugador0.desecharOpcionDeCompra();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador", e);
      }
  }

  //Test case number: 35
  /*
   * 27 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.levantarHipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: I4 Branch 57 IFNE L462 - false
   * Goal 3. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:<init>(Ljava/lang/String;)V
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.levantarHipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: I4 Branch 57 IFNE L462 - false in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:levantarHipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V
   * Goal 5. levantarHipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V_org.evosuite.runtime.mock.java.lang.MockException_DECLARED
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 48
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 49
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 50
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 51
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 52
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 53
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 54
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.levantarHipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: Line 462
   * Goal 14. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.levantarHipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: Line 463
   * Goal 15. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 16. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.levantarHipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V
   * Goal 17. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 18. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 0.0
   * Goal 19. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1.0
   * Goal 20. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> -1.0
   * Goal 21. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1499.0
   * Goal 22. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1501.0
   * Goal 23. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 0
   * Goal 24. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 1
   * Goal 25. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> -1
   * Goal 26. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 3
   * Goal 27. Weak Mutation 453: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.levantarHipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V:462 - ReplaceComparisonOperator != -> ==
   */

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Jugador jugador0 = new Jugador("\n\tTarjetas de Caja:\n");
      Compania compania0 = new Compania("d", 1.0, 51);
      try { 
        jugador0.levantarHipoteca(compania0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador", e);
      }
  }

  //Test case number: 36
  /*
   * 78 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getCapital()D: root-Branch
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: root-Branch
   * Goal 4. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V: I7 Branch 50 IFNE L435 - true
   * Goal 5. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V: I29 Branch 51 IF_ICMPLE L438 - true
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V: I46 Branch 52 IFLE L440 - true
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V: I57 Branch 53 IFNULL L442 - true
   * Goal 8. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:<init>(Ljava/lang/String;)V
   * Goal 9. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: root-Branch in context: 
   * Goal 10. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V: I7 Branch 50 IFNE L435 - true in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:edificar(II)V
   * Goal 11. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V: I29 Branch 51 IF_ICMPLE L438 - true in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:edificar(II)V
   * Goal 12. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V: I46 Branch 52 IFLE L440 - true in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:edificar(II)V
   * Goal 13. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V: I57 Branch 53 IFNULL L442 - true in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:edificar(II)V
   * Goal 14. edificar(II)V_org.evosuite.runtime.mock.java.lang.MockException_DECLARED
   * Goal 15. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 48
   * Goal 16. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 49
   * Goal 17. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 50
   * Goal 18. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 51
   * Goal 19. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 52
   * Goal 20. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 53
   * Goal 21. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 54
   * Goal 22. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V: Line 435
   * Goal 23. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V: Line 437
   * Goal 24. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V: Line 438
   * Goal 25. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V: Line 440
   * Goal 26. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V: Line 442
   * Goal 27. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V: Line 443
   * Goal 28. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getCapital()D: Line 140
   * Goal 29. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: Line 152
   * Goal 30. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: Line 153
   * Goal 31. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 32. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V
   * Goal 33. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V
   * Goal 34. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 35. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V
   * Goal 36. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 0.0
   * Goal 37. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1.0
   * Goal 38. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> -1.0
   * Goal 39. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1499.0
   * Goal 40. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1501.0
   * Goal 41. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 0
   * Goal 42. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 1
   * Goal 43. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> -1
   * Goal 44. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 3
   * Goal 45. Weak Mutation 98: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getCapital()D:140 - InsertUnaryOp Negation
   * Goal 46. Weak Mutation 401: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V:435 - ReplaceVariable posCasilla -> numeroDeCasas
   * Goal 47. Weak Mutation 402: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V:435 - InsertUnaryOp Negation of posCasilla
   * Goal 48. Weak Mutation 403: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V:435 - InsertUnaryOp IINC 1 posCasilla
   * Goal 49. Weak Mutation 404: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V:435 - InsertUnaryOp IINC -1 posCasilla
   * Goal 50. Weak Mutation 405: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V:435 - ReplaceComparisonOperator != -> ==
   * Goal 51. Weak Mutation 406: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V:437 - ReplaceVariable posCasilla -> numeroDeCasas
   * Goal 52. Weak Mutation 407: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V:437 - InsertUnaryOp Negation of posCasilla
   * Goal 53. Weak Mutation 408: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V:437 - InsertUnaryOp IINC 1 posCasilla
   * Goal 54. Weak Mutation 409: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V:437 - InsertUnaryOp IINC -1 posCasilla
   * Goal 55. Weak Mutation 410: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V:438 - ReplaceVariable numeroDeCasas -> posCasilla
   * Goal 56. Weak Mutation 411: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V:438 - InsertUnaryOp Negation of numeroDeCasas
   * Goal 57. Weak Mutation 412: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V:438 - InsertUnaryOp IINC 1 numeroDeCasas
   * Goal 58. Weak Mutation 413: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V:438 - InsertUnaryOp IINC -1 numeroDeCasas
   * Goal 59. Weak Mutation 414: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V:438 - ReplaceArithmeticOperator + -> %
   * Goal 60. Weak Mutation 415: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V:438 - ReplaceArithmeticOperator + -> -
   * Goal 61. Weak Mutation 416: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V:438 - ReplaceArithmeticOperator + -> *
   * Goal 62. Weak Mutation 417: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V:438 - ReplaceArithmeticOperator + -> /
   * Goal 63. Weak Mutation 418: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V:438 - ReplaceConstant - 5 -> 0
   * Goal 64. Weak Mutation 419: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V:438 - ReplaceConstant - 5 -> 1
   * Goal 65. Weak Mutation 420: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V:438 - ReplaceConstant - 5 -> -1
   * Goal 66. Weak Mutation 421: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V:438 - ReplaceConstant - 5 -> 4
   * Goal 67. Weak Mutation 422: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V:438 - ReplaceConstant - 5 -> 6
   * Goal 68. Weak Mutation 425: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V:438 - ReplaceComparisonOperator <= -> ==
   * Goal 69. Weak Mutation 426: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V:440 - ReplaceVariable numeroDeCasas -> posCasilla
   * Goal 70. Weak Mutation 427: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V:440 - InsertUnaryOp Negation of numeroDeCasas
   * Goal 71. Weak Mutation 428: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V:440 - InsertUnaryOp IINC 1 numeroDeCasas
   * Goal 72. Weak Mutation 429: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V:440 - InsertUnaryOp IINC -1 numeroDeCasas
   * Goal 73. Weak Mutation 430: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V:440 - ReplaceArithmeticOperator * -> +
   * Goal 74. Weak Mutation 431: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V:440 - ReplaceArithmeticOperator * -> %
   * Goal 75. Weak Mutation 432: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V:440 - ReplaceArithmeticOperator * -> -
   * Goal 76. Weak Mutation 433: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V:440 - ReplaceArithmeticOperator * -> /
   * Goal 77. Weak Mutation 435: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V:440 - ReplaceComparisonOperator <= -> ==
   * Goal 78. Weak Mutation 437: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V:442 - ReplaceComparisonOperator = null -> != null
   */

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Jugador jugador0 = new Jugador("\n\tTarjetas de suerte:\n");
      Tablero tablero0 = new Tablero();
      jugador0.setTablero(tablero0);
      try { 
        jugador0.edificar(6, (-984));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador", e);
      }
  }

  //Test case number: 37
  /*
   * 56 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: root-Branch
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V: I7 Branch 50 IFNE L435 - true
   * Goal 4. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V: I29 Branch 51 IF_ICMPLE L438 - false
   * Goal 5. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:<init>(Ljava/lang/String;)V
   * Goal 6. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: root-Branch in context: 
   * Goal 7. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V: I7 Branch 50 IFNE L435 - true in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:edificar(II)V
   * Goal 8. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V: I29 Branch 51 IF_ICMPLE L438 - false in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:edificar(II)V
   * Goal 9. edificar(II)V_org.evosuite.runtime.mock.java.lang.MockException_DECLARED
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 48
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 49
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 50
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 51
   * Goal 14. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 52
   * Goal 15. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 53
   * Goal 16. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 54
   * Goal 17. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V: Line 435
   * Goal 18. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V: Line 437
   * Goal 19. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V: Line 438
   * Goal 20. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V: Line 439
   * Goal 21. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: Line 152
   * Goal 22. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: Line 153
   * Goal 23. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 24. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V
   * Goal 25. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V
   * Goal 26. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 27. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V
   * Goal 28. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 0.0
   * Goal 29. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1.0
   * Goal 30. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> -1.0
   * Goal 31. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1499.0
   * Goal 32. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1501.0
   * Goal 33. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 0
   * Goal 34. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 1
   * Goal 35. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> -1
   * Goal 36. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 3
   * Goal 37. Weak Mutation 402: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V:435 - InsertUnaryOp Negation of posCasilla
   * Goal 38. Weak Mutation 403: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V:435 - InsertUnaryOp IINC 1 posCasilla
   * Goal 39. Weak Mutation 404: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V:435 - InsertUnaryOp IINC -1 posCasilla
   * Goal 40. Weak Mutation 405: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V:435 - ReplaceComparisonOperator != -> ==
   * Goal 41. Weak Mutation 407: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V:437 - InsertUnaryOp Negation of posCasilla
   * Goal 42. Weak Mutation 408: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V:437 - InsertUnaryOp IINC 1 posCasilla
   * Goal 43. Weak Mutation 409: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V:437 - InsertUnaryOp IINC -1 posCasilla
   * Goal 44. Weak Mutation 411: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V:438 - InsertUnaryOp Negation of numeroDeCasas
   * Goal 45. Weak Mutation 412: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V:438 - InsertUnaryOp IINC 1 numeroDeCasas
   * Goal 46. Weak Mutation 413: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V:438 - InsertUnaryOp IINC -1 numeroDeCasas
   * Goal 47. Weak Mutation 414: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V:438 - ReplaceArithmeticOperator + -> %
   * Goal 48. Weak Mutation 415: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V:438 - ReplaceArithmeticOperator + -> -
   * Goal 49. Weak Mutation 416: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V:438 - ReplaceArithmeticOperator + -> *
   * Goal 50. Weak Mutation 417: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V:438 - ReplaceArithmeticOperator + -> /
   * Goal 51. Weak Mutation 418: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V:438 - ReplaceConstant - 5 -> 0
   * Goal 52. Weak Mutation 419: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V:438 - ReplaceConstant - 5 -> 1
   * Goal 53. Weak Mutation 420: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V:438 - ReplaceConstant - 5 -> -1
   * Goal 54. Weak Mutation 421: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V:438 - ReplaceConstant - 5 -> 4
   * Goal 55. Weak Mutation 422: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V:438 - ReplaceConstant - 5 -> 6
   * Goal 56. Weak Mutation 423: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V:438 - ReplaceComparisonOperator <= -> -1
   */

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Jugador jugador0 = new Jugador("7-N(2>djh$d)4,Su<hz");
      Tablero tablero0 = new Tablero();
      jugador0.setTablero(tablero0);
      try { 
        jugador0.edificar(29, 29);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador", e);
      }
  }

  //Test case number: 38
  /*
   * 64 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getTurnosSinJugar()I: root-Branch
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 4. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: root-Branch
   * Goal 5. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setCasilla(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Casilla;)V: root-Branch
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.saldarDeudaConBanca()V: I7 Branch 46 IFGE L398 - true
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.saldarDeudaConBanca()V: I36 Branch 47 IFNE L403 - false
   * Goal 8. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setCasilla(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Casilla;)V: root-Branch in context: 
   * Goal 9. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:<init>(Ljava/lang/String;)V
   * Goal 10. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: root-Branch in context: 
   * Goal 11. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.saldarDeudaConBanca()V: I7 Branch 46 IFGE L398 - true in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:saldarDeudaConBanca()V
   * Goal 12. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.saldarDeudaConBanca()V: I36 Branch 47 IFNE L403 - false in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:saldarDeudaConBanca()V
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 48
   * Goal 14. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 49
   * Goal 15. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 50
   * Goal 16. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 51
   * Goal 17. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 52
   * Goal 18. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 53
   * Goal 19. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 54
   * Goal 20. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V: Line 148
   * Goal 21. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V: Line 149
   * Goal 22. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getTurnosSinJugar()I: Line 239
   * Goal 23. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.saldarDeudaConBanca()V: Line 398
   * Goal 24. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.saldarDeudaConBanca()V: Line 400
   * Goal 25. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.saldarDeudaConBanca()V: Line 401
   * Goal 26. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.saldarDeudaConBanca()V: Line 402
   * Goal 27. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.saldarDeudaConBanca()V: Line 403
   * Goal 28. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.saldarDeudaConBanca()V: Line 404
   * Goal 29. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.saldarDeudaConBanca()V: Line 405
   * Goal 30. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setCasilla(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Casilla;)V: Line 124
   * Goal 31. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setCasilla(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Casilla;)V: Line 125
   * Goal 32. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: Line 152
   * Goal 33. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: Line 153
   * Goal 34. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 35. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.saldarDeudaConBanca()V
   * Goal 36. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 37. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.saldarDeudaConBanca()V
   * Goal 38. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 0.0
   * Goal 39. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1.0
   * Goal 40. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> -1.0
   * Goal 41. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1499.0
   * Goal 42. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1501.0
   * Goal 43. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 0
   * Goal 44. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 1
   * Goal 45. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> -1
   * Goal 46. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 3
   * Goal 47. Weak Mutation 99: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V:148 - InsertUnaryOp Negation
   * Goal 48. Weak Mutation 100: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V:148 - InsertUnaryOp Negation of importe
   * Goal 49. Weak Mutation 102: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V:148 - ReplaceArithmeticOperator - -> %
   * Goal 50. Weak Mutation 104: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V:148 - ReplaceArithmeticOperator - -> /
   * Goal 51. Weak Mutation 203: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getTurnosSinJugar()I:239 - InsertUnaryOp Negation
   * Goal 52. Weak Mutation 204: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getTurnosSinJugar()I:239 - InsertUnaryOp +1
   * Goal 53. Weak Mutation 205: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getTurnosSinJugar()I:239 - InsertUnaryOp -1
   * Goal 54. Weak Mutation 364: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.saldarDeudaConBanca()V:398 - InsertUnaryOp Negation
   * Goal 55. Weak Mutation 365: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.saldarDeudaConBanca()V:398 - InsertUnaryOp Negation
   * Goal 56. Weak Mutation 367: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.saldarDeudaConBanca()V:398 - ReplaceComparisonOperator >= -> ==
   * Goal 57. Weak Mutation 369: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.saldarDeudaConBanca()V:400 - InsertUnaryOp Negation
   * Goal 58. Weak Mutation 370: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.saldarDeudaConBanca()V:401 - InsertUnaryOp Negation
   * Goal 59. Weak Mutation 371: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.saldarDeudaConBanca()V:402 - ReplaceConstant - 0.0 -> 1.0
   * Goal 60. Weak Mutation 372: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.saldarDeudaConBanca()V:402 - ReplaceConstant - 0.0 -> -1.0
   * Goal 61. Weak Mutation 373: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.saldarDeudaConBanca()V:403 - InsertUnaryOp Negation
   * Goal 62. Weak Mutation 374: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.saldarDeudaConBanca()V:403 - InsertUnaryOp +1
   * Goal 63. Weak Mutation 375: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.saldarDeudaConBanca()V:403 - InsertUnaryOp -1
   * Goal 64. Weak Mutation 376: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.saldarDeudaConBanca()V:403 - ReplaceComparisonOperator != -> -1
   */

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Jugador jugador0 = new Jugador("ow.tm");
      Tablero tablero0 = new Tablero();
      tablero0.add(jugador0);
      jugador0.saldarDeudaConBanca();
      assertEquals(0.0, jugador0.getDeudaConBanca(), 0.01);
      assertEquals(0, jugador0.getTurnosSinJugar());
      assertEquals(1500.0, jugador0.getCapital(), 0.01);
  }

  //Test case number: 39
  /*
   * 36 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDeudaConBanca(D)V: root-Branch
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.saldarDeudaConBanca()V: I7 Branch 46 IFGE L398 - false
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:<init>(Ljava/lang/String;)V
   * Goal 5. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDeudaConBanca(D)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:setDeudaConBanca(D)V
   * Goal 6. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.saldarDeudaConBanca()V: I7 Branch 46 IFGE L398 - false in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:saldarDeudaConBanca()V
   * Goal 7. saldarDeudaConBanca()V_org.evosuite.runtime.mock.java.lang.MockException_DECLARED
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 48
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 49
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 50
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 51
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 52
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 53
   * Goal 14. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 54
   * Goal 15. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.saldarDeudaConBanca()V: Line 398
   * Goal 16. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.saldarDeudaConBanca()V: Line 399
   * Goal 17. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDeudaConBanca(D)V: Line 382
   * Goal 18. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDeudaConBanca(D)V: Line 383
   * Goal 19. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 20. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.saldarDeudaConBanca()V
   * Goal 21. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDeudaConBanca(D)V
   * Goal 22. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 23. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDeudaConBanca(D)V
   * Goal 24. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 0.0
   * Goal 25. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1.0
   * Goal 26. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> -1.0
   * Goal 27. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1499.0
   * Goal 28. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1501.0
   * Goal 29. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 0
   * Goal 30. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 1
   * Goal 31. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> -1
   * Goal 32. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 3
   * Goal 33. Weak Mutation 362: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDeudaConBanca(D)V:382 - InsertUnaryOp Negation of importe
   * Goal 34. Weak Mutation 364: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.saldarDeudaConBanca()V:398 - InsertUnaryOp Negation
   * Goal 35. Weak Mutation 365: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.saldarDeudaConBanca()V:398 - InsertUnaryOp Negation
   * Goal 36. Weak Mutation 366: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.saldarDeudaConBanca()V:398 - ReplaceComparisonOperator >= -> -1
   */

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Jugador jugador0 = new Jugador("ow.tm");
      jugador0.setDeudaConBanca(2197);
      try { 
        jugador0.saldarDeudaConBanca();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador", e);
      }
  }

  //Test case number: 40
  /*
   * 39 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.saldarDeudaConBanca()V: I7 Branch 46 IFGE L398 - true
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:<init>(Ljava/lang/String;)V
   * Goal 5. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.saldarDeudaConBanca()V: I7 Branch 46 IFGE L398 - true in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:saldarDeudaConBanca()V
   * Goal 6. saldarDeudaConBanca()V_java.lang.NullPointerException_IMPLICIT
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 48
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 49
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 50
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 51
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 52
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 53
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 54
   * Goal 14. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V: Line 148
   * Goal 15. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V: Line 149
   * Goal 16. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.saldarDeudaConBanca()V: Line 398
   * Goal 17. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.saldarDeudaConBanca()V: Line 400
   * Goal 18. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.saldarDeudaConBanca()V: Line 401
   * Goal 19. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 20. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.saldarDeudaConBanca()V
   * Goal 21. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 22. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 0.0
   * Goal 23. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1.0
   * Goal 24. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> -1.0
   * Goal 25. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1499.0
   * Goal 26. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1501.0
   * Goal 27. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 0
   * Goal 28. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 1
   * Goal 29. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> -1
   * Goal 30. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 3
   * Goal 31. Weak Mutation 99: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V:148 - InsertUnaryOp Negation
   * Goal 32. Weak Mutation 100: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V:148 - InsertUnaryOp Negation of importe
   * Goal 33. Weak Mutation 102: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V:148 - ReplaceArithmeticOperator - -> %
   * Goal 34. Weak Mutation 104: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V:148 - ReplaceArithmeticOperator - -> /
   * Goal 35. Weak Mutation 364: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.saldarDeudaConBanca()V:398 - InsertUnaryOp Negation
   * Goal 36. Weak Mutation 365: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.saldarDeudaConBanca()V:398 - InsertUnaryOp Negation
   * Goal 37. Weak Mutation 367: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.saldarDeudaConBanca()V:398 - ReplaceComparisonOperator >= -> ==
   * Goal 38. Weak Mutation 369: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.saldarDeudaConBanca()V:400 - InsertUnaryOp Negation
   * Goal 39. Weak Mutation 370: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.saldarDeudaConBanca()V:401 - InsertUnaryOp Negation
   */

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Jugador jugador0 = new Jugador("!A/|=~$uST|aK1m");
      // Undeclared exception!
      try { 
        jugador0.saldarDeudaConBanca();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador", e);
      }
  }

  //Test case number: 41
  /*
   * 28 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.tieneDeudaCon(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z: I4 Branch 42 IFNULL L359 - true
   * Goal 3. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:<init>(Ljava/lang/String;)V
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.tieneDeudaCon(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z: I4 Branch 42 IFNULL L359 - true in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:tieneDeudaCon(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z
   * Goal 5. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.tieneDeudaCon(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z:False
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 48
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 49
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 50
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 51
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 52
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 53
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 54
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.tieneDeudaCon(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z: Line 359
   * Goal 14. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 15. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.tieneDeudaCon(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z
   * Goal 16. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 17. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.tieneDeudaCon(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z
   * Goal 18. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 0.0
   * Goal 19. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1.0
   * Goal 20. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> -1.0
   * Goal 21. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1499.0
   * Goal 22. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1501.0
   * Goal 23. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 0
   * Goal 24. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 1
   * Goal 25. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> -1
   * Goal 26. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 3
   * Goal 27. Weak Mutation 348: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.tieneDeudaCon(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z:359 - ReplaceComparisonOperator = null -> != null
   * Goal 28. Weak Mutation 352: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.tieneDeudaCon(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;)Z:359 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Jugador jugador0 = new Jugador("");
      boolean boolean0 = jugador0.tieneDeudaCon(jugador0);
      assertEquals(1500.0, jugador0.getCapital(), 0.01);
      assertFalse(boolean0);
  }

  //Test case number: 42
  /*
   * 40 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.incrementarCapital(D)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.hipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: I5 Branch 40 IF_ACMPEQ L346 - true
   * Goal 4. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.hipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: I16 Branch 41 IFEQ L348 - false
   * Goal 5. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:<init>(Ljava/lang/String;)V
   * Goal 6. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.hipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: I5 Branch 40 IF_ACMPEQ L346 - true in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:hipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V
   * Goal 7. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.hipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: I16 Branch 41 IFEQ L348 - false in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:hipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V
   * Goal 8. hipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V_org.evosuite.runtime.mock.java.lang.MockException_DECLARED
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 48
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 49
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 50
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 51
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 52
   * Goal 14. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 53
   * Goal 15. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 54
   * Goal 16. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.hipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: Line 346
   * Goal 17. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.hipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: Line 348
   * Goal 18. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.hipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: Line 349
   * Goal 19. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.incrementarCapital(D)V: Line 254
   * Goal 20. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.incrementarCapital(D)V: Line 255
   * Goal 21. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 22. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.hipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V
   * Goal 23. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 24. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 0.0
   * Goal 25. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1.0
   * Goal 26. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> -1.0
   * Goal 27. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1499.0
   * Goal 28. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1501.0
   * Goal 29. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 0
   * Goal 30. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 1
   * Goal 31. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> -1
   * Goal 32. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 3
   * Goal 33. Weak Mutation 213: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.incrementarCapital(D)V:254 - InsertUnaryOp Negation
   * Goal 34. Weak Mutation 214: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.incrementarCapital(D)V:254 - InsertUnaryOp Negation of importe
   * Goal 35. Weak Mutation 215: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.incrementarCapital(D)V:254 - ReplaceArithmeticOperator + -> %
   * Goal 36. Weak Mutation 216: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.incrementarCapital(D)V:254 - ReplaceArithmeticOperator + -> -
   * Goal 37. Weak Mutation 217: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.incrementarCapital(D)V:254 - ReplaceArithmeticOperator + -> *
   * Goal 38. Weak Mutation 218: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.incrementarCapital(D)V:254 - ReplaceArithmeticOperator + -> /
   * Goal 39. Weak Mutation 346: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.hipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V:346 - ReplaceComparisonOperator == -> !=
   * Goal 40. Weak Mutation 347: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.hipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V:348 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Jugador jugador0 = new Jugador("^6:|QF4}9Y8D$.JQU");
      Estacion estacion0 = new Estacion("Passeig de Gracia", 121.5181474771236, 822);
      estacion0.propietario = jugador0;
      estacion0.hipotecar();
      try { 
        jugador0.hipoteca(estacion0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador", e);
      }
  }

  //Test case number: 43
  /*
   * 97 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.incrementarCapital(D)V: root-Branch
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 4. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getCapital()D: root-Branch
   * Goal 5. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addPosesion(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: root-Branch
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.hipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: I5 Branch 40 IF_ACMPEQ L346 - true
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.hipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: I16 Branch 41 IFEQ L348 - true
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.levantarHipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: I4 Branch 57 IFNE L462 - true
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.levantarHipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: I16 Branch 58 IF_ACMPEQ L464 - true
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.levantarHipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: I38 Branch 59 IFGE L467 - true
   * Goal 11. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addPosesion(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:addPosesion(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V
   * Goal 12. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:<init>(Ljava/lang/String;)V
   * Goal 13. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.hipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: I5 Branch 40 IF_ACMPEQ L346 - true in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:hipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V
   * Goal 14. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.hipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: I16 Branch 41 IFEQ L348 - true in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:hipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V
   * Goal 15. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.levantarHipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: I4 Branch 57 IFNE L462 - true in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:levantarHipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V
   * Goal 16. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.levantarHipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: I16 Branch 58 IF_ACMPEQ L464 - true in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:levantarHipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V
   * Goal 17. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.levantarHipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: I38 Branch 59 IFGE L467 - true in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:levantarHipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V
   * Goal 18. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 48
   * Goal 19. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 49
   * Goal 20. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 50
   * Goal 21. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 51
   * Goal 22. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 52
   * Goal 23. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 53
   * Goal 24. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 54
   * Goal 25. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addPosesion(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: Line 222
   * Goal 26. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addPosesion(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: Line 223
   * Goal 27. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addPosesion(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: Line 224
   * Goal 28. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V: Line 148
   * Goal 29. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V: Line 149
   * Goal 30. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getCapital()D: Line 140
   * Goal 31. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.hipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: Line 346
   * Goal 32. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.hipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: Line 348
   * Goal 33. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.hipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: Line 350
   * Goal 34. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.hipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: Line 351
   * Goal 35. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.incrementarCapital(D)V: Line 254
   * Goal 36. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.incrementarCapital(D)V: Line 255
   * Goal 37. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.levantarHipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: Line 462
   * Goal 38. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.levantarHipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: Line 464
   * Goal 39. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.levantarHipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: Line 466
   * Goal 40. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.levantarHipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: Line 467
   * Goal 41. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.levantarHipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: Line 469
   * Goal 42. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.levantarHipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: Line 470
   * Goal 43. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.levantarHipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: Line 471
   * Goal 44. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 45. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addPosesion(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V
   * Goal 46. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.hipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V
   * Goal 47. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.levantarHipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V
   * Goal 48. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 49. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addPosesion(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V
   * Goal 50. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.hipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V
   * Goal 51. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.levantarHipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V
   * Goal 52. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 0.0
   * Goal 53. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1.0
   * Goal 54. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> -1.0
   * Goal 55. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1499.0
   * Goal 56. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1501.0
   * Goal 57. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 0
   * Goal 58. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 1
   * Goal 59. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> -1
   * Goal 60. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 3
   * Goal 61. Weak Mutation 98: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getCapital()D:140 - InsertUnaryOp Negation
   * Goal 62. Weak Mutation 99: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V:148 - InsertUnaryOp Negation
   * Goal 63. Weak Mutation 100: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V:148 - InsertUnaryOp Negation of importe
   * Goal 64. Weak Mutation 101: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V:148 - ReplaceArithmeticOperator - -> +
   * Goal 65. Weak Mutation 102: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V:148 - ReplaceArithmeticOperator - -> %
   * Goal 66. Weak Mutation 103: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V:148 - ReplaceArithmeticOperator - -> *
   * Goal 67. Weak Mutation 104: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V:148 - ReplaceArithmeticOperator - -> /
   * Goal 68. Weak Mutation 213: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.incrementarCapital(D)V:254 - InsertUnaryOp Negation
   * Goal 69. Weak Mutation 214: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.incrementarCapital(D)V:254 - InsertUnaryOp Negation of importe
   * Goal 70. Weak Mutation 215: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.incrementarCapital(D)V:254 - ReplaceArithmeticOperator + -> %
   * Goal 71. Weak Mutation 216: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.incrementarCapital(D)V:254 - ReplaceArithmeticOperator + -> -
   * Goal 72. Weak Mutation 217: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.incrementarCapital(D)V:254 - ReplaceArithmeticOperator + -> *
   * Goal 73. Weak Mutation 218: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.incrementarCapital(D)V:254 - ReplaceArithmeticOperator + -> /
   * Goal 74. Weak Mutation 346: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.hipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V:346 - ReplaceComparisonOperator == -> !=
   * Goal 75. Weak Mutation 347: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.hipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V:348 - ReplaceComparisonOperator == -> !=
   * Goal 76. Weak Mutation 453: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.levantarHipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V:462 - ReplaceComparisonOperator != -> ==
   * Goal 77. Weak Mutation 454: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.levantarHipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V:464 - ReplaceComparisonOperator == -> !=
   * Goal 78. Weak Mutation 455: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.levantarHipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V:466 - ReplaceConstant - 1.1 -> 0.0
   * Goal 79. Weak Mutation 456: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.levantarHipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V:466 - ReplaceConstant - 1.1 -> 1.0
   * Goal 80. Weak Mutation 457: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.levantarHipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V:466 - ReplaceConstant - 1.1 -> -1.0
   * Goal 81. Weak Mutation 458: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.levantarHipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V:466 - ReplaceConstant - 1.1 -> 0.10000000000000009
   * Goal 82. Weak Mutation 459: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.levantarHipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V:466 - ReplaceConstant - 1.1 -> 2.1
   * Goal 83. Weak Mutation 460: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.levantarHipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V:466 - ReplaceArithmeticOperator * -> +
   * Goal 84. Weak Mutation 461: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.levantarHipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V:466 - ReplaceArithmeticOperator * -> %
   * Goal 85. Weak Mutation 462: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.levantarHipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V:466 - ReplaceArithmeticOperator * -> -
   * Goal 86. Weak Mutation 463: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.levantarHipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V:466 - ReplaceArithmeticOperator * -> /
   * Goal 87. Weak Mutation 464: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.levantarHipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V:466 - ReplaceConstant - 2.0 -> 0.0
   * Goal 88. Weak Mutation 465: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.levantarHipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V:466 - ReplaceConstant - 2.0 -> 1.0
   * Goal 89. Weak Mutation 466: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.levantarHipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V:466 - ReplaceConstant - 2.0 -> -1.0
   * Goal 90. Weak Mutation 467: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.levantarHipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V:466 - ReplaceConstant - 2.0 -> 3.0
   * Goal 91. Weak Mutation 468: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.levantarHipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V:466 - ReplaceArithmeticOperator / -> +
   * Goal 92. Weak Mutation 469: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.levantarHipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V:466 - ReplaceArithmeticOperator / -> %
   * Goal 93. Weak Mutation 470: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.levantarHipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V:466 - ReplaceArithmeticOperator / -> -
   * Goal 94. Weak Mutation 471: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.levantarHipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V:466 - ReplaceArithmeticOperator / -> *
   * Goal 95. Weak Mutation 472: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.levantarHipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V:467 - InsertUnaryOp Negation of importe
   * Goal 96. Weak Mutation 474: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.levantarHipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V:467 - ReplaceComparisonOperator >= -> ==
   * Goal 97. Weak Mutation 476: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.levantarHipoteca(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V:469 - InsertUnaryOp Negation of importe
   */

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Jugador jugador0 = new Jugador("");
      Color color0 = Color.green;
      Barrio barrio0 = new Barrio(color0);
      Calle calle0 = new Calle("\n", 110.0, barrio0, (-2596), (double) (-2596), 2248.3171, 20.0, (double) (-2596), 20.0, 20.0, (double) (-2596));
      jugador0.addPosesion(calle0);
      jugador0.hipoteca(calle0);
      jugador0.levantarHipoteca(calle0);
      assertEquals(1494.5, jugador0.getCapital(), 0.01);
  }

  //Test case number: 44
  /*
   * 42 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z: I14 Branch 37 IF_ICMPGE L330 - true
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z: I46 Branch 39 IFLT L335 - true
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:<init>(Ljava/lang/String;)V
   * Goal 5. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z: I14 Branch 37 IF_ICMPGE L330 - true in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:puedeHipotecarHasta(D)Z
   * Goal 6. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z: I46 Branch 39 IFLT L335 - true in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:puedeHipotecarHasta(D)Z
   * Goal 7. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:False
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 48
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 49
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 50
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 51
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 52
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 53
   * Goal 14. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 54
   * Goal 15. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z: Line 329
   * Goal 16. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z: Line 330
   * Goal 17. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z: Line 335
   * Goal 18. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 19. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z
   * Goal 20. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 21. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z
   * Goal 22. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 0.0
   * Goal 23. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1.0
   * Goal 24. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> -1.0
   * Goal 25. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1499.0
   * Goal 26. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1501.0
   * Goal 27. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 0
   * Goal 28. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 1
   * Goal 29. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> -1
   * Goal 30. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 3
   * Goal 31. Weak Mutation 311: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:329 - InsertUnaryOp Negation
   * Goal 32. Weak Mutation 312: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:330 - ReplaceConstant - 0 -> 1
   * Goal 33. Weak Mutation 313: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:330 - InsertUnaryOp Negation of i
   * Goal 34. Weak Mutation 314: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:330 - InsertUnaryOp IINC 1 i
   * Goal 35. Weak Mutation 315: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:330 - InsertUnaryOp IINC -1 i
   * Goal 36. Weak Mutation 317: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:330 - ReplaceComparisonOperator >= -> >
   * Goal 37. Weak Mutation 337: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:335 - ReplaceVariable r -> cantidad
   * Goal 38. Weak Mutation 338: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:335 - InsertUnaryOp Negation of r
   * Goal 39. Weak Mutation 339: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:335 - ReplaceVariable cantidad -> r
   * Goal 40. Weak Mutation 340: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:335 - InsertUnaryOp Negation of cantidad
   * Goal 41. Weak Mutation 341: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:335 - ReplaceComparisonOperator < -> -2
   * Goal 42. Weak Mutation 345: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:335 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Jugador jugador0 = new Jugador("Salida");
      boolean boolean0 = jugador0.puedeHipotecarHasta(3394);
      assertEquals(1500.0, jugador0.getCapital(), 0.01);
      assertFalse(boolean0);
  }

  //Test case number: 45
  /*
   * 60 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addPosesion(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: root-Branch
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z: I14 Branch 37 IF_ICMPGE L330 - true
   * Goal 4. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z: I14 Branch 37 IF_ICMPGE L330 - false
   * Goal 5. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z: I27 Branch 38 IFNE L332 - true
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z: I46 Branch 39 IFLT L335 - false
   * Goal 7. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addPosesion(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:addPosesion(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V
   * Goal 8. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:<init>(Ljava/lang/String;)V
   * Goal 9. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z: I14 Branch 37 IF_ICMPGE L330 - false in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:puedeHipotecarHasta(D)Z
   * Goal 10. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z: I14 Branch 37 IF_ICMPGE L330 - true in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:puedeHipotecarHasta(D)Z
   * Goal 11. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z: I27 Branch 38 IFNE L332 - true in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:puedeHipotecarHasta(D)Z
   * Goal 12. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z: I46 Branch 39 IFLT L335 - false in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:puedeHipotecarHasta(D)Z
   * Goal 13. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:True
   * Goal 14. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 48
   * Goal 15. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 49
   * Goal 16. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 50
   * Goal 17. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 51
   * Goal 18. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 52
   * Goal 19. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 53
   * Goal 20. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 54
   * Goal 21. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addPosesion(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: Line 222
   * Goal 22. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addPosesion(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: Line 223
   * Goal 23. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addPosesion(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: Line 224
   * Goal 24. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z: Line 329
   * Goal 25. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z: Line 330
   * Goal 26. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z: Line 331
   * Goal 27. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z: Line 332
   * Goal 28. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z: Line 335
   * Goal 29. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 30. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addPosesion(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V
   * Goal 31. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z
   * Goal 32. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 33. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addPosesion(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V
   * Goal 34. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z
   * Goal 35. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 0.0
   * Goal 36. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1.0
   * Goal 37. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> -1.0
   * Goal 38. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1499.0
   * Goal 39. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1501.0
   * Goal 40. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 0
   * Goal 41. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 1
   * Goal 42. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> -1
   * Goal 43. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 3
   * Goal 44. Weak Mutation 311: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:329 - InsertUnaryOp Negation
   * Goal 45. Weak Mutation 312: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:330 - ReplaceConstant - 0 -> 1
   * Goal 46. Weak Mutation 313: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:330 - InsertUnaryOp Negation of i
   * Goal 47. Weak Mutation 314: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:330 - InsertUnaryOp IINC 1 i
   * Goal 48. Weak Mutation 315: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:330 - InsertUnaryOp IINC -1 i
   * Goal 49. Weak Mutation 316: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:330 - ReplaceComparisonOperator >= -> -1
   * Goal 50. Weak Mutation 317: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:330 - ReplaceComparisonOperator >= -> >
   * Goal 51. Weak Mutation 319: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:331 - InsertUnaryOp Negation of i
   * Goal 52. Weak Mutation 320: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:331 - InsertUnaryOp IINC 1 i
   * Goal 53. Weak Mutation 321: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:331 - InsertUnaryOp IINC -1 i
   * Goal 54. Weak Mutation 322: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:332 - ReplaceComparisonOperator != -> ==
   * Goal 55. Weak Mutation 337: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:335 - ReplaceVariable r -> cantidad
   * Goal 56. Weak Mutation 338: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:335 - InsertUnaryOp Negation of r
   * Goal 57. Weak Mutation 339: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:335 - ReplaceVariable cantidad -> r
   * Goal 58. Weak Mutation 340: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:335 - InsertUnaryOp Negation of cantidad
   * Goal 59. Weak Mutation 342: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:335 - ReplaceComparisonOperator < -> !=
   * Goal 60. Weak Mutation 344: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:335 - ReplaceConstant - 1 -> 0
   */

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Jugador jugador0 = new Jugador("");
      Color color0 = Color.green;
      Barrio barrio0 = new Barrio(color0);
      Calle calle0 = new Calle("\n", 110.0, barrio0, (-2596), 0.0, 2248.3171, 20.0, (double) (-2596), 20.0, 20.0, (double) (-2596));
      calle0.estaHipotecada = true;
      jugador0.addPosesion(calle0);
      boolean boolean0 = jugador0.puedeHipotecarHasta((-2596));
      assertTrue(boolean0);
      assertEquals(1500.0, jugador0.getCapital(), 0.01);
  }

  //Test case number: 46
  /*
   * 75 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addPosesion(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: root-Branch
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z: I14 Branch 37 IF_ICMPGE L330 - true
   * Goal 4. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z: I14 Branch 37 IF_ICMPGE L330 - false
   * Goal 5. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z: I27 Branch 38 IFNE L332 - false
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z: I46 Branch 39 IFLT L335 - false
   * Goal 7. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addPosesion(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:addPosesion(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V
   * Goal 8. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:<init>(Ljava/lang/String;)V
   * Goal 9. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z: I14 Branch 37 IF_ICMPGE L330 - false in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:puedeHipotecarHasta(D)Z
   * Goal 10. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z: I14 Branch 37 IF_ICMPGE L330 - true in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:puedeHipotecarHasta(D)Z
   * Goal 11. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z: I27 Branch 38 IFNE L332 - false in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:puedeHipotecarHasta(D)Z
   * Goal 12. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z: I46 Branch 39 IFLT L335 - false in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:puedeHipotecarHasta(D)Z
   * Goal 13. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:True
   * Goal 14. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 48
   * Goal 15. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 49
   * Goal 16. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 50
   * Goal 17. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 51
   * Goal 18. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 52
   * Goal 19. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 53
   * Goal 20. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 54
   * Goal 21. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addPosesion(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: Line 222
   * Goal 22. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addPosesion(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: Line 223
   * Goal 23. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addPosesion(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V: Line 224
   * Goal 24. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z: Line 329
   * Goal 25. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z: Line 330
   * Goal 26. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z: Line 331
   * Goal 27. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z: Line 332
   * Goal 28. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z: Line 333
   * Goal 29. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z: Line 335
   * Goal 30. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 31. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addPosesion(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V
   * Goal 32. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z
   * Goal 33. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 34. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addPosesion(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/CasillaConPrecio;)V
   * Goal 35. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z
   * Goal 36. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 0.0
   * Goal 37. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1.0
   * Goal 38. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> -1.0
   * Goal 39. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1499.0
   * Goal 40. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1501.0
   * Goal 41. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 0
   * Goal 42. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 1
   * Goal 43. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> -1
   * Goal 44. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 3
   * Goal 45. Weak Mutation 311: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:329 - InsertUnaryOp Negation
   * Goal 46. Weak Mutation 312: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:330 - ReplaceConstant - 0 -> 1
   * Goal 47. Weak Mutation 313: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:330 - InsertUnaryOp Negation of i
   * Goal 48. Weak Mutation 314: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:330 - InsertUnaryOp IINC 1 i
   * Goal 49. Weak Mutation 315: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:330 - InsertUnaryOp IINC -1 i
   * Goal 50. Weak Mutation 316: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:330 - ReplaceComparisonOperator >= -> -1
   * Goal 51. Weak Mutation 317: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:330 - ReplaceComparisonOperator >= -> >
   * Goal 52. Weak Mutation 319: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:331 - InsertUnaryOp Negation of i
   * Goal 53. Weak Mutation 320: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:331 - InsertUnaryOp IINC 1 i
   * Goal 54. Weak Mutation 321: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:331 - InsertUnaryOp IINC -1 i
   * Goal 55. Weak Mutation 322: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:332 - ReplaceComparisonOperator != -> ==
   * Goal 56. Weak Mutation 323: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:333 - ReplaceVariable r -> cantidad
   * Goal 57. Weak Mutation 324: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:333 - InsertUnaryOp Negation of r
   * Goal 58. Weak Mutation 325: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:333 - ReplaceConstant - 2.0 -> 0.0
   * Goal 59. Weak Mutation 326: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:333 - ReplaceConstant - 2.0 -> 1.0
   * Goal 60. Weak Mutation 327: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:333 - ReplaceConstant - 2.0 -> -1.0
   * Goal 61. Weak Mutation 328: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:333 - ReplaceConstant - 2.0 -> 3.0
   * Goal 62. Weak Mutation 329: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:333 - ReplaceArithmeticOperator / -> +
   * Goal 63. Weak Mutation 330: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:333 - ReplaceArithmeticOperator / -> %
   * Goal 64. Weak Mutation 331: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:333 - ReplaceArithmeticOperator / -> -
   * Goal 65. Weak Mutation 332: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:333 - ReplaceArithmeticOperator / -> *
   * Goal 66. Weak Mutation 333: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:333 - ReplaceArithmeticOperator + -> %
   * Goal 67. Weak Mutation 334: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:333 - ReplaceArithmeticOperator + -> -
   * Goal 68. Weak Mutation 335: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:333 - ReplaceArithmeticOperator + -> *
   * Goal 69. Weak Mutation 336: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:333 - ReplaceArithmeticOperator + -> /
   * Goal 70. Weak Mutation 337: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:335 - ReplaceVariable r -> cantidad
   * Goal 71. Weak Mutation 338: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:335 - InsertUnaryOp Negation of r
   * Goal 72. Weak Mutation 339: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:335 - ReplaceVariable cantidad -> r
   * Goal 73. Weak Mutation 340: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:335 - InsertUnaryOp Negation of cantidad
   * Goal 74. Weak Mutation 342: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:335 - ReplaceComparisonOperator < -> !=
   * Goal 75. Weak Mutation 344: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.puedeHipotecarHasta(D)Z:335 - ReplaceConstant - 1 -> 0
   */

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Jugador jugador0 = new Jugador("");
      Color color0 = Color.green;
      Barrio barrio0 = new Barrio(color0);
      Calle calle0 = new Calle("\n", 110.0, barrio0, (-2596), 0.0, 2248.3171, 20.0, (double) (-2596), 20.0, 20.0, (double) (-2596));
      jugador0.addPosesion(calle0);
      boolean boolean0 = jugador0.puedeHipotecarHasta((-2596));
      assertTrue(boolean0);
      assertEquals(1500.0, jugador0.getCapital(), 0.01);
  }

  //Test case number: 47
  /*
   * 39 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.devolverTarjetaDeSalirDeLaCarcel()V: I9 Branch 31 IF_ICMPGE L294 - true
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.devolverTarjetaDeSalirDeLaCarcel()V: I53 Branch 33 IF_ICMPGE L302 - true
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:<init>(Ljava/lang/String;)V
   * Goal 5. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.devolverTarjetaDeSalirDeLaCarcel()V: I9 Branch 31 IF_ICMPGE L294 - true in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:devolverTarjetaDeSalirDeLaCarcel()V
   * Goal 6. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.devolverTarjetaDeSalirDeLaCarcel()V: I53 Branch 33 IF_ICMPGE L302 - true in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:devolverTarjetaDeSalirDeLaCarcel()V
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 48
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 49
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 50
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 51
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 52
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 53
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 54
   * Goal 14. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.devolverTarjetaDeSalirDeLaCarcel()V: Line 294
   * Goal 15. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.devolverTarjetaDeSalirDeLaCarcel()V: Line 302
   * Goal 16. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.devolverTarjetaDeSalirDeLaCarcel()V: Line 310
   * Goal 17. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 18. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.devolverTarjetaDeSalirDeLaCarcel()V
   * Goal 19. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 20. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.devolverTarjetaDeSalirDeLaCarcel()V
   * Goal 21. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 0.0
   * Goal 22. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1.0
   * Goal 23. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> -1.0
   * Goal 24. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1499.0
   * Goal 25. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1501.0
   * Goal 26. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 0
   * Goal 27. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 1
   * Goal 28. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> -1
   * Goal 29. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 3
   * Goal 30. Weak Mutation 259: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.devolverTarjetaDeSalirDeLaCarcel()V:294 - ReplaceConstant - 0 -> 1
   * Goal 31. Weak Mutation 260: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.devolverTarjetaDeSalirDeLaCarcel()V:294 - InsertUnaryOp Negation of i
   * Goal 32. Weak Mutation 261: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.devolverTarjetaDeSalirDeLaCarcel()V:294 - InsertUnaryOp IINC 1 i
   * Goal 33. Weak Mutation 262: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.devolverTarjetaDeSalirDeLaCarcel()V:294 - InsertUnaryOp IINC -1 i
   * Goal 34. Weak Mutation 264: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.devolverTarjetaDeSalirDeLaCarcel()V:294 - ReplaceComparisonOperator >= -> >
   * Goal 35. Weak Mutation 274: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.devolverTarjetaDeSalirDeLaCarcel()V:302 - ReplaceConstant - 0 -> 1
   * Goal 36. Weak Mutation 275: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.devolverTarjetaDeSalirDeLaCarcel()V:302 - InsertUnaryOp Negation of i
   * Goal 37. Weak Mutation 276: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.devolverTarjetaDeSalirDeLaCarcel()V:302 - InsertUnaryOp IINC 1 i
   * Goal 38. Weak Mutation 277: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.devolverTarjetaDeSalirDeLaCarcel()V:302 - InsertUnaryOp IINC -1 i
   * Goal 39. Weak Mutation 279: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.devolverTarjetaDeSalirDeLaCarcel()V:302 - ReplaceComparisonOperator >= -> >
   */

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Jugador jugador0 = new Jugador("!A/|=~$uST|aK1m");
      jugador0.devolverTarjetaDeSalirDeLaCarcel();
      assertEquals(1500.0, jugador0.getCapital(), 0.01);
  }

  //Test case number: 48
  /*
   * 42 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addTarjeta(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/tarjetas/Tarjeta;I)V: I4 Branch 29 IF_ICMPNE L282 - true
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addTarjeta(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/tarjetas/Tarjeta;I)V: I17 Branch 30 IF_ICMPNE L284 - true
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:<init>(Ljava/lang/String;)V
   * Goal 5. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addTarjeta(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/tarjetas/Tarjeta;I)V: I4 Branch 29 IF_ICMPNE L282 - true in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:addTarjeta(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/tarjetas/Tarjeta;I)V
   * Goal 6. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addTarjeta(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/tarjetas/Tarjeta;I)V: I17 Branch 30 IF_ICMPNE L284 - true in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:addTarjeta(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/tarjetas/Tarjeta;I)V
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 48
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 49
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 50
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 51
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 52
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 53
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 54
   * Goal 14. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addTarjeta(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/tarjetas/Tarjeta;I)V: Line 282
   * Goal 15. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addTarjeta(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/tarjetas/Tarjeta;I)V: Line 284
   * Goal 16. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addTarjeta(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/tarjetas/Tarjeta;I)V: Line 286
   * Goal 17. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 18. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addTarjeta(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/tarjetas/Tarjeta;I)V
   * Goal 19. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 20. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addTarjeta(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/tarjetas/Tarjeta;I)V
   * Goal 21. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 0.0
   * Goal 22. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1.0
   * Goal 23. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> -1.0
   * Goal 24. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1499.0
   * Goal 25. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1501.0
   * Goal 26. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 0
   * Goal 27. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 1
   * Goal 28. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> -1
   * Goal 29. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 3
   * Goal 30. Weak Mutation 244: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addTarjeta(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/tarjetas/Tarjeta;I)V:282 - InsertUnaryOp Negation of tipoDeTarjeta
   * Goal 31. Weak Mutation 245: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addTarjeta(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/tarjetas/Tarjeta;I)V:282 - InsertUnaryOp IINC 1 tipoDeTarjeta
   * Goal 32. Weak Mutation 246: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addTarjeta(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/tarjetas/Tarjeta;I)V:282 - InsertUnaryOp IINC -1 tipoDeTarjeta
   * Goal 33. Weak Mutation 247: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addTarjeta(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/tarjetas/Tarjeta;I)V:282 - ReplaceConstant - 1 -> 0
   * Goal 34. Weak Mutation 248: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addTarjeta(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/tarjetas/Tarjeta;I)V:282 - ReplaceComparisonOperator != -> ==
   * Goal 35. Weak Mutation 249: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addTarjeta(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/tarjetas/Tarjeta;I)V:284 - InsertUnaryOp Negation of tipoDeTarjeta
   * Goal 36. Weak Mutation 250: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addTarjeta(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/tarjetas/Tarjeta;I)V:284 - InsertUnaryOp IINC 1 tipoDeTarjeta
   * Goal 37. Weak Mutation 251: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addTarjeta(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/tarjetas/Tarjeta;I)V:284 - InsertUnaryOp IINC -1 tipoDeTarjeta
   * Goal 38. Weak Mutation 252: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addTarjeta(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/tarjetas/Tarjeta;I)V:284 - ReplaceConstant - 2 -> 0
   * Goal 39. Weak Mutation 253: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addTarjeta(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/tarjetas/Tarjeta;I)V:284 - ReplaceConstant - 2 -> 1
   * Goal 40. Weak Mutation 254: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addTarjeta(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/tarjetas/Tarjeta;I)V:284 - ReplaceConstant - 2 -> -1
   * Goal 41. Weak Mutation 255: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addTarjeta(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/tarjetas/Tarjeta;I)V:284 - ReplaceConstant - 2 -> 3
   * Goal 42. Weak Mutation 258: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.addTarjeta(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/tarjetas/Tarjeta;I)V:284 - ReplaceComparisonOperator != -> >
   */

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Jugador jugador0 = new Jugador("");
      jugador0.addTarjeta((Tarjeta) null, (-14));
      assertEquals(1500.0, jugador0.getCapital(), 0.01);
  }

  //Test case number: 49
  /*
   * 41 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.tieneTarjetaDeSalirDeLaCarcel()Z: I9 Branch 25 IF_ICMPGE L263 - true
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.tieneTarjetaDeSalirDeLaCarcel()Z: I40 Branch 27 IF_ICMPGE L268 - true
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:<init>(Ljava/lang/String;)V
   * Goal 5. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.tieneTarjetaDeSalirDeLaCarcel()Z: I9 Branch 25 IF_ICMPGE L263 - true in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:tieneTarjetaDeSalirDeLaCarcel()Z
   * Goal 6. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.tieneTarjetaDeSalirDeLaCarcel()Z: I40 Branch 27 IF_ICMPGE L268 - true in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:tieneTarjetaDeSalirDeLaCarcel()Z
   * Goal 7. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.tieneTarjetaDeSalirDeLaCarcel()Z:False
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 48
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 49
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 50
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 51
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 52
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 53
   * Goal 14. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 54
   * Goal 15. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.tieneTarjetaDeSalirDeLaCarcel()Z: Line 263
   * Goal 16. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.tieneTarjetaDeSalirDeLaCarcel()Z: Line 268
   * Goal 17. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.tieneTarjetaDeSalirDeLaCarcel()Z: Line 273
   * Goal 18. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 19. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.tieneTarjetaDeSalirDeLaCarcel()Z
   * Goal 20. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 21. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.tieneTarjetaDeSalirDeLaCarcel()Z
   * Goal 22. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 0.0
   * Goal 23. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1.0
   * Goal 24. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> -1.0
   * Goal 25. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1499.0
   * Goal 26. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1501.0
   * Goal 27. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 0
   * Goal 28. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 1
   * Goal 29. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> -1
   * Goal 30. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 3
   * Goal 31. Weak Mutation 219: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.tieneTarjetaDeSalirDeLaCarcel()Z:263 - ReplaceConstant - 0 -> 1
   * Goal 32. Weak Mutation 220: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.tieneTarjetaDeSalirDeLaCarcel()Z:263 - InsertUnaryOp Negation of i
   * Goal 33. Weak Mutation 221: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.tieneTarjetaDeSalirDeLaCarcel()Z:263 - InsertUnaryOp IINC 1 i
   * Goal 34. Weak Mutation 222: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.tieneTarjetaDeSalirDeLaCarcel()Z:263 - InsertUnaryOp IINC -1 i
   * Goal 35. Weak Mutation 224: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.tieneTarjetaDeSalirDeLaCarcel()Z:263 - ReplaceComparisonOperator >= -> >
   * Goal 36. Weak Mutation 231: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.tieneTarjetaDeSalirDeLaCarcel()Z:268 - ReplaceConstant - 0 -> 1
   * Goal 37. Weak Mutation 232: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.tieneTarjetaDeSalirDeLaCarcel()Z:268 - InsertUnaryOp Negation of i
   * Goal 38. Weak Mutation 233: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.tieneTarjetaDeSalirDeLaCarcel()Z:268 - InsertUnaryOp IINC 1 i
   * Goal 39. Weak Mutation 234: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.tieneTarjetaDeSalirDeLaCarcel()Z:268 - InsertUnaryOp IINC -1 i
   * Goal 40. Weak Mutation 236: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.tieneTarjetaDeSalirDeLaCarcel()Z:268 - ReplaceComparisonOperator >= -> >
   * Goal 41. Weak Mutation 243: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.tieneTarjetaDeSalirDeLaCarcel()Z:273 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Jugador jugador0 = new Jugador("");
      boolean boolean0 = jugador0.tieneTarjetaDeSalirDeLaCarcel();
      assertEquals(1500.0, jugador0.getCapital(), 0.01);
      assertFalse(boolean0);
  }

  //Test case number: 50
  /*
   * 31 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getCapital()D: root-Branch
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.pagarA(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: I6 Branch 24 IFGE L243 - false
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:<init>(Ljava/lang/String;)V
   * Goal 5. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.pagarA(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: I6 Branch 24 IFGE L243 - false in context: 
   * Goal 6. pagarA(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V_org.evosuite.runtime.mock.java.lang.MockException_DECLARED
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 48
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 49
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 50
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 51
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 52
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 53
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 54
   * Goal 14. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getCapital()D: Line 140
   * Goal 15. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.pagarA(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: Line 243
   * Goal 16. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.pagarA(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: Line 244
   * Goal 17. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 18. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.pagarA(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V
   * Goal 19. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 20. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 0.0
   * Goal 21. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1.0
   * Goal 22. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> -1.0
   * Goal 23. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1499.0
   * Goal 24. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1501.0
   * Goal 25. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 0
   * Goal 26. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 1
   * Goal 27. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> -1
   * Goal 28. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 3
   * Goal 29. Weak Mutation 98: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getCapital()D:140 - InsertUnaryOp Negation
   * Goal 30. Weak Mutation 206: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.pagarA(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V:243 - InsertUnaryOp Negation of importe
   * Goal 31. Weak Mutation 207: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.pagarA(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V:243 - ReplaceComparisonOperator >= -> -1
   */

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Jugador jugador0 = new Jugador("}>xs[`Mcl");
      try { 
        jugador0.pagarA((Jugador) null, 2522.725);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador", e);
      }
  }

  //Test case number: 51
  /*
   * 28 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.comprar()V: I4 Branch 22 IFNE L209 - false
   * Goal 3. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:<init>(Ljava/lang/String;)V
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.comprar()V: I4 Branch 22 IFNE L209 - false in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:comprar()V
   * Goal 5. comprar()V_org.evosuite.runtime.mock.java.lang.MockException_DECLARED
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 48
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 49
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 50
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 51
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 52
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 53
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 54
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.comprar()V: Line 209
   * Goal 14. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.comprar()V: Line 210
   * Goal 15. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 16. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.comprar()V
   * Goal 17. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 18. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 0.0
   * Goal 19. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1.0
   * Goal 20. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> -1.0
   * Goal 21. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1499.0
   * Goal 22. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1501.0
   * Goal 23. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 0
   * Goal 24. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 1
   * Goal 25. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> -1
   * Goal 26. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 3
   * Goal 27. Weak Mutation 194: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.comprar()V:209 - InsertUnaryOp Negation
   * Goal 28. Weak Mutation 195: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.comprar()V:209 - ReplaceComparisonOperator != -> ==
   */

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Jugador jugador0 = new Jugador(")");
      try { 
        jugador0.comprar();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador", e);
      }
  }

  //Test case number: 52
  /*
   * 39 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getCasilla()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Casilla;: root-Branch
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.avanzar()V: I14 Branch 14 IF_ICMPNE L158 - true
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:<init>(Ljava/lang/String;)V
   * Goal 5. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.avanzar()V: I14 Branch 14 IF_ICMPNE L158 - true in context: 
   * Goal 6. avanzar()V_java.lang.NullPointerException_IMPLICIT
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 48
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 49
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 50
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 51
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 52
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 53
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 54
   * Goal 14. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.avanzar()V: Line 156
   * Goal 15. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.avanzar()V: Line 157
   * Goal 16. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.avanzar()V: Line 158
   * Goal 17. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.avanzar()V: Line 165
   * Goal 18. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getCasilla()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Casilla;: Line 132
   * Goal 19. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 20. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.avanzar()V
   * Goal 21. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 22. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 0.0
   * Goal 23. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1.0
   * Goal 24. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> -1.0
   * Goal 25. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1499.0
   * Goal 26. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1501.0
   * Goal 27. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 0
   * Goal 28. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 1
   * Goal 29. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> -1
   * Goal 30. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 3
   * Goal 31. Weak Mutation 105: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.avanzar()V:158 - InsertUnaryOp Negation
   * Goal 32. Weak Mutation 106: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.avanzar()V:158 - InsertUnaryOp +1
   * Goal 33. Weak Mutation 107: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.avanzar()V:158 - InsertUnaryOp -1
   * Goal 34. Weak Mutation 108: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.avanzar()V:158 - ReplaceConstant - 3 -> 0
   * Goal 35. Weak Mutation 109: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.avanzar()V:158 - ReplaceConstant - 3 -> 1
   * Goal 36. Weak Mutation 110: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.avanzar()V:158 - ReplaceConstant - 3 -> -1
   * Goal 37. Weak Mutation 111: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.avanzar()V:158 - ReplaceConstant - 3 -> 2
   * Goal 38. Weak Mutation 112: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.avanzar()V:158 - ReplaceConstant - 3 -> 4
   * Goal 39. Weak Mutation 115: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.avanzar()V:158 - ReplaceComparisonOperator != -> >
   */

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Jugador jugador0 = new Jugador((String) null);
      // Undeclared exception!
      try { 
        jugador0.avanzar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador", e);
      }
  }

  //Test case number: 53
  /*
   * 78 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: root-Branch
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.tirarDados()V: I11 Branch 1 IFEQ L58 - true
   * Goal 4. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: I11 Branch 8 IFEQ L108 - true
   * Goal 5. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: I29 Branch 10 IFNONNULL L111 - false
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: I34 Branch 11 IFLE L111 - true
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: I59 Branch 12 IF_ICMPNE L116 - true
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: I79 Branch 13 IFEQ L119 - true
   * Goal 9. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:<init>(Ljava/lang/String;)V
   * Goal 10. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: root-Branch in context: 
   * Goal 11. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.tirarDados()V: I11 Branch 1 IFEQ L58 - true in context: 
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 48
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 49
   * Goal 14. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 50
   * Goal 15. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 51
   * Goal 16. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 52
   * Goal 17. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 53
   * Goal 18. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 54
   * Goal 19. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: Line 107
   * Goal 20. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: Line 108
   * Goal 21. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: Line 111
   * Goal 22. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: Line 114
   * Goal 23. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: Line 115
   * Goal 24. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: Line 116
   * Goal 25. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: Line 118
   * Goal 26. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: Line 119
   * Goal 27. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: Line 121
   * Goal 28. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: Line 152
   * Goal 29. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: Line 153
   * Goal 30. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.tirarDados()V: Line 57
   * Goal 31. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.tirarDados()V: Line 58
   * Goal 32. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.tirarDados()V: Line 60
   * Goal 33. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.tirarDados()V: Line 61
   * Goal 34. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 35. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V
   * Goal 36. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.tirarDados()V
   * Goal 37. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 38. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V
   * Goal 39. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.tirarDados()V
   * Goal 40. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 0.0
   * Goal 41. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1.0
   * Goal 42. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> -1.0
   * Goal 43. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1499.0
   * Goal 44. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1501.0
   * Goal 45. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 0
   * Goal 46. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 1
   * Goal 47. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> -1
   * Goal 48. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 3
   * Goal 49. Weak Mutation 9: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.tirarDados()V:58 - ReplaceComparisonOperator == -> !=
   * Goal 50. Weak Mutation 14: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.tirarDados()V:60 - ReplaceConstant - 0 -> 1
   * Goal 51. Weak Mutation 15: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.tirarDados()V:60 - ReplaceConstant - 1 -> 0
   * Goal 52. Weak Mutation 53: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:108 - ReplaceComparisonOperator == -> !=
   * Goal 53. Weak Mutation 60: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:111 - ReplaceComparisonOperator != null -> = null
   * Goal 54. Weak Mutation 61: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:111 - InsertUnaryOp Negation
   * Goal 55. Weak Mutation 62: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:111 - ReplaceConstant - 0.0 -> 1.0
   * Goal 56. Weak Mutation 63: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:111 - ReplaceConstant - 0.0 -> -1.0
   * Goal 57. Weak Mutation 66: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:111 - ReplaceComparisonOperator <= -> <
   * Goal 58. Weak Mutation 67: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:114 - ReplaceConstant - 0 -> 1
   * Goal 59. Weak Mutation 68: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:114 - ReplaceVariable dado1 -> dado2
   * Goal 60. Weak Mutation 69: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:114 - ReplaceVariable dado1 -> jugadorConElTurno
   * Goal 61. Weak Mutation 70: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:114 - InsertUnaryOp Negation of dado1
   * Goal 62. Weak Mutation 71: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:115 - ReplaceConstant - 1 -> 0
   * Goal 63. Weak Mutation 72: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:115 - ReplaceVariable dado2 -> dado1
   * Goal 64. Weak Mutation 73: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:115 - ReplaceVariable dado2 -> jugadorConElTurno
   * Goal 65. Weak Mutation 74: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:115 - InsertUnaryOp Negation of dado2
   * Goal 66. Weak Mutation 75: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:116 - ReplaceVariable dado1 -> dado2
   * Goal 67. Weak Mutation 76: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:116 - ReplaceVariable dado1 -> jugadorConElTurno
   * Goal 68. Weak Mutation 77: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:116 - InsertUnaryOp Negation of dado1
   * Goal 69. Weak Mutation 78: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:116 - InsertUnaryOp IINC 1 dado1
   * Goal 70. Weak Mutation 79: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:116 - InsertUnaryOp IINC -1 dado1
   * Goal 71. Weak Mutation 80: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:116 - ReplaceVariable dado2 -> dado1
   * Goal 72. Weak Mutation 81: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:116 - ReplaceVariable dado2 -> jugadorConElTurno
   * Goal 73. Weak Mutation 82: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:116 - InsertUnaryOp Negation of dado2
   * Goal 74. Weak Mutation 83: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:116 - InsertUnaryOp IINC 1 dado2
   * Goal 75. Weak Mutation 84: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:116 - InsertUnaryOp IINC -1 dado2
   * Goal 76. Weak Mutation 87: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:116 - ReplaceComparisonOperator != -> >
   * Goal 77. Weak Mutation 96: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:118 - ReplaceConstant - 0 -> 1
   * Goal 78. Weak Mutation 97: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:119 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Jugador jugador0 = new Jugador("w.m");
      Tablero tablero0 = new Tablero();
      jugador0.setTablero(tablero0);
      Dados.debug = true;
      jugador0.tirarDados();
      assertEquals(5, jugador0.getSumaDados());
  }

  //Test case number: 54
  /*
   * 56 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDeudaConBanca(D)V: root-Branch
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: root-Branch
   * Goal 4. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.tirarDados()V: I11 Branch 1 IFEQ L58 - true
   * Goal 5. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: I11 Branch 8 IFEQ L108 - true
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: I29 Branch 10 IFNONNULL L111 - false
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: I34 Branch 11 IFLE L111 - false
   * Goal 8. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:<init>(Ljava/lang/String;)V
   * Goal 9. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: root-Branch in context: 
   * Goal 10. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDeudaConBanca(D)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:setDeudaConBanca(D)V
   * Goal 11. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.tirarDados()V: I11 Branch 1 IFEQ L58 - true in context: 
   * Goal 12. tirarDados()V_org.evosuite.runtime.mock.java.lang.MockException_DECLARED
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 48
   * Goal 14. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 49
   * Goal 15. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 50
   * Goal 16. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 51
   * Goal 17. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 52
   * Goal 18. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 53
   * Goal 19. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 54
   * Goal 20. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: Line 107
   * Goal 21. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: Line 108
   * Goal 22. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: Line 111
   * Goal 23. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V: Line 112
   * Goal 24. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDeudaConBanca(D)V: Line 382
   * Goal 25. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDeudaConBanca(D)V: Line 383
   * Goal 26. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: Line 152
   * Goal 27. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: Line 153
   * Goal 28. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.tirarDados()V: Line 57
   * Goal 29. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.tirarDados()V: Line 58
   * Goal 30. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.tirarDados()V: Line 60
   * Goal 31. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 32. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDeudaConBanca(D)V
   * Goal 33. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V
   * Goal 34. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.tirarDados()V
   * Goal 35. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 36. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDeudaConBanca(D)V
   * Goal 37. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V
   * Goal 38. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 0.0
   * Goal 39. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1.0
   * Goal 40. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> -1.0
   * Goal 41. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1499.0
   * Goal 42. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1501.0
   * Goal 43. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 0
   * Goal 44. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 1
   * Goal 45. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> -1
   * Goal 46. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 3
   * Goal 47. Weak Mutation 9: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.tirarDados()V:58 - ReplaceComparisonOperator == -> !=
   * Goal 48. Weak Mutation 14: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.tirarDados()V:60 - ReplaceConstant - 0 -> 1
   * Goal 49. Weak Mutation 15: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.tirarDados()V:60 - ReplaceConstant - 1 -> 0
   * Goal 50. Weak Mutation 53: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:108 - ReplaceComparisonOperator == -> !=
   * Goal 51. Weak Mutation 60: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:111 - ReplaceComparisonOperator != null -> = null
   * Goal 52. Weak Mutation 61: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:111 - InsertUnaryOp Negation
   * Goal 53. Weak Mutation 62: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:111 - ReplaceConstant - 0.0 -> 1.0
   * Goal 54. Weak Mutation 63: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:111 - ReplaceConstant - 0.0 -> -1.0
   * Goal 55. Weak Mutation 64: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDados(II)V:111 - ReplaceComparisonOperator <= -> -1
   * Goal 56. Weak Mutation 362: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setDeudaConBanca(D)V:382 - InsertUnaryOp Negation of importe
   */

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Jugador jugador0 = new Jugador("ow.tm");
      Tablero tablero0 = new Tablero();
      jugador0.setDeudaConBanca(828);
      jugador0.setTablero(tablero0);
      try { 
        jugador0.tirarDados();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador", e);
      }
  }

  //Test case number: 55
  /*
   * 67 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setCasilla(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Casilla;)V: root-Branch
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.toString()Ljava/lang/String;: I57 Branch 3 IF_ICMPGE L79 - true
   * Goal 4. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.toString()Ljava/lang/String;: I95 Branch 4 IFLE L83 - true
   * Goal 5. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.toString()Ljava/lang/String;: I116 Branch 5 IF_ICMPGE L85 - true
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.toString()Ljava/lang/String;: I146 Branch 6 IFLE L89 - true
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.toString()Ljava/lang/String;: I167 Branch 7 IF_ICMPGE L91 - true
   * Goal 8. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setCasilla(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Casilla;)V: root-Branch in context: 
   * Goal 9. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:<init>(Ljava/lang/String;)V
   * Goal 10. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.toString()Ljava/lang/String;: I57 Branch 3 IF_ICMPGE L79 - true in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:toString()Ljava/lang/String;
   * Goal 11. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.toString()Ljava/lang/String;: I95 Branch 4 IFLE L83 - true in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:toString()Ljava/lang/String;
   * Goal 12. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.toString()Ljava/lang/String;: I116 Branch 5 IF_ICMPGE L85 - true in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:toString()Ljava/lang/String;
   * Goal 13. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.toString()Ljava/lang/String;: I146 Branch 6 IFLE L89 - true in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:toString()Ljava/lang/String;
   * Goal 14. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.toString()Ljava/lang/String;: I167 Branch 7 IF_ICMPGE L91 - true in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:toString()Ljava/lang/String;
   * Goal 15. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.toString()Ljava/lang/String;:NonEmptyString
   * Goal 16. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 48
   * Goal 17. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 49
   * Goal 18. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 50
   * Goal 19. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 51
   * Goal 20. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 52
   * Goal 21. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 53
   * Goal 22. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 54
   * Goal 23. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setCasilla(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Casilla;)V: Line 124
   * Goal 24. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setCasilla(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Casilla;)V: Line 125
   * Goal 25. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.toString()Ljava/lang/String;: Line 77
   * Goal 26. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.toString()Ljava/lang/String;: Line 78
   * Goal 27. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.toString()Ljava/lang/String;: Line 79
   * Goal 28. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.toString()Ljava/lang/String;: Line 83
   * Goal 29. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.toString()Ljava/lang/String;: Line 85
   * Goal 30. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.toString()Ljava/lang/String;: Line 89
   * Goal 31. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.toString()Ljava/lang/String;: Line 91
   * Goal 32. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.toString()Ljava/lang/String;: Line 95
   * Goal 33. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 34. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setCasilla(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Casilla;)V
   * Goal 35. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.toString()Ljava/lang/String;
   * Goal 36. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 37. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setCasilla(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Casilla;)V
   * Goal 38. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.toString()Ljava/lang/String;
   * Goal 39. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 0.0
   * Goal 40. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1.0
   * Goal 41. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> -1.0
   * Goal 42. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1499.0
   * Goal 43. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1501.0
   * Goal 44. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 0
   * Goal 45. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 1
   * Goal 46. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> -1
   * Goal 47. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 3
   * Goal 48. Weak Mutation 22: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.toString()Ljava/lang/String;:77 - ReplaceConstant -  (en  -> 
   * Goal 49. Weak Mutation 23: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.toString()Ljava/lang/String;:77 - ReplaceConstant - )
	Capital:  -> 
   * Goal 50. Weak Mutation 24: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.toString()Ljava/lang/String;:77 - InsertUnaryOp Negation
   * Goal 51. Weak Mutation 25: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.toString()Ljava/lang/String;:77 - ReplaceConstant - 
	Dados: ( -> 
   * Goal 52. Weak Mutation 26: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.toString()Ljava/lang/String;:77 - ReplaceConstant - 0 -> 1
   * Goal 53. Weak Mutation 27: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.toString()Ljava/lang/String;:77 - ReplaceConstant - ,  -> 
   * Goal 54. Weak Mutation 28: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.toString()Ljava/lang/String;:77 - ReplaceConstant - 1 -> 0
   * Goal 55. Weak Mutation 29: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.toString()Ljava/lang/String;:77 - ReplaceConstant - ) -> 
   * Goal 56. Weak Mutation 30: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.toString()Ljava/lang/String;:78 - ReplaceConstant - 
 -> 
   * Goal 57. Weak Mutation 31: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.toString()Ljava/lang/String;:79 - ReplaceConstant - 0 -> 1
   * Goal 58. Weak Mutation 32: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.toString()Ljava/lang/String;:79 - InsertUnaryOp Negation of i
   * Goal 59. Weak Mutation 33: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.toString()Ljava/lang/String;:79 - InsertUnaryOp IINC 1 i
   * Goal 60. Weak Mutation 34: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.toString()Ljava/lang/String;:79 - InsertUnaryOp IINC -1 i
   * Goal 61. Weak Mutation 36: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.toString()Ljava/lang/String;:79 - ReplaceComparisonOperator >= -> >
   * Goal 62. Weak Mutation 44: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.toString()Ljava/lang/String;:83 - ReplaceComparisonOperator <= -> <
   * Goal 63. Weak Mutation 46: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.toString()Ljava/lang/String;:85 - ReplaceConstant - 0 -> 1
   * Goal 64. Weak Mutation 47: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.toString()Ljava/lang/String;:85 - InsertUnaryOp Negation of i
   * Goal 65. Weak Mutation 48: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.toString()Ljava/lang/String;:85 - InsertUnaryOp IINC 1 i
   * Goal 66. Weak Mutation 49: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.toString()Ljava/lang/String;:85 - InsertUnaryOp IINC -1 i
   * Goal 67. Weak Mutation 51: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.toString()Ljava/lang/String;:85 - ReplaceComparisonOperator >= -> >
   */

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Jugador jugador0 = new Jugador("!A/|=~$uST|aK1m");
      Parking parking0 = new Parking(822);
      jugador0.setCasilla(parking0);
      String string0 = jugador0.toString();
      assertEquals("!A/|=~$uST|aK1m (en 822)\n\tCapital: 1500.0\n\tDados: (0, 0)\n", string0);
  }

  //Test case number: 56
  /*
   * 28 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getPosesiones()Ljava/util/Vector;: root-Branch
   * Goal 3. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:<init>(Ljava/lang/String;)V
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getPosesiones()Ljava/util/Vector;: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:getPosesiones()Ljava/util/Vector;
   * Goal 5. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getPosesiones()Ljava/util/Vector;:NonNull:java.util.Vector:capacity()I:Positive
   * Goal 6. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getPosesiones()Ljava/util/Vector;:NonNull:java.util.Vector:isEmpty()Z:True
   * Goal 7. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getPosesiones()Ljava/util/Vector;:NonNull:java.util.Vector:size()I:Zero
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 48
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 49
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 50
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 51
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 52
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 53
   * Goal 14. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 54
   * Goal 15. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getPosesiones()Ljava/util/Vector;: Line 231
   * Goal 16. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 17. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getPosesiones()Ljava/util/Vector;
   * Goal 18. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 19. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getPosesiones()Ljava/util/Vector;
   * Goal 20. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 0.0
   * Goal 21. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1.0
   * Goal 22. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> -1.0
   * Goal 23. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1499.0
   * Goal 24. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1501.0
   * Goal 25. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 0
   * Goal 26. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 1
   * Goal 27. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> -1
   * Goal 28. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 3
   */

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Jugador jugador0 = new Jugador("ow.tm");
      jugador0.getPosesiones();
      assertEquals(1500.0, jugador0.getCapital(), 0.01);
  }

  //Test case number: 57
  /*
   * 37 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: root-Branch
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V: I7 Branch 50 IFNE L435 - false
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:<init>(Ljava/lang/String;)V
   * Goal 5. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: root-Branch in context: 
   * Goal 6. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V: I7 Branch 50 IFNE L435 - false in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:edificar(II)V
   * Goal 7. edificar(II)V_org.evosuite.runtime.mock.java.lang.MockException_DECLARED
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 48
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 49
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 50
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 51
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 52
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 53
   * Goal 14. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 54
   * Goal 15. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V: Line 435
   * Goal 16. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V: Line 436
   * Goal 17. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: Line 152
   * Goal 18. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: Line 153
   * Goal 19. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 20. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V
   * Goal 21. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V
   * Goal 22. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 23. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V
   * Goal 24. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 0.0
   * Goal 25. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1.0
   * Goal 26. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> -1.0
   * Goal 27. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1499.0
   * Goal 28. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1501.0
   * Goal 29. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 0
   * Goal 30. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 1
   * Goal 31. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> -1
   * Goal 32. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 3
   * Goal 33. Weak Mutation 401: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V:435 - ReplaceVariable posCasilla -> numeroDeCasas
   * Goal 34. Weak Mutation 402: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V:435 - InsertUnaryOp Negation of posCasilla
   * Goal 35. Weak Mutation 403: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V:435 - InsertUnaryOp IINC 1 posCasilla
   * Goal 36. Weak Mutation 404: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V:435 - InsertUnaryOp IINC -1 posCasilla
   * Goal 37. Weak Mutation 405: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.edificar(II)V:435 - ReplaceComparisonOperator != -> ==
   */

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Jugador jugador0 = new Jugador("\n\tTarjetas de suerte:\n");
      Tablero tablero0 = new Tablero();
      jugador0.setTablero(tablero0);
      try { 
        jugador0.edificar(0, (-984));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador", e);
      }
  }

  //Test case number: 58
  /*
   * 25 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getCasilla()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Casilla;: root-Branch
   * Goal 3. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:<init>(Ljava/lang/String;)V
   * Goal 4. pagaPorSalirDeLaCarcel()V_java.lang.NullPointerException_IMPLICIT
   * Goal 5. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 48
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 49
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 50
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 51
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 52
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 53
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 54
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getCasilla()Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Casilla;: Line 132
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.pagaPorSalirDeLaCarcel()V: Line 415
   * Goal 14. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 15. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.pagaPorSalirDeLaCarcel()V
   * Goal 16. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 17. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 0.0
   * Goal 18. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1.0
   * Goal 19. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> -1.0
   * Goal 20. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1499.0
   * Goal 21. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1501.0
   * Goal 22. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 0
   * Goal 23. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 1
   * Goal 24. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> -1
   * Goal 25. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 3
   */

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Jugador jugador0 = new Jugador("");
      // Undeclared exception!
      try { 
        jugador0.pagaPorSalirDeLaCarcel();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador", e);
      }
  }

  //Test case number: 59
  /*
   * 30 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getSumaDados()I: root-Branch
   * Goal 3. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:<init>(Ljava/lang/String;)V
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getSumaDados()I: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:getSumaDados()I
   * Goal 5. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getSumaDados()I:Zero
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 48
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 49
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 50
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 51
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 52
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 53
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 54
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getSumaDados()I: Line 68
   * Goal 14. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 15. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getSumaDados()I
   * Goal 16. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 17. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getSumaDados()I
   * Goal 18. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 0.0
   * Goal 19. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1.0
   * Goal 20. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> -1.0
   * Goal 21. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1499.0
   * Goal 22. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1501.0
   * Goal 23. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 0
   * Goal 24. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 1
   * Goal 25. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> -1
   * Goal 26. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 3
   * Goal 27. Weak Mutation 16: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getSumaDados()I:68 - ReplaceConstant - 0 -> 1
   * Goal 28. Weak Mutation 17: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getSumaDados()I:68 - ReplaceConstant - 1 -> 0
   * Goal 29. Weak Mutation 18: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getSumaDados()I:68 - ReplaceArithmeticOperator + -> %
   * Goal 30. Weak Mutation 21: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getSumaDados()I:68 - ReplaceArithmeticOperator + -> /
   */

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Jugador jugador0 = new Jugador("");
      jugador0.getSumaDados();
      assertEquals(1500.0, jugador0.getCapital(), 0.01);
  }

  //Test case number: 60
  /*
   * 29 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getTurnosSinJugar()I: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 3. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:<init>(Ljava/lang/String;)V
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getTurnosSinJugar()I: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:getTurnosSinJugar()I
   * Goal 5. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getTurnosSinJugar()I:Zero
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 48
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 49
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 50
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 51
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 52
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 53
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 54
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getTurnosSinJugar()I: Line 239
   * Goal 14. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 15. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getTurnosSinJugar()I
   * Goal 16. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 17. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getTurnosSinJugar()I
   * Goal 18. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 0.0
   * Goal 19. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1.0
   * Goal 20. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> -1.0
   * Goal 21. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1499.0
   * Goal 22. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1501.0
   * Goal 23. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 0
   * Goal 24. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 1
   * Goal 25. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> -1
   * Goal 26. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 3
   * Goal 27. Weak Mutation 203: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getTurnosSinJugar()I:239 - InsertUnaryOp Negation
   * Goal 28. Weak Mutation 204: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getTurnosSinJugar()I:239 - InsertUnaryOp +1
   * Goal 29. Weak Mutation 205: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getTurnosSinJugar()I:239 - InsertUnaryOp -1
   */

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Jugador jugador0 = new Jugador("7-N(2>djh$d)4,Su<hz");
      int int0 = jugador0.getTurnosSinJugar();
      assertEquals(1500.0, jugador0.getCapital(), 0.01);
      assertEquals(0, int0);
  }

  //Test case number: 61
  /*
   * 27 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getDeudaConBanca()D: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 3. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:<init>(Ljava/lang/String;)V
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getDeudaConBanca()D: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:getDeudaConBanca()D
   * Goal 5. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getDeudaConBanca()D:Zero
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 48
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 49
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 50
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 51
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 52
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 53
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 54
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getDeudaConBanca()D: Line 390
   * Goal 14. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 15. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getDeudaConBanca()D
   * Goal 16. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 17. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getDeudaConBanca()D
   * Goal 18. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 0.0
   * Goal 19. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1.0
   * Goal 20. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> -1.0
   * Goal 21. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1499.0
   * Goal 22. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1501.0
   * Goal 23. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 0
   * Goal 24. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 1
   * Goal 25. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> -1
   * Goal 26. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 3
   * Goal 27. Weak Mutation 363: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getDeudaConBanca()D:390 - InsertUnaryOp Negation
   */

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Jugador jugador0 = new Jugador("");
      jugador0.getDeudaConBanca();
      assertEquals(1500.0, jugador0.getCapital(), 0.01);
  }

  //Test case number: 62
  /*
   * 44 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getCapital()D: root-Branch
   * Goal 4. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.pagarA(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: I6 Branch 24 IFGE L243 - true
   * Goal 5. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador:<init>(Ljava/lang/String;)V
   * Goal 6. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.pagarA(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: I6 Branch 24 IFGE L243 - true in context: 
   * Goal 7. pagarA(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V_java.lang.NullPointerException_IMPLICIT
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 48
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 49
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 50
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 51
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 52
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 53
   * Goal 14. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V: Line 54
   * Goal 15. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V: Line 148
   * Goal 16. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V: Line 149
   * Goal 17. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getCapital()D: Line 140
   * Goal 18. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.pagarA(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: Line 243
   * Goal 19. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.pagarA(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: Line 245
   * Goal 20. edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.pagarA(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V: Line 246
   * Goal 21. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 22. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.pagarA(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V
   * Goal 23. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V
   * Goal 24. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 0.0
   * Goal 25. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1.0
   * Goal 26. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> -1.0
   * Goal 27. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1499.0
   * Goal 28. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:49 - ReplaceConstant - 1500.0 -> 1501.0
   * Goal 29. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 0
   * Goal 30. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 1
   * Goal 31. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> -1
   * Goal 32. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.<init>(Ljava/lang/String;)V:50 - ReplaceConstant - 2 -> 3
   * Goal 33. Weak Mutation 98: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.getCapital()D:140 - InsertUnaryOp Negation
   * Goal 34. Weak Mutation 99: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V:148 - InsertUnaryOp Negation
   * Goal 35. Weak Mutation 100: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V:148 - InsertUnaryOp Negation of importe
   * Goal 36. Weak Mutation 101: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V:148 - ReplaceArithmeticOperator - -> +
   * Goal 37. Weak Mutation 102: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V:148 - ReplaceArithmeticOperator - -> %
   * Goal 38. Weak Mutation 103: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V:148 - ReplaceArithmeticOperator - -> *
   * Goal 39. Weak Mutation 104: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.decrementarCapital(D)V:148 - ReplaceArithmeticOperator - -> /
   * Goal 40. Weak Mutation 206: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.pagarA(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V:243 - InsertUnaryOp Negation of importe
   * Goal 41. Weak Mutation 208: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.pagarA(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V:243 - ReplaceComparisonOperator >= -> ==
   * Goal 42. Weak Mutation 210: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.pagarA(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V:245 - InsertUnaryOp Negation of importe
   * Goal 43. Weak Mutation 211: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.pagarA(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V:246 - ReplaceVariable propietario -> this
   * Goal 44. Weak Mutation 212: edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador.pagarA(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;D)V:246 - InsertUnaryOp Negation of importe
   */

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Jugador jugador0 = new Jugador("\n\tTarjetas de Caja:\n");
      // Undeclared exception!
      try { 
        jugador0.pagarA((Jugador) null, 1.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador", e);
      }
  }
}
