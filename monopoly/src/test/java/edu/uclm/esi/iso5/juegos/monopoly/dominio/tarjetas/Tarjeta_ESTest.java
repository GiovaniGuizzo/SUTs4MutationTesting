/*
 * This file was automatically generated by EvoSuite
 * Wed Jun 01 19:43:53 GMT 2016
 */

package edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador;
import edu.uclm.esi.iso5.juegos.monopoly.dominio.Tablero;
import edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Cobrar;
import edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar;
import edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.QuedaLibreDeLaCarcel;
import edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.TVayaALaCarcel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class Tarjeta_ESTest extends Tarjeta_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 9 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.<init>(Z)V: root-Branch
   * Goal 2. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.toString()Ljava/lang/String;:NonEmptyString
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.<init>(Z)V: Line 21
   * Goal 4. edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.<init>(Z)V: Line 22
   * Goal 5. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.toString()Ljava/lang/String;
   * Goal 6. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.toString()Ljava/lang/String;
   * Goal 7. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.<init>(Z)V:21 - InsertUnaryOp Negation of paraElJugador
   * Goal 8. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.<init>(Z)V:21 - InsertUnaryOp IINC 1 paraElJugador
   * Goal 9. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.<init>(Z)V:21 - InsertUnaryOp IINC -1 paraElJugador
   */

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Pagar pagar0 = new Pagar((String) null, 0.0);
      pagar0.toString();
      assertFalse(pagar0.esParaElJugador());
  }

  //Test case number: 1
  /*
   * 9 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.<init>(Z)V: root-Branch
   * Goal 2. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I:Zero
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.<init>(Z)V: Line 21
   * Goal 4. edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.<init>(Z)V: Line 22
   * Goal 5. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I
   * Goal 6. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I
   * Goal 7. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.<init>(Z)V:21 - InsertUnaryOp Negation of paraElJugador
   * Goal 8. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.<init>(Z)V:21 - InsertUnaryOp IINC 1 paraElJugador
   * Goal 9. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.<init>(Z)V:21 - InsertUnaryOp IINC -1 paraElJugador
   */

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Cobrar cobrar0 = new Cobrar("Queda libre de la carcel.", 2646.588716019313);
      Jugador jugador0 = new Jugador("Queda libre de la carcel.");
      cobrar0.operaciones(jugador0, (-78));
      assertFalse(cobrar0.esParaElJugador());
  }

  //Test case number: 2
  /*
   * 10 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.<init>(Z)V: root-Branch
   * Goal 2. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I:Positive
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.<init>(Z)V: Line 21
   * Goal 4. edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.<init>(Z)V: Line 22
   * Goal 5. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I
   * Goal 6. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I
   * Goal 7. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.<init>(Z)V:21 - ReplaceVariable paraElJugador -> esParaElJugador
   * Goal 8. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.<init>(Z)V:21 - InsertUnaryOp Negation of paraElJugador
   * Goal 9. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.<init>(Z)V:21 - InsertUnaryOp IINC 1 paraElJugador
   * Goal 10. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.<init>(Z)V:21 - InsertUnaryOp IINC -1 paraElJugador
   */

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      QuedaLibreDeLaCarcel quedaLibreDeLaCarcel0 = new QuedaLibreDeLaCarcel();
      Jugador jugador0 = new Jugador("WRlY WzV8y");
      quedaLibreDeLaCarcel0.operaciones(jugador0, 0);
      assertTrue(quedaLibreDeLaCarcel0.esParaElJugador());
  }

  //Test case number: 3
  /*
   * 13 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.esParaElJugador()Z: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.<init>(Z)V: root-Branch
   * Goal 3. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.esParaElJugador()Z: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta:esParaElJugador()Z
   * Goal 4. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.esParaElJugador()Z:True
   * Goal 5. edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.<init>(Z)V: Line 21
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.<init>(Z)V: Line 22
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.esParaElJugador()Z: Line 30
   * Goal 8. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.esParaElJugador()Z
   * Goal 9. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.esParaElJugador()Z
   * Goal 10. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.<init>(Z)V:21 - InsertUnaryOp Negation of paraElJugador
   * Goal 11. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.<init>(Z)V:21 - InsertUnaryOp IINC 1 paraElJugador
   * Goal 12. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.<init>(Z)V:21 - InsertUnaryOp IINC -1 paraElJugador
   * Goal 13. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.esParaElJugador()Z:30 - InsertUnaryOp Negation
   */

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TVayaALaCarcel tVayaALaCarcel0 = new TVayaALaCarcel();
      assertFalse(tVayaALaCarcel0.esParaElJugador());
      
      tVayaALaCarcel0.esParaElJugador = true;
      boolean boolean0 = tVayaALaCarcel0.esParaElJugador();
      assertTrue(boolean0);
  }

  //Test case number: 4
  /*
   * 8 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.<init>(Z)V: root-Branch
   * Goal 2. operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I_java.lang.NullPointerException_IMPLICIT
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.<init>(Z)V: Line 21
   * Goal 4. edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.<init>(Z)V: Line 22
   * Goal 5. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I
   * Goal 6. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.<init>(Z)V:21 - InsertUnaryOp Negation of paraElJugador
   * Goal 7. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.<init>(Z)V:21 - InsertUnaryOp IINC 1 paraElJugador
   * Goal 8. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.<init>(Z)V:21 - InsertUnaryOp IINC -1 paraElJugador
   */

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Pagar pagar0 = new Pagar("", 0.0);
      Jugador jugador0 = new Jugador("");
      // Undeclared exception!
      try { 
        pagar0.operaciones(jugador0, 1510);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar", e);
      }
  }

  //Test case number: 5
  /*
   * 13 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.esParaElJugador()Z: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.<init>(Z)V: root-Branch
   * Goal 3. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.esParaElJugador()Z: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta:esParaElJugador()Z
   * Goal 4. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.esParaElJugador()Z:False
   * Goal 5. edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.<init>(Z)V: Line 21
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.<init>(Z)V: Line 22
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.esParaElJugador()Z: Line 30
   * Goal 8. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.esParaElJugador()Z
   * Goal 9. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.esParaElJugador()Z
   * Goal 10. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.<init>(Z)V:21 - InsertUnaryOp Negation of paraElJugador
   * Goal 11. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.<init>(Z)V:21 - InsertUnaryOp IINC 1 paraElJugador
   * Goal 12. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.<init>(Z)V:21 - InsertUnaryOp IINC -1 paraElJugador
   * Goal 13. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.esParaElJugador()Z:30 - InsertUnaryOp Negation
   */

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      TVayaALaCarcel tVayaALaCarcel0 = new TVayaALaCarcel();
      boolean boolean0 = tVayaALaCarcel0.esParaElJugador();
      assertFalse(boolean0);
  }

  //Test case number: 6
  /*
   * 13 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.<init>(Z)V: root-Branch
   * Goal 3. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta:setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V
   * Goal 4. edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.<init>(Z)V: Line 21
   * Goal 5. edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.<init>(Z)V: Line 22
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: Line 51
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V: Line 52
   * Goal 8. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V
   * Goal 9. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V
   * Goal 10. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.<init>(Z)V:21 - InsertUnaryOp Negation of paraElJugador
   * Goal 11. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.<init>(Z)V:21 - InsertUnaryOp IINC 1 paraElJugador
   * Goal 12. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.<init>(Z)V:21 - InsertUnaryOp IINC -1 paraElJugador
   * Goal 13. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Tarjeta.setTablero(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Tablero;)V:51 - ReplaceVariable tablero -> tablero
   */

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      TVayaALaCarcel tVayaALaCarcel0 = new TVayaALaCarcel();
      Tablero tablero0 = new Tablero();
      tVayaALaCarcel0.setTablero(tablero0);
      assertFalse(tVayaALaCarcel0.esParaElJugador());
  }
}
