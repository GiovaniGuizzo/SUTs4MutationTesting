/*
 * This file was automatically generated by EvoSuite
 * Wed Jun 01 19:41:35 GMT 2016
 */

package edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.uclm.esi.iso5.juegos.monopoly.dominio.Jugador;
import edu.uclm.esi.iso5.juegos.monopoly.dominio.Tablero;
import edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class Pagar_ESTest extends Pagar_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 26 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.<init>(Ljava/lang/String;D)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I: I7 Branch 1 IFLE L28 - false
   * Goal 3. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.<init>(Ljava/lang/String;D)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar:<init>(Ljava/lang/String;D)V
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I: I7 Branch 1 IFLE L28 - false in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar:operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I
   * Goal 5. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I:Positive
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.<init>(Ljava/lang/String;D)V: Line 23
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.<init>(Ljava/lang/String;D)V: Line 24
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.<init>(Ljava/lang/String;D)V: Line 25
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I: Line 28
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I: Line 29
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I: Line 30
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I: Line 31
   * Goal 13. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.<init>(Ljava/lang/String;D)V
   * Goal 14. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I
   * Goal 15. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.<init>(Ljava/lang/String;D)V
   * Goal 16. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I
   * Goal 17. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.<init>(Ljava/lang/String;D)V:24 - InsertUnaryOp Negation of importe
   * Goal 18. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I:28 - InsertUnaryOp Negation
   * Goal 19. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I:28 - ReplaceComparisonOperator <= -> -1
   * Goal 20. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I:29 - InsertUnaryOp Negation
   * Goal 21. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I:30 - InsertUnaryOp Negation
   * Goal 22. Weak Mutation 7: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I:31 - ReplaceConstant - 15 -> 0
   * Goal 23. Weak Mutation 8: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I:31 - ReplaceConstant - 15 -> 1
   * Goal 24. Weak Mutation 9: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I:31 - ReplaceConstant - 15 -> -1
   * Goal 25. Weak Mutation 10: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I:31 - ReplaceConstant - 15 -> 14
   * Goal 26. Weak Mutation 11: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I:31 - ReplaceConstant - 15 -> 16
   */

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Pagar pagar0 = new Pagar("edu.uclm.esi.iso5.juegos.monopoly.dominio.excepciones.DemasiadosJugadoresException", 180.0);
      Tablero tablero0 = new Tablero();
      pagar0.tablero = tablero0;
      Jugador jugador0 = new Jugador("edu.uclm.esi.iso5.juegos.monopoly.dominio.excepciones.DemasiadosJugadoresException");
      int int0 = pagar0.operaciones(jugador0, 0);
      assertEquals(1320.0, jugador0.getCapital(), 0.01);
      assertEquals(15, int0);
  }

  //Test case number: 1
  /*
   * 27 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.<init>(Ljava/lang/String;D)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I: I7 Branch 1 IFLE L28 - true
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I: I31 Branch 2 IFEQ L33 - true
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.<init>(Ljava/lang/String;D)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar:<init>(Ljava/lang/String;D)V
   * Goal 5. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I: I7 Branch 1 IFLE L28 - true in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar:operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I
   * Goal 6. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I: I31 Branch 2 IFEQ L33 - true in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar:operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I
   * Goal 7. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I:Positive
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.<init>(Ljava/lang/String;D)V: Line 23
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.<init>(Ljava/lang/String;D)V: Line 24
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.<init>(Ljava/lang/String;D)V: Line 25
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I: Line 28
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I: Line 33
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I: Line 37
   * Goal 14. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.<init>(Ljava/lang/String;D)V
   * Goal 15. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I
   * Goal 16. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.<init>(Ljava/lang/String;D)V
   * Goal 17. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I
   * Goal 18. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.<init>(Ljava/lang/String;D)V:24 - InsertUnaryOp Negation of importe
   * Goal 19. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I:28 - InsertUnaryOp Negation
   * Goal 20. Weak Mutation 3: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I:28 - ReplaceComparisonOperator <= -> ==
   * Goal 21. Weak Mutation 12: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I:33 - InsertUnaryOp Negation
   * Goal 22. Weak Mutation 13: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I:33 - ReplaceComparisonOperator == -> !=
   * Goal 23. Weak Mutation 20: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I:37 - ReplaceConstant - 14 -> 0
   * Goal 24. Weak Mutation 21: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I:37 - ReplaceConstant - 14 -> 1
   * Goal 25. Weak Mutation 22: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I:37 - ReplaceConstant - 14 -> -1
   * Goal 26. Weak Mutation 23: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I:37 - ReplaceConstant - 14 -> 13
   * Goal 27. Weak Mutation 24: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I:37 - ReplaceConstant - 14 -> 15
   */

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Pagar pagar0 = new Pagar("[fEBcQ", 3704.0);
      Jugador jugador0 = new Jugador("[fEBcQ");
      int int0 = pagar0.operaciones(jugador0, 2146475175);
      assertEquals(14, int0);
  }

  //Test case number: 2
  /*
   * 19 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.<init>(Ljava/lang/String;D)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I: I7 Branch 1 IFLE L28 - false
   * Goal 3. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.<init>(Ljava/lang/String;D)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar:<init>(Ljava/lang/String;D)V
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I: I7 Branch 1 IFLE L28 - false in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar:operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I
   * Goal 5. operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I_java.lang.NullPointerException_IMPLICIT
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.<init>(Ljava/lang/String;D)V: Line 23
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.<init>(Ljava/lang/String;D)V: Line 24
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.<init>(Ljava/lang/String;D)V: Line 25
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I: Line 28
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I: Line 29
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I: Line 30
   * Goal 12. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.<init>(Ljava/lang/String;D)V
   * Goal 13. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I
   * Goal 14. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.<init>(Ljava/lang/String;D)V
   * Goal 15. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.<init>(Ljava/lang/String;D)V:24 - InsertUnaryOp Negation of importe
   * Goal 16. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I:28 - InsertUnaryOp Negation
   * Goal 17. Weak Mutation 2: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I:28 - ReplaceComparisonOperator <= -> -1
   * Goal 18. Weak Mutation 5: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I:29 - InsertUnaryOp Negation
   * Goal 19. Weak Mutation 6: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I:30 - InsertUnaryOp Negation
   */

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Pagar pagar0 = new Pagar("edu.uclm.esi.iso5.juegos.monopoly.dominio.excepciones.DemasiadosJugadoresException", 180.0);
      Jugador jugador0 = new Jugador("edu.uclm.esi.iso5.juegos.monopoly.dominio.excepciones.DemasiadosJugadoresException");
      // Undeclared exception!
      try { 
        pagar0.operaciones(jugador0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar", e);
      }
  }

  //Test case number: 3
  /*
   * 29 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.<init>(Ljava/lang/String;D)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I: I7 Branch 1 IFLE L28 - true
   * Goal 3. edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I: I31 Branch 2 IFEQ L33 - false
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.<init>(Ljava/lang/String;D)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar:<init>(Ljava/lang/String;D)V
   * Goal 5. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I: I7 Branch 1 IFLE L28 - true in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar:operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I
   * Goal 6. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I: I31 Branch 2 IFEQ L33 - false in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar:operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I
   * Goal 7. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I:Positive
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.<init>(Ljava/lang/String;D)V: Line 23
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.<init>(Ljava/lang/String;D)V: Line 24
   * Goal 10. edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.<init>(Ljava/lang/String;D)V: Line 25
   * Goal 11. edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I: Line 28
   * Goal 12. edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I: Line 33
   * Goal 13. edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I: Line 34
   * Goal 14. edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I: Line 35
   * Goal 15. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.<init>(Ljava/lang/String;D)V
   * Goal 16. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I
   * Goal 17. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.<init>(Ljava/lang/String;D)V
   * Goal 18. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I
   * Goal 19. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.<init>(Ljava/lang/String;D)V:24 - InsertUnaryOp Negation of importe
   * Goal 20. Weak Mutation 1: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I:28 - InsertUnaryOp Negation
   * Goal 21. Weak Mutation 4: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I:28 - ReplaceComparisonOperator <= -> <
   * Goal 22. Weak Mutation 12: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I:33 - InsertUnaryOp Negation
   * Goal 23. Weak Mutation 13: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I:33 - ReplaceComparisonOperator == -> !=
   * Goal 24. Weak Mutation 14: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I:34 - InsertUnaryOp Negation
   * Goal 25. Weak Mutation 15: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I:35 - ReplaceConstant - 16 -> 0
   * Goal 26. Weak Mutation 16: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I:35 - ReplaceConstant - 16 -> 1
   * Goal 27. Weak Mutation 17: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I:35 - ReplaceConstant - 16 -> -1
   * Goal 28. Weak Mutation 18: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I:35 - ReplaceConstant - 16 -> 15
   * Goal 29. Weak Mutation 19: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.operaciones(Ledu/uclm/esi/iso5/juegos/monopoly/dominio/Jugador;I)I:35 - ReplaceConstant - 16 -> 17
   */

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Jugador jugador0 = new Jugador("");
      Pagar pagar0 = new Pagar("", 1500.0);
      int int0 = pagar0.operaciones(jugador0, 910);
      assertEquals(1500.0, jugador0.getDeudaConBanca(), 0.01);
      assertEquals(16, int0);
  }

  //Test case number: 4
  /*
   * 16 covered goals:
   * Goal 1. edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.<init>(Ljava/lang/String;D)V: root-Branch
   * Goal 2. edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.toString()Ljava/lang/String;: root-Branch
   * Goal 3. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.<init>(Ljava/lang/String;D)V: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar:<init>(Ljava/lang/String;D)V
   * Goal 4. Branch edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.toString()Ljava/lang/String;: root-Branch in context: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar:toString()Ljava/lang/String;
   * Goal 5. [Output]: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.toString()Ljava/lang/String;:NonEmptyString
   * Goal 6. edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.<init>(Ljava/lang/String;D)V: Line 23
   * Goal 7. edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.<init>(Ljava/lang/String;D)V: Line 24
   * Goal 8. edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.<init>(Ljava/lang/String;D)V: Line 25
   * Goal 9. edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.toString()Ljava/lang/String;: Line 42
   * Goal 10. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.<init>(Ljava/lang/String;D)V
   * Goal 11. [METHOD] edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.toString()Ljava/lang/String;
   * Goal 12. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.<init>(Ljava/lang/String;D)V
   * Goal 13. [METHODNOEX] edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.toString()Ljava/lang/String;
   * Goal 14. Weak Mutation 0: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.<init>(Ljava/lang/String;D)V:24 - InsertUnaryOp Negation of importe
   * Goal 15. Weak Mutation 25: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.toString()Ljava/lang/String;:42 - ReplaceConstant -  Pagar: -> 
   * Goal 16. Weak Mutation 26: edu.uclm.esi.iso5.juegos.monopoly.dominio.tarjetas.Pagar.toString()Ljava/lang/String;:42 - InsertUnaryOp Negation
   */

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Pagar pagar0 = new Pagar("edu.uclm.esi.iso5.juegos.monopoly.dominio.excepciones.DemasiadosJugadoresException", 180.0);
      String string0 = pagar0.toString();
      assertEquals("edu.uclm.esi.iso5.juegos.monopoly.dominio.excepciones.DemasiadosJugadoresException Pagar:180.0", string0);
  }
}
