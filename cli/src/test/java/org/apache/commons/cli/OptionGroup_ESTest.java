/*
 * This file was automatically generated by EvoSuite
 * Wed Jun 01 17:24:03 GMT 2016
 */

package org.apache.commons.cli;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import org.apache.commons.cli.Option;
import org.apache.commons.cli.OptionGroup;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class OptionGroup_ESTest extends OptionGroup_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 19 covered goals:
   * Goal 1. org.apache.commons.cli.OptionGroup.<init>()V: root-Branch
   * Goal 2. org.apache.commons.cli.OptionGroup.getSelected()Ljava/lang/String;: root-Branch
   * Goal 3. org.apache.commons.cli.OptionGroup.setSelected(Lorg/apache/commons/cli/Option;)V: I4 Branch 1 IFNULL L91 - true
   * Goal 4. Branch org.apache.commons.cli.OptionGroup.<init>()V: root-Branch in context: org.apache.commons.cli.OptionGroup:<init>()V
   * Goal 5. Branch org.apache.commons.cli.OptionGroup.getSelected()Ljava/lang/String;: root-Branch in context: org.apache.commons.cli.OptionGroup:getSelected()Ljava/lang/String;
   * Goal 6. Branch org.apache.commons.cli.OptionGroup.setSelected(Lorg/apache/commons/cli/Option;)V: I4 Branch 1 IFNULL L91 - true in context: org.apache.commons.cli.OptionGroup:setSelected(Lorg/apache/commons/cli/Option;)V
   * Goal 7. [Output]: org.apache.commons.cli.OptionGroup.getSelected()Ljava/lang/String;:NonEmptyString
   * Goal 8. org.apache.commons.cli.OptionGroup.<init>()V: Line 37
   * Goal 9. org.apache.commons.cli.OptionGroup.getSelected()Ljava/lang/String;: Line 106
   * Goal 10. org.apache.commons.cli.OptionGroup.setSelected(Lorg/apache/commons/cli/Option;)V: Line 91
   * Goal 11. org.apache.commons.cli.OptionGroup.setSelected(Lorg/apache/commons/cli/Option;)V: Line 93
   * Goal 12. org.apache.commons.cli.OptionGroup.setSelected(Lorg/apache/commons/cli/Option;)V: Line 99
   * Goal 13. [METHOD] org.apache.commons.cli.OptionGroup.<init>()V
   * Goal 14. [METHOD] org.apache.commons.cli.OptionGroup.getSelected()Ljava/lang/String;
   * Goal 15. [METHOD] org.apache.commons.cli.OptionGroup.setSelected(Lorg/apache/commons/cli/Option;)V
   * Goal 16. [METHODNOEX] org.apache.commons.cli.OptionGroup.<init>()V
   * Goal 17. [METHODNOEX] org.apache.commons.cli.OptionGroup.getSelected()Ljava/lang/String;
   * Goal 18. [METHODNOEX] org.apache.commons.cli.OptionGroup.setSelected(Lorg/apache/commons/cli/Option;)V
   * Goal 19. Weak Mutation 0: org.apache.commons.cli.OptionGroup.setSelected(Lorg/apache/commons/cli/Option;)V:91 - ReplaceComparisonOperator = null -> != null
   */

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option("kDGNJcnu", "kDGNJcnu");
      optionGroup0.setSelected(option0);
      String string0 = optionGroup0.getSelected();
      assertEquals("kDGNJcnu", string0);
  }

  //Test case number: 1
  /*
   * 21 covered goals:
   * Goal 1. org.apache.commons.cli.OptionGroup.<init>()V: root-Branch
   * Goal 2. org.apache.commons.cli.OptionGroup.setRequired(Z)V: root-Branch
   * Goal 3. org.apache.commons.cli.OptionGroup.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/OptionGroup;: root-Branch
   * Goal 4. Branch org.apache.commons.cli.OptionGroup.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/OptionGroup;: root-Branch in context: org.apache.commons.cli.OptionGroup:addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/OptionGroup;
   * Goal 5. Branch org.apache.commons.cli.OptionGroup.setRequired(Z)V: root-Branch in context: org.apache.commons.cli.OptionGroup:setRequired(Z)V
   * Goal 6. Branch org.apache.commons.cli.OptionGroup.<init>()V: root-Branch in context: org.apache.commons.cli.OptionGroup:<init>()V
   * Goal 7. [Output]: org.apache.commons.cli.OptionGroup.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/OptionGroup;:NonNull:org.apache.commons.cli.OptionGroup:isRequired()Z:True
   * Goal 8. org.apache.commons.cli.OptionGroup.<init>()V: Line 37
   * Goal 9. org.apache.commons.cli.OptionGroup.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/OptionGroup;: Line 55
   * Goal 10. org.apache.commons.cli.OptionGroup.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/OptionGroup;: Line 57
   * Goal 11. org.apache.commons.cli.OptionGroup.setRequired(Z)V: Line 114
   * Goal 12. org.apache.commons.cli.OptionGroup.setRequired(Z)V: Line 115
   * Goal 13. [METHOD] org.apache.commons.cli.OptionGroup.<init>()V
   * Goal 14. [METHOD] org.apache.commons.cli.OptionGroup.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/OptionGroup;
   * Goal 15. [METHOD] org.apache.commons.cli.OptionGroup.setRequired(Z)V
   * Goal 16. [METHODNOEX] org.apache.commons.cli.OptionGroup.<init>()V
   * Goal 17. [METHODNOEX] org.apache.commons.cli.OptionGroup.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/OptionGroup;
   * Goal 18. [METHODNOEX] org.apache.commons.cli.OptionGroup.setRequired(Z)V
   * Goal 19. Weak Mutation 4: org.apache.commons.cli.OptionGroup.setRequired(Z)V:114 - InsertUnaryOp Negation of required
   * Goal 20. Weak Mutation 5: org.apache.commons.cli.OptionGroup.setRequired(Z)V:114 - InsertUnaryOp IINC 1 required
   * Goal 21. Weak Mutation 6: org.apache.commons.cli.OptionGroup.setRequired(Z)V:114 - InsertUnaryOp IINC -1 required
   */

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option((String) null, true, "");
      optionGroup0.setRequired(true);
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      assertTrue(optionGroup1.isRequired());
  }

  //Test case number: 2
  /*
   * 12 covered goals:
   * Goal 1. org.apache.commons.cli.OptionGroup.<init>()V: root-Branch
   * Goal 2. org.apache.commons.cli.OptionGroup.setSelected(Lorg/apache/commons/cli/Option;)V: I4 Branch 1 IFNULL L91 - true
   * Goal 3. Branch org.apache.commons.cli.OptionGroup.<init>()V: root-Branch in context: org.apache.commons.cli.OptionGroup:<init>()V
   * Goal 4. Branch org.apache.commons.cli.OptionGroup.setSelected(Lorg/apache/commons/cli/Option;)V: I4 Branch 1 IFNULL L91 - true in context: org.apache.commons.cli.OptionGroup:setSelected(Lorg/apache/commons/cli/Option;)V
   * Goal 5. setSelected(Lorg/apache/commons/cli/Option;)V_java.lang.NullPointerException_IMPLICIT
   * Goal 6. org.apache.commons.cli.OptionGroup.<init>()V: Line 37
   * Goal 7. org.apache.commons.cli.OptionGroup.setSelected(Lorg/apache/commons/cli/Option;)V: Line 91
   * Goal 8. org.apache.commons.cli.OptionGroup.setSelected(Lorg/apache/commons/cli/Option;)V: Line 93
   * Goal 9. [METHOD] org.apache.commons.cli.OptionGroup.<init>()V
   * Goal 10. [METHOD] org.apache.commons.cli.OptionGroup.setSelected(Lorg/apache/commons/cli/Option;)V
   * Goal 11. [METHODNOEX] org.apache.commons.cli.OptionGroup.<init>()V
   * Goal 12. Weak Mutation 0: org.apache.commons.cli.OptionGroup.setSelected(Lorg/apache/commons/cli/Option;)V:91 - ReplaceComparisonOperator = null -> != null
   */

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OptionGroup optionGroup0 = new OptionGroup();
      // Undeclared exception!
      try { 
        optionGroup0.setSelected((Option) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.apache.commons.cli.OptionGroup", e);
      }
  }

  //Test case number: 3
  /*
   * 10 covered goals:
   * Goal 1. org.apache.commons.cli.OptionGroup.<init>()V: root-Branch
   * Goal 2. org.apache.commons.cli.OptionGroup.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/OptionGroup;: root-Branch
   * Goal 3. Branch org.apache.commons.cli.OptionGroup.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/OptionGroup;: root-Branch in context: org.apache.commons.cli.OptionGroup:addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/OptionGroup;
   * Goal 4. Branch org.apache.commons.cli.OptionGroup.<init>()V: root-Branch in context: org.apache.commons.cli.OptionGroup:<init>()V
   * Goal 5. addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/OptionGroup;_java.lang.NullPointerException_IMPLICIT
   * Goal 6. org.apache.commons.cli.OptionGroup.<init>()V: Line 37
   * Goal 7. org.apache.commons.cli.OptionGroup.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/OptionGroup;: Line 55
   * Goal 8. [METHOD] org.apache.commons.cli.OptionGroup.<init>()V
   * Goal 9. [METHOD] org.apache.commons.cli.OptionGroup.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/OptionGroup;
   * Goal 10. [METHODNOEX] org.apache.commons.cli.OptionGroup.<init>()V
   */

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OptionGroup optionGroup0 = new OptionGroup();
      // Undeclared exception!
      try { 
        optionGroup0.addOption((Option) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.apache.commons.cli.OptionGroup", e);
      }
  }

  //Test case number: 4
  /*
   * 11 covered goals:
   * Goal 1. org.apache.commons.cli.OptionGroup.getOptions()Ljava/util/Collection;: root-Branch
   * Goal 2. org.apache.commons.cli.OptionGroup.<init>()V: root-Branch
   * Goal 3. Branch org.apache.commons.cli.OptionGroup.<init>()V: root-Branch in context: org.apache.commons.cli.OptionGroup:<init>()V
   * Goal 4. Branch org.apache.commons.cli.OptionGroup.getOptions()Ljava/util/Collection;: root-Branch in context: org.apache.commons.cli.OptionGroup:getOptions()Ljava/util/Collection;
   * Goal 5. [Output]: org.apache.commons.cli.OptionGroup.getOptions()Ljava/util/Collection;:NonNull
   * Goal 6. org.apache.commons.cli.OptionGroup.<init>()V: Line 37
   * Goal 7. org.apache.commons.cli.OptionGroup.getOptions()Ljava/util/Collection;: Line 76
   * Goal 8. [METHOD] org.apache.commons.cli.OptionGroup.<init>()V
   * Goal 9. [METHOD] org.apache.commons.cli.OptionGroup.getOptions()Ljava/util/Collection;
   * Goal 10. [METHODNOEX] org.apache.commons.cli.OptionGroup.<init>()V
   * Goal 11. [METHODNOEX] org.apache.commons.cli.OptionGroup.getOptions()Ljava/util/Collection;
   */

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OptionGroup optionGroup0 = new OptionGroup();
      Collection collection0 = optionGroup0.getOptions();
      assertNotNull(collection0);
  }

  //Test case number: 5
  /*
   * 50 covered goals:
   * Goal 1. org.apache.commons.cli.OptionGroup.getOptions()Ljava/util/Collection;: root-Branch
   * Goal 2. org.apache.commons.cli.OptionGroup.<init>()V: root-Branch
   * Goal 3. org.apache.commons.cli.OptionGroup.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/OptionGroup;: root-Branch
   * Goal 4. org.apache.commons.cli.OptionGroup.toString()Ljava/lang/String;: I22 Branch 3 IFEQ L140 - true
   * Goal 5. org.apache.commons.cli.OptionGroup.toString()Ljava/lang/String;: I22 Branch 3 IFEQ L140 - false
   * Goal 6. org.apache.commons.cli.OptionGroup.toString()Ljava/lang/String;: I33 Branch 4 IFNULL L144 - false
   * Goal 7. org.apache.commons.cli.OptionGroup.toString()Ljava/lang/String;: I78 Branch 5 IFEQ L158 - true
   * Goal 8. org.apache.commons.cli.OptionGroup.toString()Ljava/lang/String;: I78 Branch 5 IFEQ L158 - false
   * Goal 9. Branch org.apache.commons.cli.OptionGroup.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/OptionGroup;: root-Branch in context: org.apache.commons.cli.OptionGroup:addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/OptionGroup;
   * Goal 10. Branch org.apache.commons.cli.OptionGroup.<init>()V: root-Branch in context: org.apache.commons.cli.OptionGroup:<init>()V
   * Goal 11. Branch org.apache.commons.cli.OptionGroup.toString()Ljava/lang/String;: I22 Branch 3 IFEQ L140 - true in context: org.apache.commons.cli.OptionGroup:toString()Ljava/lang/String;
   * Goal 12. Branch org.apache.commons.cli.OptionGroup.toString()Ljava/lang/String;: I22 Branch 3 IFEQ L140 - false in context: org.apache.commons.cli.OptionGroup:toString()Ljava/lang/String;
   * Goal 13. Branch org.apache.commons.cli.OptionGroup.toString()Ljava/lang/String;: I33 Branch 4 IFNULL L144 - false in context: org.apache.commons.cli.OptionGroup:toString()Ljava/lang/String;
   * Goal 14. Branch org.apache.commons.cli.OptionGroup.toString()Ljava/lang/String;: I78 Branch 5 IFEQ L158 - true in context: org.apache.commons.cli.OptionGroup:toString()Ljava/lang/String;
   * Goal 15. Branch org.apache.commons.cli.OptionGroup.toString()Ljava/lang/String;: I78 Branch 5 IFEQ L158 - false in context: org.apache.commons.cli.OptionGroup:toString()Ljava/lang/String;
   * Goal 16. [Output]: org.apache.commons.cli.OptionGroup.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/OptionGroup;:NonNull:org.apache.commons.cli.OptionGroup:isRequired()Z:False
   * Goal 17. [Output]: org.apache.commons.cli.OptionGroup.toString()Ljava/lang/String;:NonEmptyString
   * Goal 18. org.apache.commons.cli.OptionGroup.<init>()V: Line 37
   * Goal 19. org.apache.commons.cli.OptionGroup.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/OptionGroup;: Line 55
   * Goal 20. org.apache.commons.cli.OptionGroup.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/OptionGroup;: Line 57
   * Goal 21. org.apache.commons.cli.OptionGroup.getOptions()Ljava/util/Collection;: Line 76
   * Goal 22. org.apache.commons.cli.OptionGroup.toString()Ljava/lang/String;: Line 134
   * Goal 23. org.apache.commons.cli.OptionGroup.toString()Ljava/lang/String;: Line 136
   * Goal 24. org.apache.commons.cli.OptionGroup.toString()Ljava/lang/String;: Line 138
   * Goal 25. org.apache.commons.cli.OptionGroup.toString()Ljava/lang/String;: Line 140
   * Goal 26. org.apache.commons.cli.OptionGroup.toString()Ljava/lang/String;: Line 142
   * Goal 27. org.apache.commons.cli.OptionGroup.toString()Ljava/lang/String;: Line 144
   * Goal 28. org.apache.commons.cli.OptionGroup.toString()Ljava/lang/String;: Line 146
   * Goal 29. org.apache.commons.cli.OptionGroup.toString()Ljava/lang/String;: Line 147
   * Goal 30. org.apache.commons.cli.OptionGroup.toString()Ljava/lang/String;: Line 155
   * Goal 31. org.apache.commons.cli.OptionGroup.toString()Ljava/lang/String;: Line 156
   * Goal 32. org.apache.commons.cli.OptionGroup.toString()Ljava/lang/String;: Line 158
   * Goal 33. org.apache.commons.cli.OptionGroup.toString()Ljava/lang/String;: Line 160
   * Goal 34. org.apache.commons.cli.OptionGroup.toString()Ljava/lang/String;: Line 162
   * Goal 35. org.apache.commons.cli.OptionGroup.toString()Ljava/lang/String;: Line 164
   * Goal 36. org.apache.commons.cli.OptionGroup.toString()Ljava/lang/String;: Line 166
   * Goal 37. [METHOD] org.apache.commons.cli.OptionGroup.<init>()V
   * Goal 38. [METHOD] org.apache.commons.cli.OptionGroup.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/OptionGroup;
   * Goal 39. [METHOD] org.apache.commons.cli.OptionGroup.toString()Ljava/lang/String;
   * Goal 40. [METHODNOEX] org.apache.commons.cli.OptionGroup.<init>()V
   * Goal 41. [METHODNOEX] org.apache.commons.cli.OptionGroup.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/OptionGroup;
   * Goal 42. [METHODNOEX] org.apache.commons.cli.OptionGroup.toString()Ljava/lang/String;
   * Goal 43. Weak Mutation 8: org.apache.commons.cli.OptionGroup.toString()Ljava/lang/String;:138 - ReplaceConstant - [ -> 
   * Goal 44. Weak Mutation 9: org.apache.commons.cli.OptionGroup.toString()Ljava/lang/String;:140 - ReplaceComparisonOperator == -> !=
   * Goal 45. Weak Mutation 10: org.apache.commons.cli.OptionGroup.toString()Ljava/lang/String;:144 - ReplaceComparisonOperator = null -> != null
   * Goal 46. Weak Mutation 11: org.apache.commons.cli.OptionGroup.toString()Ljava/lang/String;:146 - ReplaceConstant - - -> 
   * Goal 47. Weak Mutation 13: org.apache.commons.cli.OptionGroup.toString()Ljava/lang/String;:155 - ReplaceConstant -   -> 
   * Goal 48. Weak Mutation 14: org.apache.commons.cli.OptionGroup.toString()Ljava/lang/String;:158 - ReplaceComparisonOperator == -> !=
   * Goal 49. Weak Mutation 15: org.apache.commons.cli.OptionGroup.toString()Ljava/lang/String;:160 - ReplaceConstant - ,  -> 
   * Goal 50. Weak Mutation 16: org.apache.commons.cli.OptionGroup.toString()Ljava/lang/String;:164 - ReplaceConstant - ] -> 
   */

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option("2H", "2H");
      optionGroup0.addOption(option0);
      Option option1 = new Option("O", false, "2H");
      OptionGroup optionGroup1 = optionGroup0.addOption(option1);
      String string0 = optionGroup1.toString();
      assertEquals("[-2H 2H, -O 2H]", string0);
  }

  //Test case number: 6
  /*
   * 46 covered goals:
   * Goal 1. org.apache.commons.cli.OptionGroup.getOptions()Ljava/util/Collection;: root-Branch
   * Goal 2. org.apache.commons.cli.OptionGroup.<init>()V: root-Branch
   * Goal 3. org.apache.commons.cli.OptionGroup.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/OptionGroup;: root-Branch
   * Goal 4. org.apache.commons.cli.OptionGroup.toString()Ljava/lang/String;: I22 Branch 3 IFEQ L140 - true
   * Goal 5. org.apache.commons.cli.OptionGroup.toString()Ljava/lang/String;: I22 Branch 3 IFEQ L140 - false
   * Goal 6. org.apache.commons.cli.OptionGroup.toString()Ljava/lang/String;: I33 Branch 4 IFNULL L144 - true
   * Goal 7. org.apache.commons.cli.OptionGroup.toString()Ljava/lang/String;: I78 Branch 5 IFEQ L158 - true
   * Goal 8. Branch org.apache.commons.cli.OptionGroup.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/OptionGroup;: root-Branch in context: org.apache.commons.cli.OptionGroup:addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/OptionGroup;
   * Goal 9. Branch org.apache.commons.cli.OptionGroup.<init>()V: root-Branch in context: org.apache.commons.cli.OptionGroup:<init>()V
   * Goal 10. Branch org.apache.commons.cli.OptionGroup.toString()Ljava/lang/String;: I22 Branch 3 IFEQ L140 - true in context: org.apache.commons.cli.OptionGroup:toString()Ljava/lang/String;
   * Goal 11. Branch org.apache.commons.cli.OptionGroup.toString()Ljava/lang/String;: I22 Branch 3 IFEQ L140 - false in context: org.apache.commons.cli.OptionGroup:toString()Ljava/lang/String;
   * Goal 12. Branch org.apache.commons.cli.OptionGroup.toString()Ljava/lang/String;: I33 Branch 4 IFNULL L144 - true in context: org.apache.commons.cli.OptionGroup:toString()Ljava/lang/String;
   * Goal 13. Branch org.apache.commons.cli.OptionGroup.toString()Ljava/lang/String;: I78 Branch 5 IFEQ L158 - true in context: org.apache.commons.cli.OptionGroup:toString()Ljava/lang/String;
   * Goal 14. [Output]: org.apache.commons.cli.OptionGroup.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/OptionGroup;:NonNull:org.apache.commons.cli.OptionGroup:isRequired()Z:False
   * Goal 15. [Output]: org.apache.commons.cli.OptionGroup.toString()Ljava/lang/String;:NonEmptyString
   * Goal 16. org.apache.commons.cli.OptionGroup.<init>()V: Line 37
   * Goal 17. org.apache.commons.cli.OptionGroup.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/OptionGroup;: Line 55
   * Goal 18. org.apache.commons.cli.OptionGroup.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/OptionGroup;: Line 57
   * Goal 19. org.apache.commons.cli.OptionGroup.getOptions()Ljava/util/Collection;: Line 76
   * Goal 20. org.apache.commons.cli.OptionGroup.toString()Ljava/lang/String;: Line 134
   * Goal 21. org.apache.commons.cli.OptionGroup.toString()Ljava/lang/String;: Line 136
   * Goal 22. org.apache.commons.cli.OptionGroup.toString()Ljava/lang/String;: Line 138
   * Goal 23. org.apache.commons.cli.OptionGroup.toString()Ljava/lang/String;: Line 140
   * Goal 24. org.apache.commons.cli.OptionGroup.toString()Ljava/lang/String;: Line 142
   * Goal 25. org.apache.commons.cli.OptionGroup.toString()Ljava/lang/String;: Line 144
   * Goal 26. org.apache.commons.cli.OptionGroup.toString()Ljava/lang/String;: Line 151
   * Goal 27. org.apache.commons.cli.OptionGroup.toString()Ljava/lang/String;: Line 152
   * Goal 28. org.apache.commons.cli.OptionGroup.toString()Ljava/lang/String;: Line 155
   * Goal 29. org.apache.commons.cli.OptionGroup.toString()Ljava/lang/String;: Line 156
   * Goal 30. org.apache.commons.cli.OptionGroup.toString()Ljava/lang/String;: Line 158
   * Goal 31. org.apache.commons.cli.OptionGroup.toString()Ljava/lang/String;: Line 162
   * Goal 32. org.apache.commons.cli.OptionGroup.toString()Ljava/lang/String;: Line 164
   * Goal 33. org.apache.commons.cli.OptionGroup.toString()Ljava/lang/String;: Line 166
   * Goal 34. [METHOD] org.apache.commons.cli.OptionGroup.<init>()V
   * Goal 35. [METHOD] org.apache.commons.cli.OptionGroup.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/OptionGroup;
   * Goal 36. [METHOD] org.apache.commons.cli.OptionGroup.toString()Ljava/lang/String;
   * Goal 37. [METHODNOEX] org.apache.commons.cli.OptionGroup.<init>()V
   * Goal 38. [METHODNOEX] org.apache.commons.cli.OptionGroup.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/OptionGroup;
   * Goal 39. [METHODNOEX] org.apache.commons.cli.OptionGroup.toString()Ljava/lang/String;
   * Goal 40. Weak Mutation 8: org.apache.commons.cli.OptionGroup.toString()Ljava/lang/String;:138 - ReplaceConstant - [ -> 
   * Goal 41. Weak Mutation 9: org.apache.commons.cli.OptionGroup.toString()Ljava/lang/String;:140 - ReplaceComparisonOperator == -> !=
   * Goal 42. Weak Mutation 10: org.apache.commons.cli.OptionGroup.toString()Ljava/lang/String;:144 - ReplaceComparisonOperator = null -> != null
   * Goal 43. Weak Mutation 12: org.apache.commons.cli.OptionGroup.toString()Ljava/lang/String;:151 - ReplaceConstant - -- -> 
   * Goal 44. Weak Mutation 13: org.apache.commons.cli.OptionGroup.toString()Ljava/lang/String;:155 - ReplaceConstant -   -> 
   * Goal 45. Weak Mutation 14: org.apache.commons.cli.OptionGroup.toString()Ljava/lang/String;:158 - ReplaceComparisonOperator == -> !=
   * Goal 46. Weak Mutation 16: org.apache.commons.cli.OptionGroup.toString()Ljava/lang/String;:164 - ReplaceConstant - ] -> 
   */

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option((String) null, true, "");
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      String string0 = optionGroup1.toString();
      assertEquals("[--null ]", string0);
  }

  //Test case number: 7
  /*
   * 22 covered goals:
   * Goal 1. org.apache.commons.cli.OptionGroup.<init>()V: root-Branch
   * Goal 2. org.apache.commons.cli.OptionGroup.getSelected()Ljava/lang/String;: root-Branch
   * Goal 3. org.apache.commons.cli.OptionGroup.setSelected(Lorg/apache/commons/cli/Option;)V: I4 Branch 1 IFNULL L91 - true
   * Goal 4. org.apache.commons.cli.OptionGroup.setSelected(Lorg/apache/commons/cli/Option;)V: I4 Branch 1 IFNULL L91 - false
   * Goal 5. org.apache.commons.cli.OptionGroup.setSelected(Lorg/apache/commons/cli/Option;)V: I10 Branch 2 IFLE L91 - true
   * Goal 6. Branch org.apache.commons.cli.OptionGroup.<init>()V: root-Branch in context: org.apache.commons.cli.OptionGroup:<init>()V
   * Goal 7. Branch org.apache.commons.cli.OptionGroup.setSelected(Lorg/apache/commons/cli/Option;)V: I4 Branch 1 IFNULL L91 - true in context: org.apache.commons.cli.OptionGroup:setSelected(Lorg/apache/commons/cli/Option;)V
   * Goal 8. Branch org.apache.commons.cli.OptionGroup.setSelected(Lorg/apache/commons/cli/Option;)V: I10 Branch 2 IFLE L91 - true in context: org.apache.commons.cli.OptionGroup:setSelected(Lorg/apache/commons/cli/Option;)V
   * Goal 9. Branch org.apache.commons.cli.OptionGroup.setSelected(Lorg/apache/commons/cli/Option;)V: I4 Branch 1 IFNULL L91 - false in context: org.apache.commons.cli.OptionGroup:setSelected(Lorg/apache/commons/cli/Option;)V
   * Goal 10. setSelected(Lorg/apache/commons/cli/Option;)V_org.apache.commons.cli.ParseException_DECLARED
   * Goal 11. org.apache.commons.cli.OptionGroup.<init>()V: Line 37
   * Goal 12. org.apache.commons.cli.OptionGroup.getSelected()Ljava/lang/String;: Line 106
   * Goal 13. org.apache.commons.cli.OptionGroup.setSelected(Lorg/apache/commons/cli/Option;)V: Line 91
   * Goal 14. org.apache.commons.cli.OptionGroup.setSelected(Lorg/apache/commons/cli/Option;)V: Line 93
   * Goal 15. org.apache.commons.cli.OptionGroup.setSelected(Lorg/apache/commons/cli/Option;)V: Line 97
   * Goal 16. org.apache.commons.cli.OptionGroup.setSelected(Lorg/apache/commons/cli/Option;)V: Line 99
   * Goal 17. [METHOD] org.apache.commons.cli.OptionGroup.<init>()V
   * Goal 18. [METHOD] org.apache.commons.cli.OptionGroup.setSelected(Lorg/apache/commons/cli/Option;)V
   * Goal 19. [METHODNOEX] org.apache.commons.cli.OptionGroup.<init>()V
   * Goal 20. [METHODNOEX] org.apache.commons.cli.OptionGroup.setSelected(Lorg/apache/commons/cli/Option;)V
   * Goal 21. Weak Mutation 0: org.apache.commons.cli.OptionGroup.setSelected(Lorg/apache/commons/cli/Option;)V:91 - ReplaceComparisonOperator = null -> != null
   * Goal 22. Weak Mutation 2: org.apache.commons.cli.OptionGroup.setSelected(Lorg/apache/commons/cli/Option;)V:91 - ReplaceComparisonOperator <= -> ==
   */

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option("a", "a", true, "a");
      optionGroup0.setSelected(option0);
      Option option1 = new Option("_", "a", true, "a");
      try { 
        optionGroup0.setSelected(option1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The option '_' was specified but an option from this group has already been selected: 'a'
         //
         assertThrownBy("org.apache.commons.cli.OptionGroup", e);
      }
  }

  //Test case number: 8
  /*
   * 18 covered goals:
   * Goal 1. org.apache.commons.cli.OptionGroup.<init>()V: root-Branch
   * Goal 2. org.apache.commons.cli.OptionGroup.setSelected(Lorg/apache/commons/cli/Option;)V: I4 Branch 1 IFNULL L91 - true
   * Goal 3. org.apache.commons.cli.OptionGroup.setSelected(Lorg/apache/commons/cli/Option;)V: I4 Branch 1 IFNULL L91 - false
   * Goal 4. org.apache.commons.cli.OptionGroup.setSelected(Lorg/apache/commons/cli/Option;)V: I10 Branch 2 IFLE L91 - false
   * Goal 5. Branch org.apache.commons.cli.OptionGroup.<init>()V: root-Branch in context: org.apache.commons.cli.OptionGroup:<init>()V
   * Goal 6. Branch org.apache.commons.cli.OptionGroup.setSelected(Lorg/apache/commons/cli/Option;)V: I4 Branch 1 IFNULL L91 - true in context: org.apache.commons.cli.OptionGroup:setSelected(Lorg/apache/commons/cli/Option;)V
   * Goal 7. Branch org.apache.commons.cli.OptionGroup.setSelected(Lorg/apache/commons/cli/Option;)V: I4 Branch 1 IFNULL L91 - false in context: org.apache.commons.cli.OptionGroup:setSelected(Lorg/apache/commons/cli/Option;)V
   * Goal 8. Branch org.apache.commons.cli.OptionGroup.setSelected(Lorg/apache/commons/cli/Option;)V: I10 Branch 2 IFLE L91 - false in context: org.apache.commons.cli.OptionGroup:setSelected(Lorg/apache/commons/cli/Option;)V
   * Goal 9. org.apache.commons.cli.OptionGroup.<init>()V: Line 37
   * Goal 10. org.apache.commons.cli.OptionGroup.setSelected(Lorg/apache/commons/cli/Option;)V: Line 91
   * Goal 11. org.apache.commons.cli.OptionGroup.setSelected(Lorg/apache/commons/cli/Option;)V: Line 93
   * Goal 12. org.apache.commons.cli.OptionGroup.setSelected(Lorg/apache/commons/cli/Option;)V: Line 99
   * Goal 13. [METHOD] org.apache.commons.cli.OptionGroup.<init>()V
   * Goal 14. [METHOD] org.apache.commons.cli.OptionGroup.setSelected(Lorg/apache/commons/cli/Option;)V
   * Goal 15. [METHODNOEX] org.apache.commons.cli.OptionGroup.<init>()V
   * Goal 16. [METHODNOEX] org.apache.commons.cli.OptionGroup.setSelected(Lorg/apache/commons/cli/Option;)V
   * Goal 17. Weak Mutation 0: org.apache.commons.cli.OptionGroup.setSelected(Lorg/apache/commons/cli/Option;)V:91 - ReplaceComparisonOperator = null -> != null
   * Goal 18. Weak Mutation 1: org.apache.commons.cli.OptionGroup.setSelected(Lorg/apache/commons/cli/Option;)V:91 - ReplaceComparisonOperator <= -> -1
   */

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option("a", "a", true, "a");
      optionGroup0.setSelected(option0);
      optionGroup0.setSelected(option0);
      assertTrue(option0.hasLongOpt());
  }

  //Test case number: 9
  /*
   * 19 covered goals:
   * Goal 1. org.apache.commons.cli.OptionGroup.<init>()V: root-Branch
   * Goal 2. org.apache.commons.cli.OptionGroup.getSelected()Ljava/lang/String;: root-Branch
   * Goal 3. org.apache.commons.cli.OptionGroup.setSelected(Lorg/apache/commons/cli/Option;)V: I4 Branch 1 IFNULL L91 - true
   * Goal 4. Branch org.apache.commons.cli.OptionGroup.<init>()V: root-Branch in context: org.apache.commons.cli.OptionGroup:<init>()V
   * Goal 5. Branch org.apache.commons.cli.OptionGroup.getSelected()Ljava/lang/String;: root-Branch in context: org.apache.commons.cli.OptionGroup:getSelected()Ljava/lang/String;
   * Goal 6. Branch org.apache.commons.cli.OptionGroup.setSelected(Lorg/apache/commons/cli/Option;)V: I4 Branch 1 IFNULL L91 - true in context: org.apache.commons.cli.OptionGroup:setSelected(Lorg/apache/commons/cli/Option;)V
   * Goal 7. [Output]: org.apache.commons.cli.OptionGroup.getSelected()Ljava/lang/String;:EmptyString
   * Goal 8. org.apache.commons.cli.OptionGroup.<init>()V: Line 37
   * Goal 9. org.apache.commons.cli.OptionGroup.getSelected()Ljava/lang/String;: Line 106
   * Goal 10. org.apache.commons.cli.OptionGroup.setSelected(Lorg/apache/commons/cli/Option;)V: Line 91
   * Goal 11. org.apache.commons.cli.OptionGroup.setSelected(Lorg/apache/commons/cli/Option;)V: Line 93
   * Goal 12. org.apache.commons.cli.OptionGroup.setSelected(Lorg/apache/commons/cli/Option;)V: Line 99
   * Goal 13. [METHOD] org.apache.commons.cli.OptionGroup.<init>()V
   * Goal 14. [METHOD] org.apache.commons.cli.OptionGroup.getSelected()Ljava/lang/String;
   * Goal 15. [METHOD] org.apache.commons.cli.OptionGroup.setSelected(Lorg/apache/commons/cli/Option;)V
   * Goal 16. [METHODNOEX] org.apache.commons.cli.OptionGroup.<init>()V
   * Goal 17. [METHODNOEX] org.apache.commons.cli.OptionGroup.getSelected()Ljava/lang/String;
   * Goal 18. [METHODNOEX] org.apache.commons.cli.OptionGroup.setSelected(Lorg/apache/commons/cli/Option;)V
   * Goal 19. Weak Mutation 0: org.apache.commons.cli.OptionGroup.setSelected(Lorg/apache/commons/cli/Option;)V:91 - ReplaceComparisonOperator = null -> != null
   */

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option("", (String) null);
      optionGroup0.setSelected(option0);
      String string0 = optionGroup0.getSelected();
      assertEquals("", string0);
  }

  //Test case number: 10
  /*
   * 11 covered goals:
   * Goal 1. org.apache.commons.cli.OptionGroup.<init>()V: root-Branch
   * Goal 2. org.apache.commons.cli.OptionGroup.getSelected()Ljava/lang/String;: root-Branch
   * Goal 3. Branch org.apache.commons.cli.OptionGroup.<init>()V: root-Branch in context: org.apache.commons.cli.OptionGroup:<init>()V
   * Goal 4. Branch org.apache.commons.cli.OptionGroup.getSelected()Ljava/lang/String;: root-Branch in context: org.apache.commons.cli.OptionGroup:getSelected()Ljava/lang/String;
   * Goal 5. [Output]: org.apache.commons.cli.OptionGroup.getSelected()Ljava/lang/String;:Null
   * Goal 6. org.apache.commons.cli.OptionGroup.<init>()V: Line 37
   * Goal 7. org.apache.commons.cli.OptionGroup.getSelected()Ljava/lang/String;: Line 106
   * Goal 8. [METHOD] org.apache.commons.cli.OptionGroup.<init>()V
   * Goal 9. [METHOD] org.apache.commons.cli.OptionGroup.getSelected()Ljava/lang/String;
   * Goal 10. [METHODNOEX] org.apache.commons.cli.OptionGroup.<init>()V
   * Goal 11. [METHODNOEX] org.apache.commons.cli.OptionGroup.getSelected()Ljava/lang/String;
   */

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OptionGroup optionGroup0 = new OptionGroup();
      String string0 = optionGroup0.getSelected();
      assertNull(string0);
  }

  //Test case number: 11
  /*
   * 11 covered goals:
   * Goal 1. org.apache.commons.cli.OptionGroup.<init>()V: root-Branch
   * Goal 2. org.apache.commons.cli.OptionGroup.getNames()Ljava/util/Collection;: root-Branch
   * Goal 3. Branch org.apache.commons.cli.OptionGroup.<init>()V: root-Branch in context: org.apache.commons.cli.OptionGroup:<init>()V
   * Goal 4. Branch org.apache.commons.cli.OptionGroup.getNames()Ljava/util/Collection;: root-Branch in context: org.apache.commons.cli.OptionGroup:getNames()Ljava/util/Collection;
   * Goal 5. [Output]: org.apache.commons.cli.OptionGroup.getNames()Ljava/util/Collection;:NonNull
   * Goal 6. org.apache.commons.cli.OptionGroup.<init>()V: Line 37
   * Goal 7. org.apache.commons.cli.OptionGroup.getNames()Ljava/util/Collection;: Line 67
   * Goal 8. [METHOD] org.apache.commons.cli.OptionGroup.<init>()V
   * Goal 9. [METHOD] org.apache.commons.cli.OptionGroup.getNames()Ljava/util/Collection;
   * Goal 10. [METHODNOEX] org.apache.commons.cli.OptionGroup.<init>()V
   * Goal 11. [METHODNOEX] org.apache.commons.cli.OptionGroup.getNames()Ljava/util/Collection;
   */

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OptionGroup optionGroup0 = new OptionGroup();
      Collection collection0 = optionGroup0.getNames();
      assertNotNull(collection0);
  }

  //Test case number: 12
  /*
   * 21 covered goals:
   * Goal 1. org.apache.commons.cli.OptionGroup.isRequired()Z: root-Branch
   * Goal 2. org.apache.commons.cli.OptionGroup.<init>()V: root-Branch
   * Goal 3. org.apache.commons.cli.OptionGroup.setRequired(Z)V: root-Branch
   * Goal 4. Branch org.apache.commons.cli.OptionGroup.isRequired()Z: root-Branch in context: org.apache.commons.cli.OptionGroup:isRequired()Z
   * Goal 5. Branch org.apache.commons.cli.OptionGroup.setRequired(Z)V: root-Branch in context: org.apache.commons.cli.OptionGroup:setRequired(Z)V
   * Goal 6. Branch org.apache.commons.cli.OptionGroup.<init>()V: root-Branch in context: org.apache.commons.cli.OptionGroup:<init>()V
   * Goal 7. [Output]: org.apache.commons.cli.OptionGroup.isRequired()Z:True
   * Goal 8. org.apache.commons.cli.OptionGroup.<init>()V: Line 37
   * Goal 9. org.apache.commons.cli.OptionGroup.isRequired()Z: Line 124
   * Goal 10. org.apache.commons.cli.OptionGroup.setRequired(Z)V: Line 114
   * Goal 11. org.apache.commons.cli.OptionGroup.setRequired(Z)V: Line 115
   * Goal 12. [METHOD] org.apache.commons.cli.OptionGroup.<init>()V
   * Goal 13. [METHOD] org.apache.commons.cli.OptionGroup.isRequired()Z
   * Goal 14. [METHOD] org.apache.commons.cli.OptionGroup.setRequired(Z)V
   * Goal 15. [METHODNOEX] org.apache.commons.cli.OptionGroup.<init>()V
   * Goal 16. [METHODNOEX] org.apache.commons.cli.OptionGroup.isRequired()Z
   * Goal 17. [METHODNOEX] org.apache.commons.cli.OptionGroup.setRequired(Z)V
   * Goal 18. Weak Mutation 4: org.apache.commons.cli.OptionGroup.setRequired(Z)V:114 - InsertUnaryOp Negation of required
   * Goal 19. Weak Mutation 5: org.apache.commons.cli.OptionGroup.setRequired(Z)V:114 - InsertUnaryOp IINC 1 required
   * Goal 20. Weak Mutation 6: org.apache.commons.cli.OptionGroup.setRequired(Z)V:114 - InsertUnaryOp IINC -1 required
   * Goal 21. Weak Mutation 7: org.apache.commons.cli.OptionGroup.isRequired()Z:124 - InsertUnaryOp Negation
   */

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OptionGroup optionGroup0 = new OptionGroup();
      optionGroup0.setRequired(true);
      boolean boolean0 = optionGroup0.isRequired();
      assertTrue(boolean0);
  }

  //Test case number: 13
  /*
   * 12 covered goals:
   * Goal 1. org.apache.commons.cli.OptionGroup.isRequired()Z: root-Branch
   * Goal 2. org.apache.commons.cli.OptionGroup.<init>()V: root-Branch
   * Goal 3. Branch org.apache.commons.cli.OptionGroup.isRequired()Z: root-Branch in context: org.apache.commons.cli.OptionGroup:isRequired()Z
   * Goal 4. Branch org.apache.commons.cli.OptionGroup.<init>()V: root-Branch in context: org.apache.commons.cli.OptionGroup:<init>()V
   * Goal 5. [Output]: org.apache.commons.cli.OptionGroup.isRequired()Z:False
   * Goal 6. org.apache.commons.cli.OptionGroup.<init>()V: Line 37
   * Goal 7. org.apache.commons.cli.OptionGroup.isRequired()Z: Line 124
   * Goal 8. [METHOD] org.apache.commons.cli.OptionGroup.<init>()V
   * Goal 9. [METHOD] org.apache.commons.cli.OptionGroup.isRequired()Z
   * Goal 10. [METHODNOEX] org.apache.commons.cli.OptionGroup.<init>()V
   * Goal 11. [METHODNOEX] org.apache.commons.cli.OptionGroup.isRequired()Z
   * Goal 12. Weak Mutation 7: org.apache.commons.cli.OptionGroup.isRequired()Z:124 - InsertUnaryOp Negation
   */

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OptionGroup optionGroup0 = new OptionGroup();
      boolean boolean0 = optionGroup0.isRequired();
      assertFalse(boolean0);
  }
}
