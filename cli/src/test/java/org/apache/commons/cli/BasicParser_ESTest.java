/*
 * This file was automatically generated by EvoSuite
 * Wed Jun 01 17:12:22 GMT 2016
 */

package org.apache.commons.cli;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.cli.BasicParser;
import org.apache.commons.cli.Options;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BasicParser_ESTest extends BasicParser_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 10 covered goals:
   * Goal 1. org.apache.commons.cli.BasicParser.<init>()V: root-Branch
   * Goal 2. org.apache.commons.cli.BasicParser.flatten(Lorg/apache/commons/cli/Options;[Ljava/lang/String;Z)[Ljava/lang/String;: root-Branch
   * Goal 3. Branch org.apache.commons.cli.BasicParser.flatten(Lorg/apache/commons/cli/Options;[Ljava/lang/String;Z)[Ljava/lang/String;: root-Branch in context: 
   * Goal 4. Branch org.apache.commons.cli.BasicParser.<init>()V: root-Branch in context: org.apache.commons.cli.BasicParser:<init>()V
   * Goal 5. [Output]: org.apache.commons.cli.BasicParser.flatten(Lorg/apache/commons/cli/Options;[Ljava/lang/String;Z)[Ljava/lang/String;:NonEmptyArray
   * Goal 6. org.apache.commons.cli.BasicParser.flatten(Lorg/apache/commons/cli/Options;[Ljava/lang/String;Z)[Ljava/lang/String;: Line 45
   * Goal 7. [METHOD] org.apache.commons.cli.BasicParser.<init>()V
   * Goal 8. [METHOD] org.apache.commons.cli.BasicParser.flatten(Lorg/apache/commons/cli/Options;[Ljava/lang/String;Z)[Ljava/lang/String;
   * Goal 9. [METHODNOEX] org.apache.commons.cli.BasicParser.<init>()V
   * Goal 10. [METHODNOEX] org.apache.commons.cli.BasicParser.flatten(Lorg/apache/commons/cli/Options;[Ljava/lang/String;Z)[Ljava/lang/String;
   */

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BasicParser basicParser0 = new BasicParser();
      Options options0 = new Options();
      String[] stringArray0 = new String[1];
      String[] stringArray1 = basicParser0.flatten(options0, stringArray0, true);
      assertSame(stringArray1, stringArray0);
  }

  //Test case number: 1
  /*
   * 10 covered goals:
   * Goal 1. org.apache.commons.cli.BasicParser.<init>()V: root-Branch
   * Goal 2. org.apache.commons.cli.BasicParser.flatten(Lorg/apache/commons/cli/Options;[Ljava/lang/String;Z)[Ljava/lang/String;: root-Branch
   * Goal 3. Branch org.apache.commons.cli.BasicParser.flatten(Lorg/apache/commons/cli/Options;[Ljava/lang/String;Z)[Ljava/lang/String;: root-Branch in context: 
   * Goal 4. Branch org.apache.commons.cli.BasicParser.<init>()V: root-Branch in context: org.apache.commons.cli.BasicParser:<init>()V
   * Goal 5. [Output]: org.apache.commons.cli.BasicParser.flatten(Lorg/apache/commons/cli/Options;[Ljava/lang/String;Z)[Ljava/lang/String;:EmptyArray
   * Goal 6. org.apache.commons.cli.BasicParser.flatten(Lorg/apache/commons/cli/Options;[Ljava/lang/String;Z)[Ljava/lang/String;: Line 45
   * Goal 7. [METHOD] org.apache.commons.cli.BasicParser.<init>()V
   * Goal 8. [METHOD] org.apache.commons.cli.BasicParser.flatten(Lorg/apache/commons/cli/Options;[Ljava/lang/String;Z)[Ljava/lang/String;
   * Goal 9. [METHODNOEX] org.apache.commons.cli.BasicParser.<init>()V
   * Goal 10. [METHODNOEX] org.apache.commons.cli.BasicParser.flatten(Lorg/apache/commons/cli/Options;[Ljava/lang/String;Z)[Ljava/lang/String;
   */

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      BasicParser basicParser0 = new BasicParser();
      Options options0 = new Options();
      String[] stringArray0 = new String[0];
      String[] stringArray1 = basicParser0.flatten(options0, stringArray0, false);
      assertSame(stringArray0, stringArray1);
  }

  //Test case number: 2
  /*
   * 10 covered goals:
   * Goal 1. org.apache.commons.cli.BasicParser.<init>()V: root-Branch
   * Goal 2. org.apache.commons.cli.BasicParser.flatten(Lorg/apache/commons/cli/Options;[Ljava/lang/String;Z)[Ljava/lang/String;: root-Branch
   * Goal 3. Branch org.apache.commons.cli.BasicParser.flatten(Lorg/apache/commons/cli/Options;[Ljava/lang/String;Z)[Ljava/lang/String;: root-Branch in context: 
   * Goal 4. Branch org.apache.commons.cli.BasicParser.<init>()V: root-Branch in context: org.apache.commons.cli.BasicParser:<init>()V
   * Goal 5. [Output]: org.apache.commons.cli.BasicParser.flatten(Lorg/apache/commons/cli/Options;[Ljava/lang/String;Z)[Ljava/lang/String;:Null
   * Goal 6. org.apache.commons.cli.BasicParser.flatten(Lorg/apache/commons/cli/Options;[Ljava/lang/String;Z)[Ljava/lang/String;: Line 45
   * Goal 7. [METHOD] org.apache.commons.cli.BasicParser.<init>()V
   * Goal 8. [METHOD] org.apache.commons.cli.BasicParser.flatten(Lorg/apache/commons/cli/Options;[Ljava/lang/String;Z)[Ljava/lang/String;
   * Goal 9. [METHODNOEX] org.apache.commons.cli.BasicParser.<init>()V
   * Goal 10. [METHODNOEX] org.apache.commons.cli.BasicParser.flatten(Lorg/apache/commons/cli/Options;[Ljava/lang/String;Z)[Ljava/lang/String;
   */

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      BasicParser basicParser0 = new BasicParser();
      Options options0 = new Options();
      String[] stringArray0 = basicParser0.flatten(options0, (String[]) null, false);
      assertNull(stringArray0);
  }
}
