/*
 * This file was automatically generated by EvoSuite
 * Wed Jun 01 17:21:40 GMT 2016
 */

package org.apache.commons.cli;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.apache.commons.cli.Option;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class Option_ESTest extends Option_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 69 covered goals:
   * Goal 1. org.apache.commons.cli.Option.<init>(Ljava/lang/String;ZLjava/lang/String;)V: root-Branch
   * Goal 2. org.apache.commons.cli.Option.setLongOpt(Ljava/lang/String;)V: root-Branch
   * Goal 3. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true
   * Goal 4. org.apache.commons.cli.Option.hashCode()I: I4 Branch 36 IFNULL L622 - false
   * Goal 5. org.apache.commons.cli.Option.hashCode()I: I20 Branch 37 IFNULL L623 - false
   * Goal 6. Branch org.apache.commons.cli.Option.setLongOpt(Ljava/lang/String;)V: root-Branch in context: org.apache.commons.cli.Option:setLongOpt(Ljava/lang/String;)V
   * Goal 7. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;ZLjava/lang/String;)V: root-Branch in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 8. Branch org.apache.commons.cli.Option.hashCode()I: I4 Branch 36 IFNULL L622 - false in context: org.apache.commons.cli.Option:hashCode()I
   * Goal 9. Branch org.apache.commons.cli.Option.hashCode()I: I20 Branch 37 IFNULL L623 - false in context: org.apache.commons.cli.Option:hashCode()I
   * Goal 10. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 11. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 12. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 13. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 14. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 15. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 16. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 17. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 18. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 19. org.apache.commons.cli.Option.<init>(Ljava/lang/String;ZLjava/lang/String;)V: Line 106
   * Goal 20. org.apache.commons.cli.Option.hashCode()I: Line 622
   * Goal 21. org.apache.commons.cli.Option.hashCode()I: Line 623
   * Goal 22. org.apache.commons.cli.Option.hashCode()I: Line 624
   * Goal 23. org.apache.commons.cli.Option.setLongOpt(Ljava/lang/String;)V: Line 217
   * Goal 24. org.apache.commons.cli.Option.setLongOpt(Ljava/lang/String;)V: Line 218
   * Goal 25. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 26. [METHOD] org.apache.commons.cli.Option.hashCode()I
   * Goal 27. [METHOD] org.apache.commons.cli.Option.setLongOpt(Ljava/lang/String;)V
   * Goal 28. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 29. [METHODNOEX] org.apache.commons.cli.Option.hashCode()I
   * Goal 30. [METHODNOEX] org.apache.commons.cli.Option.setLongOpt(Ljava/lang/String;)V
   * Goal 31. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 32. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 33. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 34. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 35. Weak Mutation 4: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> description
   * Goal 36. Weak Mutation 5: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> longOpt
   * Goal 37. Weak Mutation 6: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> description
   * Goal 38. Weak Mutation 7: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> longOpt
   * Goal 39. Weak Mutation 8: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> description
   * Goal 40. Weak Mutation 9: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> opt
   * Goal 41. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 42. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 43. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 44. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 45. Weak Mutation 15: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> opt
   * Goal 46. Weak Mutation 16: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> longOpt
   * Goal 47. Weak Mutation 224: org.apache.commons.cli.Option.hashCode()I:622 - ReplaceComparisonOperator = null -> != null
   * Goal 48. Weak Mutation 226: org.apache.commons.cli.Option.hashCode()I:623 - ReplaceConstant - 31 -> 0
   * Goal 49. Weak Mutation 227: org.apache.commons.cli.Option.hashCode()I:623 - ReplaceConstant - 31 -> 1
   * Goal 50. Weak Mutation 228: org.apache.commons.cli.Option.hashCode()I:623 - ReplaceConstant - 31 -> -1
   * Goal 51. Weak Mutation 229: org.apache.commons.cli.Option.hashCode()I:623 - ReplaceConstant - 31 -> 30
   * Goal 52. Weak Mutation 230: org.apache.commons.cli.Option.hashCode()I:623 - ReplaceConstant - 31 -> 32
   * Goal 53. Weak Mutation 231: org.apache.commons.cli.Option.hashCode()I:623 - ReplaceVariable result -> UNINITIALIZED
   * Goal 54. Weak Mutation 232: org.apache.commons.cli.Option.hashCode()I:623 - ReplaceVariable result -> UNLIMITED_VALUES
   * Goal 55. Weak Mutation 233: org.apache.commons.cli.Option.hashCode()I:623 - InsertUnaryOp Negation of result
   * Goal 56. Weak Mutation 234: org.apache.commons.cli.Option.hashCode()I:623 - InsertUnaryOp IINC 1 result
   * Goal 57. Weak Mutation 235: org.apache.commons.cli.Option.hashCode()I:623 - InsertUnaryOp IINC -1 result
   * Goal 58. Weak Mutation 237: org.apache.commons.cli.Option.hashCode()I:623 - ReplaceArithmeticOperator * -> %
   * Goal 59. Weak Mutation 239: org.apache.commons.cli.Option.hashCode()I:623 - ReplaceArithmeticOperator * -> /
   * Goal 60. Weak Mutation 240: org.apache.commons.cli.Option.hashCode()I:623 - ReplaceComparisonOperator = null -> != null
   * Goal 61. Weak Mutation 242: org.apache.commons.cli.Option.hashCode()I:623 - ReplaceArithmeticOperator + -> %
   * Goal 62. Weak Mutation 243: org.apache.commons.cli.Option.hashCode()I:623 - ReplaceArithmeticOperator + -> -
   * Goal 63. Weak Mutation 244: org.apache.commons.cli.Option.hashCode()I:623 - ReplaceArithmeticOperator + -> *
   * Goal 64. Weak Mutation 245: org.apache.commons.cli.Option.hashCode()I:623 - ReplaceArithmeticOperator + -> /
   * Goal 65. Weak Mutation 246: org.apache.commons.cli.Option.hashCode()I:624 - ReplaceVariable result -> UNINITIALIZED
   * Goal 66. Weak Mutation 247: org.apache.commons.cli.Option.hashCode()I:624 - ReplaceVariable result -> UNLIMITED_VALUES
   * Goal 67. Weak Mutation 248: org.apache.commons.cli.Option.hashCode()I:624 - InsertUnaryOp Negation of result
   * Goal 68. Weak Mutation 249: org.apache.commons.cli.Option.hashCode()I:624 - InsertUnaryOp IINC 1 result
   * Goal 69. Weak Mutation 250: org.apache.commons.cli.Option.hashCode()I:624 - InsertUnaryOp IINC -1 result
   */

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Option option0 = new Option("", false, "");
      assertFalse(option0.hasLongOpt());
      
      option0.setLongOpt("C8/aP+&8U(iuL");
      option0.hashCode();
      assertFalse(option0.hasArg());
  }

  //Test case number: 1
  /*
   * 64 covered goals:
   * Goal 1. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: root-Branch
   * Goal 2. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true
   * Goal 3. org.apache.commons.cli.Option.hashCode()I: I4 Branch 36 IFNULL L622 - false
   * Goal 4. org.apache.commons.cli.Option.hashCode()I: I20 Branch 37 IFNULL L623 - true
   * Goal 5. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: root-Branch in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 6. Branch org.apache.commons.cli.Option.hashCode()I: I4 Branch 36 IFNULL L622 - false in context: org.apache.commons.cli.Option:hashCode()I
   * Goal 7. Branch org.apache.commons.cli.Option.hashCode()I: I20 Branch 37 IFNULL L623 - true in context: org.apache.commons.cli.Option:hashCode()I
   * Goal 8. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: Line 91
   * Goal 9. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 10. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 11. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 12. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 13. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 14. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 15. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 16. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 17. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 18. org.apache.commons.cli.Option.hashCode()I: Line 622
   * Goal 19. org.apache.commons.cli.Option.hashCode()I: Line 623
   * Goal 20. org.apache.commons.cli.Option.hashCode()I: Line 624
   * Goal 21. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 22. [METHOD] org.apache.commons.cli.Option.hashCode()I
   * Goal 23. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 24. [METHODNOEX] org.apache.commons.cli.Option.hashCode()I
   * Goal 25. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 26. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 27. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 28. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 29. Weak Mutation 4: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> description
   * Goal 30. Weak Mutation 5: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> longOpt
   * Goal 31. Weak Mutation 6: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> description
   * Goal 32. Weak Mutation 7: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> longOpt
   * Goal 33. Weak Mutation 8: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> description
   * Goal 34. Weak Mutation 9: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> opt
   * Goal 35. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 36. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 37. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 38. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 39. Weak Mutation 15: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> opt
   * Goal 40. Weak Mutation 16: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> longOpt
   * Goal 41. Weak Mutation 224: org.apache.commons.cli.Option.hashCode()I:622 - ReplaceComparisonOperator = null -> != null
   * Goal 42. Weak Mutation 226: org.apache.commons.cli.Option.hashCode()I:623 - ReplaceConstant - 31 -> 0
   * Goal 43. Weak Mutation 227: org.apache.commons.cli.Option.hashCode()I:623 - ReplaceConstant - 31 -> 1
   * Goal 44. Weak Mutation 228: org.apache.commons.cli.Option.hashCode()I:623 - ReplaceConstant - 31 -> -1
   * Goal 45. Weak Mutation 229: org.apache.commons.cli.Option.hashCode()I:623 - ReplaceConstant - 31 -> 30
   * Goal 46. Weak Mutation 230: org.apache.commons.cli.Option.hashCode()I:623 - ReplaceConstant - 31 -> 32
   * Goal 47. Weak Mutation 231: org.apache.commons.cli.Option.hashCode()I:623 - ReplaceVariable result -> UNINITIALIZED
   * Goal 48. Weak Mutation 232: org.apache.commons.cli.Option.hashCode()I:623 - ReplaceVariable result -> UNLIMITED_VALUES
   * Goal 49. Weak Mutation 233: org.apache.commons.cli.Option.hashCode()I:623 - InsertUnaryOp Negation of result
   * Goal 50. Weak Mutation 234: org.apache.commons.cli.Option.hashCode()I:623 - InsertUnaryOp IINC 1 result
   * Goal 51. Weak Mutation 235: org.apache.commons.cli.Option.hashCode()I:623 - InsertUnaryOp IINC -1 result
   * Goal 52. Weak Mutation 236: org.apache.commons.cli.Option.hashCode()I:623 - ReplaceArithmeticOperator * -> +
   * Goal 53. Weak Mutation 237: org.apache.commons.cli.Option.hashCode()I:623 - ReplaceArithmeticOperator * -> %
   * Goal 54. Weak Mutation 238: org.apache.commons.cli.Option.hashCode()I:623 - ReplaceArithmeticOperator * -> -
   * Goal 55. Weak Mutation 239: org.apache.commons.cli.Option.hashCode()I:623 - ReplaceArithmeticOperator * -> /
   * Goal 56. Weak Mutation 240: org.apache.commons.cli.Option.hashCode()I:623 - ReplaceComparisonOperator = null -> != null
   * Goal 57. Weak Mutation 241: org.apache.commons.cli.Option.hashCode()I:623 - ReplaceConstant - 0 -> 1
   * Goal 58. Weak Mutation 242: org.apache.commons.cli.Option.hashCode()I:623 - ReplaceArithmeticOperator + -> %
   * Goal 59. Weak Mutation 245: org.apache.commons.cli.Option.hashCode()I:623 - ReplaceArithmeticOperator + -> /
   * Goal 60. Weak Mutation 246: org.apache.commons.cli.Option.hashCode()I:624 - ReplaceVariable result -> UNINITIALIZED
   * Goal 61. Weak Mutation 247: org.apache.commons.cli.Option.hashCode()I:624 - ReplaceVariable result -> UNLIMITED_VALUES
   * Goal 62. Weak Mutation 248: org.apache.commons.cli.Option.hashCode()I:624 - InsertUnaryOp Negation of result
   * Goal 63. Weak Mutation 249: org.apache.commons.cli.Option.hashCode()I:624 - InsertUnaryOp IINC 1 result
   * Goal 64. Weak Mutation 250: org.apache.commons.cli.Option.hashCode()I:624 - InsertUnaryOp IINC -1 result
   */

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Option option0 = new Option("gl958S", " ]");
      option0.hashCode();
      assertEquals(" ]", option0.getDescription());
      assertTrue(option0.hasArgName());
      assertEquals("gl958S", option0.getOpt());
      assertEquals(-1, option0.getArgs());
      assertFalse(option0.hasLongOpt());
  }

  //Test case number: 2
  /*
   * 108 covered goals:
   * Goal 1. org.apache.commons.cli.Option.setArgs(I)V: root-Branch
   * Goal 2. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: root-Branch
   * Goal 3. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true
   * Goal 4. org.apache.commons.cli.Option.hasArg()Z: I4 Branch 4 IFGT L256 - false
   * Goal 5. org.apache.commons.cli.Option.hasArg()Z: I8 Branch 5 IF_ICMPNE L256 - true
   * Goal 6. org.apache.commons.cli.Option.hasArgs()Z: I5 Branch 8 IF_ICMPGT L339 - false
   * Goal 7. org.apache.commons.cli.Option.hasArgs()Z: I9 Branch 9 IF_ICMPNE L339 - true
   * Goal 8. org.apache.commons.cli.Option.toString()Ljava/lang/String;: I19 Branch 22 IFNULL L555 - true
   * Goal 9. org.apache.commons.cli.Option.toString()Ljava/lang/String;: I39 Branch 23 IFEQ L562 - true
   * Goal 10. org.apache.commons.cli.Option.toString()Ljava/lang/String;: I51 Branch 24 IFEQ L566 - true
   * Goal 11. org.apache.commons.cli.Option.toString()Ljava/lang/String;: I71 Branch 25 IFNULL L573 - true
   * Goal 12. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: root-Branch in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 13. Branch org.apache.commons.cli.Option.setArgs(I)V: root-Branch in context: org.apache.commons.cli.Option:setArgs(I)V
   * Goal 14. Branch org.apache.commons.cli.Option.toString()Ljava/lang/String;: I19 Branch 22 IFNULL L555 - true in context: org.apache.commons.cli.Option:toString()Ljava/lang/String;
   * Goal 15. Branch org.apache.commons.cli.Option.toString()Ljava/lang/String;: I39 Branch 23 IFEQ L562 - true in context: org.apache.commons.cli.Option:toString()Ljava/lang/String;
   * Goal 16. Branch org.apache.commons.cli.Option.toString()Ljava/lang/String;: I51 Branch 24 IFEQ L566 - true in context: org.apache.commons.cli.Option:toString()Ljava/lang/String;
   * Goal 17. Branch org.apache.commons.cli.Option.toString()Ljava/lang/String;: I71 Branch 25 IFNULL L573 - true in context: org.apache.commons.cli.Option:toString()Ljava/lang/String;
   * Goal 18. [Output]: org.apache.commons.cli.Option.toString()Ljava/lang/String;:NonEmptyString
   * Goal 19. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: Line 91
   * Goal 20. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 21. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 22. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 23. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 24. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 25. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 26. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 27. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 28. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 29. org.apache.commons.cli.Option.hasArg()Z: Line 256
   * Goal 30. org.apache.commons.cli.Option.hasArgs()Z: Line 339
   * Goal 31. org.apache.commons.cli.Option.setArgs(I)V: Line 349
   * Goal 32. org.apache.commons.cli.Option.setArgs(I)V: Line 350
   * Goal 33. org.apache.commons.cli.Option.toString()Ljava/lang/String;: Line 551
   * Goal 34. org.apache.commons.cli.Option.toString()Ljava/lang/String;: Line 553
   * Goal 35. org.apache.commons.cli.Option.toString()Ljava/lang/String;: Line 555
   * Goal 36. org.apache.commons.cli.Option.toString()Ljava/lang/String;: Line 560
   * Goal 37. org.apache.commons.cli.Option.toString()Ljava/lang/String;: Line 562
   * Goal 38. org.apache.commons.cli.Option.toString()Ljava/lang/String;: Line 566
   * Goal 39. org.apache.commons.cli.Option.toString()Ljava/lang/String;: Line 571
   * Goal 40. org.apache.commons.cli.Option.toString()Ljava/lang/String;: Line 573
   * Goal 41. org.apache.commons.cli.Option.toString()Ljava/lang/String;: Line 578
   * Goal 42. org.apache.commons.cli.Option.toString()Ljava/lang/String;: Line 580
   * Goal 43. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 44. [METHOD] org.apache.commons.cli.Option.setArgs(I)V
   * Goal 45. [METHOD] org.apache.commons.cli.Option.toString()Ljava/lang/String;
   * Goal 46. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 47. [METHODNOEX] org.apache.commons.cli.Option.setArgs(I)V
   * Goal 48. [METHODNOEX] org.apache.commons.cli.Option.toString()Ljava/lang/String;
   * Goal 49. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 50. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 51. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 52. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 53. Weak Mutation 5: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> longOpt
   * Goal 54. Weak Mutation 7: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> longOpt
   * Goal 55. Weak Mutation 8: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> description
   * Goal 56. Weak Mutation 9: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> opt
   * Goal 57. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 58. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 59. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 60. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 61. Weak Mutation 16: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> longOpt
   * Goal 62. Weak Mutation 26: org.apache.commons.cli.Option.hasArg()Z:256 - ReplaceVariable numberOfArgs -> UNINITIALIZED
   * Goal 63. Weak Mutation 27: org.apache.commons.cli.Option.hasArg()Z:256 - ReplaceVariable numberOfArgs -> UNLIMITED_VALUES
   * Goal 64. Weak Mutation 28: org.apache.commons.cli.Option.hasArg()Z:256 - InsertUnaryOp Negation
   * Goal 65. Weak Mutation 29: org.apache.commons.cli.Option.hasArg()Z:256 - InsertUnaryOp +1
   * Goal 66. Weak Mutation 30: org.apache.commons.cli.Option.hasArg()Z:256 - InsertUnaryOp -1
   * Goal 67. Weak Mutation 32: org.apache.commons.cli.Option.hasArg()Z:256 - ReplaceComparisonOperator > -> !=
   * Goal 68. Weak Mutation 34: org.apache.commons.cli.Option.hasArg()Z:256 - ReplaceVariable numberOfArgs -> UNINITIALIZED
   * Goal 69. Weak Mutation 35: org.apache.commons.cli.Option.hasArg()Z:256 - ReplaceVariable numberOfArgs -> UNLIMITED_VALUES
   * Goal 70. Weak Mutation 36: org.apache.commons.cli.Option.hasArg()Z:256 - InsertUnaryOp Negation
   * Goal 71. Weak Mutation 37: org.apache.commons.cli.Option.hasArg()Z:256 - InsertUnaryOp +1
   * Goal 72. Weak Mutation 38: org.apache.commons.cli.Option.hasArg()Z:256 - InsertUnaryOp -1
   * Goal 73. Weak Mutation 39: org.apache.commons.cli.Option.hasArg()Z:256 - ReplaceConstant - -2 -> 0
   * Goal 74. Weak Mutation 40: org.apache.commons.cli.Option.hasArg()Z:256 - ReplaceConstant - -2 -> 1
   * Goal 75. Weak Mutation 41: org.apache.commons.cli.Option.hasArg()Z:256 - ReplaceConstant - -2 -> -1
   * Goal 76. Weak Mutation 42: org.apache.commons.cli.Option.hasArg()Z:256 - ReplaceConstant - -2 -> -3
   * Goal 77. Weak Mutation 45: org.apache.commons.cli.Option.hasArg()Z:256 - ReplaceComparisonOperator != -> >
   * Goal 78. Weak Mutation 47: org.apache.commons.cli.Option.hasArg()Z:256 - ReplaceConstant - 0 -> 1
   * Goal 79. Weak Mutation 58: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceVariable numberOfArgs -> UNINITIALIZED
   * Goal 80. Weak Mutation 59: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceVariable numberOfArgs -> UNLIMITED_VALUES
   * Goal 81. Weak Mutation 60: org.apache.commons.cli.Option.hasArgs()Z:339 - InsertUnaryOp Negation
   * Goal 82. Weak Mutation 61: org.apache.commons.cli.Option.hasArgs()Z:339 - InsertUnaryOp +1
   * Goal 83. Weak Mutation 62: org.apache.commons.cli.Option.hasArgs()Z:339 - InsertUnaryOp -1
   * Goal 84. Weak Mutation 63: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceConstant - 1 -> 0
   * Goal 85. Weak Mutation 65: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceVariable numberOfArgs -> UNINITIALIZED
   * Goal 86. Weak Mutation 66: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceVariable numberOfArgs -> UNLIMITED_VALUES
   * Goal 87. Weak Mutation 67: org.apache.commons.cli.Option.hasArgs()Z:339 - InsertUnaryOp Negation
   * Goal 88. Weak Mutation 68: org.apache.commons.cli.Option.hasArgs()Z:339 - InsertUnaryOp +1
   * Goal 89. Weak Mutation 69: org.apache.commons.cli.Option.hasArgs()Z:339 - InsertUnaryOp -1
   * Goal 90. Weak Mutation 70: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceConstant - -2 -> 0
   * Goal 91. Weak Mutation 71: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceConstant - -2 -> 1
   * Goal 92. Weak Mutation 72: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceConstant - -2 -> -1
   * Goal 93. Weak Mutation 73: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceConstant - -2 -> -3
   * Goal 94. Weak Mutation 76: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceComparisonOperator != -> >
   * Goal 95. Weak Mutation 78: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceConstant - 0 -> 1
   * Goal 96. Weak Mutation 79: org.apache.commons.cli.Option.setArgs(I)V:349 - ReplaceVariable num -> UNINITIALIZED
   * Goal 97. Weak Mutation 80: org.apache.commons.cli.Option.setArgs(I)V:349 - ReplaceVariable num -> UNLIMITED_VALUES
   * Goal 98. Weak Mutation 81: org.apache.commons.cli.Option.setArgs(I)V:349 - InsertUnaryOp Negation of num
   * Goal 99. Weak Mutation 82: org.apache.commons.cli.Option.setArgs(I)V:349 - InsertUnaryOp IINC 1 num
   * Goal 100. Weak Mutation 83: org.apache.commons.cli.Option.setArgs(I)V:349 - InsertUnaryOp IINC -1 num
   * Goal 101. Weak Mutation 185: org.apache.commons.cli.Option.toString()Ljava/lang/String;:551 - ReplaceConstant - [ option:  -> 
   * Goal 102. Weak Mutation 186: org.apache.commons.cli.Option.toString()Ljava/lang/String;:555 - ReplaceComparisonOperator = null -> != null
   * Goal 103. Weak Mutation 188: org.apache.commons.cli.Option.toString()Ljava/lang/String;:560 - ReplaceConstant -   -> 
   * Goal 104. Weak Mutation 189: org.apache.commons.cli.Option.toString()Ljava/lang/String;:562 - ReplaceComparisonOperator == -> !=
   * Goal 105. Weak Mutation 191: org.apache.commons.cli.Option.toString()Ljava/lang/String;:566 - ReplaceComparisonOperator == -> !=
   * Goal 106. Weak Mutation 193: org.apache.commons.cli.Option.toString()Ljava/lang/String;:571 - ReplaceConstant -  ::  -> 
   * Goal 107. Weak Mutation 194: org.apache.commons.cli.Option.toString()Ljava/lang/String;:573 - ReplaceComparisonOperator = null -> != null
   * Goal 108. Weak Mutation 196: org.apache.commons.cli.Option.toString()Ljava/lang/String;:578 - ReplaceConstant -  ] -> 
   */

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Option option0 = new Option("", "");
      option0.setArgs((-2127));
      option0.toString();
      assertEquals(-2127, option0.getArgs());
  }

  //Test case number: 3
  /*
   * 108 covered goals:
   * Goal 1. org.apache.commons.cli.Option.setArgs(I)V: root-Branch
   * Goal 2. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: root-Branch
   * Goal 3. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true
   * Goal 4. org.apache.commons.cli.Option.hasArg()Z: I4 Branch 4 IFGT L256 - false
   * Goal 5. org.apache.commons.cli.Option.hasArg()Z: I8 Branch 5 IF_ICMPNE L256 - true
   * Goal 6. org.apache.commons.cli.Option.hasArgs()Z: I5 Branch 8 IF_ICMPGT L339 - false
   * Goal 7. org.apache.commons.cli.Option.hasArgs()Z: I9 Branch 9 IF_ICMPNE L339 - true
   * Goal 8. org.apache.commons.cli.Option.toString()Ljava/lang/String;: I19 Branch 22 IFNULL L555 - true
   * Goal 9. org.apache.commons.cli.Option.toString()Ljava/lang/String;: I39 Branch 23 IFEQ L562 - true
   * Goal 10. org.apache.commons.cli.Option.toString()Ljava/lang/String;: I51 Branch 24 IFEQ L566 - true
   * Goal 11. org.apache.commons.cli.Option.toString()Ljava/lang/String;: I71 Branch 25 IFNULL L573 - true
   * Goal 12. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: root-Branch in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 13. Branch org.apache.commons.cli.Option.setArgs(I)V: root-Branch in context: org.apache.commons.cli.Option:setArgs(I)V
   * Goal 14. Branch org.apache.commons.cli.Option.toString()Ljava/lang/String;: I19 Branch 22 IFNULL L555 - true in context: org.apache.commons.cli.Option:toString()Ljava/lang/String;
   * Goal 15. Branch org.apache.commons.cli.Option.toString()Ljava/lang/String;: I39 Branch 23 IFEQ L562 - true in context: org.apache.commons.cli.Option:toString()Ljava/lang/String;
   * Goal 16. Branch org.apache.commons.cli.Option.toString()Ljava/lang/String;: I51 Branch 24 IFEQ L566 - true in context: org.apache.commons.cli.Option:toString()Ljava/lang/String;
   * Goal 17. Branch org.apache.commons.cli.Option.toString()Ljava/lang/String;: I71 Branch 25 IFNULL L573 - true in context: org.apache.commons.cli.Option:toString()Ljava/lang/String;
   * Goal 18. [Output]: org.apache.commons.cli.Option.toString()Ljava/lang/String;:NonEmptyString
   * Goal 19. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: Line 91
   * Goal 20. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 21. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 22. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 23. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 24. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 25. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 26. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 27. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 28. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 29. org.apache.commons.cli.Option.hasArg()Z: Line 256
   * Goal 30. org.apache.commons.cli.Option.hasArgs()Z: Line 339
   * Goal 31. org.apache.commons.cli.Option.setArgs(I)V: Line 349
   * Goal 32. org.apache.commons.cli.Option.setArgs(I)V: Line 350
   * Goal 33. org.apache.commons.cli.Option.toString()Ljava/lang/String;: Line 551
   * Goal 34. org.apache.commons.cli.Option.toString()Ljava/lang/String;: Line 553
   * Goal 35. org.apache.commons.cli.Option.toString()Ljava/lang/String;: Line 555
   * Goal 36. org.apache.commons.cli.Option.toString()Ljava/lang/String;: Line 560
   * Goal 37. org.apache.commons.cli.Option.toString()Ljava/lang/String;: Line 562
   * Goal 38. org.apache.commons.cli.Option.toString()Ljava/lang/String;: Line 566
   * Goal 39. org.apache.commons.cli.Option.toString()Ljava/lang/String;: Line 571
   * Goal 40. org.apache.commons.cli.Option.toString()Ljava/lang/String;: Line 573
   * Goal 41. org.apache.commons.cli.Option.toString()Ljava/lang/String;: Line 578
   * Goal 42. org.apache.commons.cli.Option.toString()Ljava/lang/String;: Line 580
   * Goal 43. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 44. [METHOD] org.apache.commons.cli.Option.setArgs(I)V
   * Goal 45. [METHOD] org.apache.commons.cli.Option.toString()Ljava/lang/String;
   * Goal 46. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 47. [METHODNOEX] org.apache.commons.cli.Option.setArgs(I)V
   * Goal 48. [METHODNOEX] org.apache.commons.cli.Option.toString()Ljava/lang/String;
   * Goal 49. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 50. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 51. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 52. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 53. Weak Mutation 5: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> longOpt
   * Goal 54. Weak Mutation 7: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> longOpt
   * Goal 55. Weak Mutation 8: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> description
   * Goal 56. Weak Mutation 9: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> opt
   * Goal 57. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 58. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 59. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 60. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 61. Weak Mutation 16: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> longOpt
   * Goal 62. Weak Mutation 26: org.apache.commons.cli.Option.hasArg()Z:256 - ReplaceVariable numberOfArgs -> UNINITIALIZED
   * Goal 63. Weak Mutation 27: org.apache.commons.cli.Option.hasArg()Z:256 - ReplaceVariable numberOfArgs -> UNLIMITED_VALUES
   * Goal 64. Weak Mutation 28: org.apache.commons.cli.Option.hasArg()Z:256 - InsertUnaryOp Negation
   * Goal 65. Weak Mutation 29: org.apache.commons.cli.Option.hasArg()Z:256 - InsertUnaryOp +1
   * Goal 66. Weak Mutation 30: org.apache.commons.cli.Option.hasArg()Z:256 - InsertUnaryOp -1
   * Goal 67. Weak Mutation 33: org.apache.commons.cli.Option.hasArg()Z:256 - ReplaceComparisonOperator > -> >=
   * Goal 68. Weak Mutation 34: org.apache.commons.cli.Option.hasArg()Z:256 - ReplaceVariable numberOfArgs -> UNINITIALIZED
   * Goal 69. Weak Mutation 35: org.apache.commons.cli.Option.hasArg()Z:256 - ReplaceVariable numberOfArgs -> UNLIMITED_VALUES
   * Goal 70. Weak Mutation 36: org.apache.commons.cli.Option.hasArg()Z:256 - InsertUnaryOp Negation
   * Goal 71. Weak Mutation 37: org.apache.commons.cli.Option.hasArg()Z:256 - InsertUnaryOp +1
   * Goal 72. Weak Mutation 38: org.apache.commons.cli.Option.hasArg()Z:256 - InsertUnaryOp -1
   * Goal 73. Weak Mutation 39: org.apache.commons.cli.Option.hasArg()Z:256 - ReplaceConstant - -2 -> 0
   * Goal 74. Weak Mutation 40: org.apache.commons.cli.Option.hasArg()Z:256 - ReplaceConstant - -2 -> 1
   * Goal 75. Weak Mutation 41: org.apache.commons.cli.Option.hasArg()Z:256 - ReplaceConstant - -2 -> -1
   * Goal 76. Weak Mutation 42: org.apache.commons.cli.Option.hasArg()Z:256 - ReplaceConstant - -2 -> -3
   * Goal 77. Weak Mutation 44: org.apache.commons.cli.Option.hasArg()Z:256 - ReplaceComparisonOperator != -> <
   * Goal 78. Weak Mutation 47: org.apache.commons.cli.Option.hasArg()Z:256 - ReplaceConstant - 0 -> 1
   * Goal 79. Weak Mutation 58: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceVariable numberOfArgs -> UNINITIALIZED
   * Goal 80. Weak Mutation 59: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceVariable numberOfArgs -> UNLIMITED_VALUES
   * Goal 81. Weak Mutation 60: org.apache.commons.cli.Option.hasArgs()Z:339 - InsertUnaryOp Negation
   * Goal 82. Weak Mutation 61: org.apache.commons.cli.Option.hasArgs()Z:339 - InsertUnaryOp +1
   * Goal 83. Weak Mutation 62: org.apache.commons.cli.Option.hasArgs()Z:339 - InsertUnaryOp -1
   * Goal 84. Weak Mutation 63: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceConstant - 1 -> 0
   * Goal 85. Weak Mutation 65: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceVariable numberOfArgs -> UNINITIALIZED
   * Goal 86. Weak Mutation 66: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceVariable numberOfArgs -> UNLIMITED_VALUES
   * Goal 87. Weak Mutation 67: org.apache.commons.cli.Option.hasArgs()Z:339 - InsertUnaryOp Negation
   * Goal 88. Weak Mutation 68: org.apache.commons.cli.Option.hasArgs()Z:339 - InsertUnaryOp +1
   * Goal 89. Weak Mutation 69: org.apache.commons.cli.Option.hasArgs()Z:339 - InsertUnaryOp -1
   * Goal 90. Weak Mutation 70: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceConstant - -2 -> 0
   * Goal 91. Weak Mutation 71: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceConstant - -2 -> 1
   * Goal 92. Weak Mutation 72: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceConstant - -2 -> -1
   * Goal 93. Weak Mutation 73: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceConstant - -2 -> -3
   * Goal 94. Weak Mutation 75: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceComparisonOperator != -> <
   * Goal 95. Weak Mutation 78: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceConstant - 0 -> 1
   * Goal 96. Weak Mutation 79: org.apache.commons.cli.Option.setArgs(I)V:349 - ReplaceVariable num -> UNINITIALIZED
   * Goal 97. Weak Mutation 80: org.apache.commons.cli.Option.setArgs(I)V:349 - ReplaceVariable num -> UNLIMITED_VALUES
   * Goal 98. Weak Mutation 81: org.apache.commons.cli.Option.setArgs(I)V:349 - InsertUnaryOp Negation of num
   * Goal 99. Weak Mutation 82: org.apache.commons.cli.Option.setArgs(I)V:349 - InsertUnaryOp IINC 1 num
   * Goal 100. Weak Mutation 83: org.apache.commons.cli.Option.setArgs(I)V:349 - InsertUnaryOp IINC -1 num
   * Goal 101. Weak Mutation 185: org.apache.commons.cli.Option.toString()Ljava/lang/String;:551 - ReplaceConstant - [ option:  -> 
   * Goal 102. Weak Mutation 186: org.apache.commons.cli.Option.toString()Ljava/lang/String;:555 - ReplaceComparisonOperator = null -> != null
   * Goal 103. Weak Mutation 188: org.apache.commons.cli.Option.toString()Ljava/lang/String;:560 - ReplaceConstant -   -> 
   * Goal 104. Weak Mutation 189: org.apache.commons.cli.Option.toString()Ljava/lang/String;:562 - ReplaceComparisonOperator == -> !=
   * Goal 105. Weak Mutation 191: org.apache.commons.cli.Option.toString()Ljava/lang/String;:566 - ReplaceComparisonOperator == -> !=
   * Goal 106. Weak Mutation 193: org.apache.commons.cli.Option.toString()Ljava/lang/String;:571 - ReplaceConstant -  ::  -> 
   * Goal 107. Weak Mutation 194: org.apache.commons.cli.Option.toString()Ljava/lang/String;:573 - ReplaceComparisonOperator = null -> != null
   * Goal 108. Weak Mutation 196: org.apache.commons.cli.Option.toString()Ljava/lang/String;:578 - ReplaceConstant -  ] -> 
   */

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Option option0 = new Option("", "");
      assertEquals(-1, option0.getArgs());
      
      option0.setArgs(0);
      String string0 = option0.toString();
      assertEquals("[ option:   ::  ]", string0);
  }

  //Test case number: 4
  /*
   * 44 covered goals:
   * Goal 1. org.apache.commons.cli.Option.setRequired(Z)V: root-Branch
   * Goal 2. org.apache.commons.cli.Option.isRequired()Z: root-Branch
   * Goal 3. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - false
   * Goal 4. Branch org.apache.commons.cli.Option.setRequired(Z)V: root-Branch in context: org.apache.commons.cli.Option:setRequired(Z)V
   * Goal 5. Branch org.apache.commons.cli.Option.isRequired()Z: root-Branch in context: org.apache.commons.cli.Option:isRequired()Z
   * Goal 6. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - false in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 7. [Output]: org.apache.commons.cli.Option.isRequired()Z:True
   * Goal 8. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 9. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 10. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 11. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 12. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 13. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 14. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 15. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 131
   * Goal 16. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 17. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 18. org.apache.commons.cli.Option.isRequired()Z: Line 287
   * Goal 19. org.apache.commons.cli.Option.setRequired(Z)V: Line 297
   * Goal 20. org.apache.commons.cli.Option.setRequired(Z)V: Line 298
   * Goal 21. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 22. [METHOD] org.apache.commons.cli.Option.isRequired()Z
   * Goal 23. [METHOD] org.apache.commons.cli.Option.setRequired(Z)V
   * Goal 24. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 25. [METHODNOEX] org.apache.commons.cli.Option.isRequired()Z
   * Goal 26. [METHODNOEX] org.apache.commons.cli.Option.setRequired(Z)V
   * Goal 27. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 28. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 29. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 30. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 31. Weak Mutation 4: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> description
   * Goal 32. Weak Mutation 6: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> description
   * Goal 33. Weak Mutation 8: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> description
   * Goal 34. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 35. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 36. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 37. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 38. Weak Mutation 14: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:131 - ReplaceConstant - 1 -> 0
   * Goal 39. Weak Mutation 15: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> opt
   * Goal 40. Weak Mutation 16: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> longOpt
   * Goal 41. Weak Mutation 48: org.apache.commons.cli.Option.isRequired()Z:287 - InsertUnaryOp Negation
   * Goal 42. Weak Mutation 49: org.apache.commons.cli.Option.setRequired(Z)V:297 - InsertUnaryOp Negation of required
   * Goal 43. Weak Mutation 50: org.apache.commons.cli.Option.setRequired(Z)V:297 - InsertUnaryOp IINC 1 required
   * Goal 44. Weak Mutation 51: org.apache.commons.cli.Option.setRequired(Z)V:297 - InsertUnaryOp IINC -1 required
   */

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Option option0 = new Option("", "", true, "NO_ARGS_ALLOWED");
      option0.setRequired(true);
      boolean boolean0 = option0.isRequired();
      assertTrue(boolean0);
  }

  //Test case number: 5
  /*
   * 89 covered goals:
   * Goal 1. org.apache.commons.cli.Option.setArgs(I)V: root-Branch
   * Goal 2. org.apache.commons.cli.Option.getValuesList()Ljava/util/List;: root-Branch
   * Goal 3. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: root-Branch
   * Goal 4. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true
   * Goal 5. org.apache.commons.cli.Option.hasValueSeparator()Z: I4 Branch 10 IFLE L381 - true
   * Goal 6. org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: I4 Branch 11 LOOKUPSWITCH L401 Case -1 - false
   * Goal 7. org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: I4 Branch 12 LOOKUPSWITCH L401 Default-Case - true
   * Goal 8. org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V: I4 Branch 13 IFEQ L425 - true
   * Goal 9. org.apache.commons.cli.Option.add(Ljava/lang/String;)V: I4 Branch 16 IFLE L468 - false
   * Goal 10. org.apache.commons.cli.Option.add(Ljava/lang/String;)V: I12 Branch 17 IF_ICMPLE L468 - true
   * Goal 11. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: root-Branch in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 12. Branch org.apache.commons.cli.Option.setArgs(I)V: root-Branch in context: org.apache.commons.cli.Option:setArgs(I)V
   * Goal 13. Branch org.apache.commons.cli.Option.getValuesList()Ljava/util/List;: root-Branch in context: org.apache.commons.cli.Option:getValuesList()Ljava/util/List;
   * Goal 14. Branch org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: I4 Branch 12 LOOKUPSWITCH L401 Default-Case - true in context: 
   * Goal 15. Branch org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: I4 Branch 11 LOOKUPSWITCH L401 Case -1 - false in context: 
   * Goal 16. Branch org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V: I4 Branch 13 IFEQ L425 - true in context: 
   * Goal 17. Branch org.apache.commons.cli.Option.add(Ljava/lang/String;)V: I4 Branch 16 IFLE L468 - false in context: 
   * Goal 18. Branch org.apache.commons.cli.Option.add(Ljava/lang/String;)V: I12 Branch 17 IF_ICMPLE L468 - true in context: 
   * Goal 19. [Output]: org.apache.commons.cli.Option.getValuesList()Ljava/util/List;:NonNull:java.util.List:isEmpty()Z:False
   * Goal 20. [Output]: org.apache.commons.cli.Option.getValuesList()Ljava/util/List;:NonNull:java.util.List:size()I:Positive
   * Goal 21. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: Line 91
   * Goal 22. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 23. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 24. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 25. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 26. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 27. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 28. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 29. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 30. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 31. org.apache.commons.cli.Option.add(Ljava/lang/String;)V: Line 468
   * Goal 32. org.apache.commons.cli.Option.add(Ljava/lang/String;)V: Line 474
   * Goal 33. org.apache.commons.cli.Option.add(Ljava/lang/String;)V: Line 475
   * Goal 34. org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: Line 401
   * Goal 35. org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: Line 407
   * Goal 36. org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: Line 409
   * Goal 37. org.apache.commons.cli.Option.getValuesList()Ljava/util/List;: Line 541
   * Goal 38. org.apache.commons.cli.Option.hasValueSeparator()Z: Line 381
   * Goal 39. org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V: Line 425
   * Goal 40. org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V: Line 454
   * Goal 41. org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V: Line 455
   * Goal 42. org.apache.commons.cli.Option.setArgs(I)V: Line 349
   * Goal 43. org.apache.commons.cli.Option.setArgs(I)V: Line 350
   * Goal 44. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 45. [METHOD] org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V
   * Goal 46. [METHOD] org.apache.commons.cli.Option.getValuesList()Ljava/util/List;
   * Goal 47. [METHOD] org.apache.commons.cli.Option.setArgs(I)V
   * Goal 48. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 49. [METHODNOEX] org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V
   * Goal 50. [METHODNOEX] org.apache.commons.cli.Option.getValuesList()Ljava/util/List;
   * Goal 51. [METHODNOEX] org.apache.commons.cli.Option.setArgs(I)V
   * Goal 52. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 53. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 54. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 55. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 56. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 57. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 58. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 59. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 60. Weak Mutation 79: org.apache.commons.cli.Option.setArgs(I)V:349 - ReplaceVariable num -> UNINITIALIZED
   * Goal 61. Weak Mutation 80: org.apache.commons.cli.Option.setArgs(I)V:349 - ReplaceVariable num -> UNLIMITED_VALUES
   * Goal 62. Weak Mutation 81: org.apache.commons.cli.Option.setArgs(I)V:349 - InsertUnaryOp Negation of num
   * Goal 63. Weak Mutation 82: org.apache.commons.cli.Option.setArgs(I)V:349 - InsertUnaryOp IINC 1 num
   * Goal 64. Weak Mutation 83: org.apache.commons.cli.Option.setArgs(I)V:349 - InsertUnaryOp IINC -1 num
   * Goal 65. Weak Mutation 89: org.apache.commons.cli.Option.hasValueSeparator()Z:381 - ReplaceComparisonOperator <= -> <
   * Goal 66. Weak Mutation 91: org.apache.commons.cli.Option.hasValueSeparator()Z:381 - ReplaceConstant - 0 -> 1
   * Goal 67. Weak Mutation 97: org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V:401 - ReplaceVariable numberOfArgs -> UNINITIALIZED
   * Goal 68. Weak Mutation 98: org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V:401 - ReplaceVariable numberOfArgs -> UNLIMITED_VALUES
   * Goal 69. Weak Mutation 99: org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V:401 - InsertUnaryOp Negation
   * Goal 70. Weak Mutation 100: org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V:401 - InsertUnaryOp +1
   * Goal 71. Weak Mutation 101: org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V:401 - InsertUnaryOp -1
   * Goal 72. Weak Mutation 104: org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V:425 - ReplaceComparisonOperator == -> !=
   * Goal 73. Weak Mutation 149: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - ReplaceVariable numberOfArgs -> UNINITIALIZED
   * Goal 74. Weak Mutation 150: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - ReplaceVariable numberOfArgs -> UNLIMITED_VALUES
   * Goal 75. Weak Mutation 151: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - InsertUnaryOp Negation
   * Goal 76. Weak Mutation 152: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - InsertUnaryOp +1
   * Goal 77. Weak Mutation 153: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - InsertUnaryOp -1
   * Goal 78. Weak Mutation 154: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - ReplaceComparisonOperator <= -> -1
   * Goal 79. Weak Mutation 157: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - ReplaceVariable numberOfArgs -> UNINITIALIZED
   * Goal 80. Weak Mutation 158: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - ReplaceVariable numberOfArgs -> UNLIMITED_VALUES
   * Goal 81. Weak Mutation 159: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - InsertUnaryOp Negation
   * Goal 82. Weak Mutation 160: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - InsertUnaryOp +1
   * Goal 83. Weak Mutation 161: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - InsertUnaryOp -1
   * Goal 84. Weak Mutation 162: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - ReplaceConstant - 1 -> 0
   * Goal 85. Weak Mutation 163: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - ReplaceArithmeticOperator - -> +
   * Goal 86. Weak Mutation 164: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - ReplaceArithmeticOperator - -> %
   * Goal 87. Weak Mutation 165: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - ReplaceArithmeticOperator - -> *
   * Goal 88. Weak Mutation 166: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - ReplaceArithmeticOperator - -> /
   * Goal 89. Weak Mutation 169: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - ReplaceComparisonOperator <= -> ==
   */

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Option option0 = new Option((String) null, (String) null);
      option0.setArgs(1987);
      option0.addValueForProcessing("A CloneNotSupportedException was thrown: ");
      option0.getValuesList();
      assertEquals(1987, option0.getArgs());
  }

  //Test case number: 6
  /*
   * 43 covered goals:
   * Goal 1. org.apache.commons.cli.Option.setValueSeparator(C)V: root-Branch
   * Goal 2. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: root-Branch
   * Goal 3. org.apache.commons.cli.Option.getValueSeparator()C: root-Branch
   * Goal 4. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true
   * Goal 5. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: root-Branch in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 6. Branch org.apache.commons.cli.Option.setValueSeparator(C)V: root-Branch in context: org.apache.commons.cli.Option:setValueSeparator(C)V
   * Goal 7. Branch org.apache.commons.cli.Option.getValueSeparator()C: root-Branch in context: org.apache.commons.cli.Option:getValueSeparator()C
   * Goal 8. [Output]: org.apache.commons.cli.Option.getValueSeparator()C:Digit
   * Goal 9. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: Line 91
   * Goal 10. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 11. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 12. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 13. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 14. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 15. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 16. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 17. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 18. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 19. org.apache.commons.cli.Option.getValueSeparator()C: Line 370
   * Goal 20. org.apache.commons.cli.Option.setValueSeparator(C)V: Line 360
   * Goal 21. org.apache.commons.cli.Option.setValueSeparator(C)V: Line 361
   * Goal 22. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 23. [METHOD] org.apache.commons.cli.Option.getValueSeparator()C
   * Goal 24. [METHOD] org.apache.commons.cli.Option.setValueSeparator(C)V
   * Goal 25. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 26. [METHODNOEX] org.apache.commons.cli.Option.getValueSeparator()C
   * Goal 27. [METHODNOEX] org.apache.commons.cli.Option.setValueSeparator(C)V
   * Goal 28. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 29. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 30. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 31. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 32. Weak Mutation 5: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> longOpt
   * Goal 33. Weak Mutation 7: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> longOpt
   * Goal 34. Weak Mutation 8: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> description
   * Goal 35. Weak Mutation 9: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> opt
   * Goal 36. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 37. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 38. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 39. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 40. Weak Mutation 16: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> longOpt
   * Goal 41. Weak Mutation 84: org.apache.commons.cli.Option.setValueSeparator(C)V:360 - InsertUnaryOp Negation of sep
   * Goal 42. Weak Mutation 85: org.apache.commons.cli.Option.setValueSeparator(C)V:360 - InsertUnaryOp IINC 1 sep
   * Goal 43. Weak Mutation 86: org.apache.commons.cli.Option.setValueSeparator(C)V:360 - InsertUnaryOp IINC -1 sep
   */

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Option option0 = new Option("", "");
      option0.setValueSeparator('0');
      char char0 = option0.getValueSeparator();
      assertEquals('0', char0);
  }

  //Test case number: 7
  /*
   * 43 covered goals:
   * Goal 1. org.apache.commons.cli.Option.setValueSeparator(C)V: root-Branch
   * Goal 2. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: root-Branch
   * Goal 3. org.apache.commons.cli.Option.getValueSeparator()C: root-Branch
   * Goal 4. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true
   * Goal 5. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: root-Branch in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 6. Branch org.apache.commons.cli.Option.setValueSeparator(C)V: root-Branch in context: org.apache.commons.cli.Option:setValueSeparator(C)V
   * Goal 7. Branch org.apache.commons.cli.Option.getValueSeparator()C: root-Branch in context: org.apache.commons.cli.Option:getValueSeparator()C
   * Goal 8. [Output]: org.apache.commons.cli.Option.getValueSeparator()C:AlphabeticChar
   * Goal 9. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: Line 91
   * Goal 10. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 11. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 12. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 13. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 14. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 15. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 16. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 17. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 18. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 19. org.apache.commons.cli.Option.getValueSeparator()C: Line 370
   * Goal 20. org.apache.commons.cli.Option.setValueSeparator(C)V: Line 360
   * Goal 21. org.apache.commons.cli.Option.setValueSeparator(C)V: Line 361
   * Goal 22. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 23. [METHOD] org.apache.commons.cli.Option.getValueSeparator()C
   * Goal 24. [METHOD] org.apache.commons.cli.Option.setValueSeparator(C)V
   * Goal 25. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 26. [METHODNOEX] org.apache.commons.cli.Option.getValueSeparator()C
   * Goal 27. [METHODNOEX] org.apache.commons.cli.Option.setValueSeparator(C)V
   * Goal 28. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 29. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 30. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 31. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 32. Weak Mutation 5: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> longOpt
   * Goal 33. Weak Mutation 7: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> longOpt
   * Goal 34. Weak Mutation 8: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> description
   * Goal 35. Weak Mutation 9: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> opt
   * Goal 36. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 37. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 38. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 39. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 40. Weak Mutation 16: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> longOpt
   * Goal 41. Weak Mutation 84: org.apache.commons.cli.Option.setValueSeparator(C)V:360 - InsertUnaryOp Negation of sep
   * Goal 42. Weak Mutation 85: org.apache.commons.cli.Option.setValueSeparator(C)V:360 - InsertUnaryOp IINC 1 sep
   * Goal 43. Weak Mutation 86: org.apache.commons.cli.Option.setValueSeparator(C)V:360 - InsertUnaryOp IINC -1 sep
   */

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Option option0 = new Option("", "");
      option0.setValueSeparator('x');
      char char0 = option0.getValueSeparator();
      assertEquals('x', char0);
  }

  //Test case number: 8
  /*
   * 46 covered goals:
   * Goal 1. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: root-Branch
   * Goal 2. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true
   * Goal 3. org.apache.commons.cli.Option.getValue()Ljava/lang/String;: I4 Branch 18 IFEQ L486 - false
   * Goal 4. org.apache.commons.cli.Option.getValue(Ljava/lang/String;)Ljava/lang/String;: I8 Branch 20 IFNULL L520 - true
   * Goal 5. org.apache.commons.cli.Option.hasNoValues()Z: I5 Branch 26 IFLE L590 - false
   * Goal 6. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: root-Branch in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 7. Branch org.apache.commons.cli.Option.getValue(Ljava/lang/String;)Ljava/lang/String;: I8 Branch 20 IFNULL L520 - true in context: org.apache.commons.cli.Option:getValue(Ljava/lang/String;)Ljava/lang/String;
   * Goal 8. Branch org.apache.commons.cli.Option.hasNoValues()Z: I5 Branch 26 IFLE L590 - false in context: 
   * Goal 9. [Output]: org.apache.commons.cli.Option.getValue(Ljava/lang/String;)Ljava/lang/String;:NonEmptyString
   * Goal 10. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: Line 91
   * Goal 11. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 12. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 13. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 14. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 15. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 16. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 17. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 18. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 19. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 20. org.apache.commons.cli.Option.getValue()Ljava/lang/String;: Line 486
   * Goal 21. org.apache.commons.cli.Option.getValue(Ljava/lang/String;)Ljava/lang/String;: Line 518
   * Goal 22. org.apache.commons.cli.Option.getValue(Ljava/lang/String;)Ljava/lang/String;: Line 520
   * Goal 23. org.apache.commons.cli.Option.hasNoValues()Z: Line 590
   * Goal 24. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 25. [METHOD] org.apache.commons.cli.Option.getValue(Ljava/lang/String;)Ljava/lang/String;
   * Goal 26. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 27. [METHODNOEX] org.apache.commons.cli.Option.getValue(Ljava/lang/String;)Ljava/lang/String;
   * Goal 28. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 29. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 30. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 31. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 32. Weak Mutation 5: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> longOpt
   * Goal 33. Weak Mutation 7: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> longOpt
   * Goal 34. Weak Mutation 8: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> description
   * Goal 35. Weak Mutation 9: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> opt
   * Goal 36. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 37. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 38. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 39. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 40. Weak Mutation 16: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> longOpt
   * Goal 41. Weak Mutation 172: org.apache.commons.cli.Option.getValue()Ljava/lang/String;:486 - ReplaceComparisonOperator == -> !=
   * Goal 42. Weak Mutation 180: org.apache.commons.cli.Option.getValue(Ljava/lang/String;)Ljava/lang/String;:520 - ReplaceVariable value -> defaultValue
   * Goal 43. Weak Mutation 181: org.apache.commons.cli.Option.getValue(Ljava/lang/String;)Ljava/lang/String;:520 - ReplaceComparisonOperator = null -> != null
   * Goal 44. Weak Mutation 183: org.apache.commons.cli.Option.getValue(Ljava/lang/String;)Ljava/lang/String;:520 - ReplaceVariable defaultValue -> value
   * Goal 45. Weak Mutation 197: org.apache.commons.cli.Option.hasNoValues()Z:590 - ReplaceComparisonOperator <= -> -1
   * Goal 46. Weak Mutation 200: org.apache.commons.cli.Option.hasNoValues()Z:590 - ReplaceConstant - 1 -> 0
   */

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Option option0 = new Option("", "");
      String string0 = option0.getValue("1goe~|`t5");
      assertEquals(-1, option0.getArgs());
      assertFalse(option0.hasLongOpt());
      assertEquals("arg", option0.getArgName());
      assertNotNull(string0);
  }

  //Test case number: 9
  /*
   * 91 covered goals:
   * Goal 1. org.apache.commons.cli.Option.setArgs(I)V: root-Branch
   * Goal 2. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: root-Branch
   * Goal 3. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true
   * Goal 4. org.apache.commons.cli.Option.hasValueSeparator()Z: I4 Branch 10 IFLE L381 - true
   * Goal 5. org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: I4 Branch 11 LOOKUPSWITCH L401 Case -1 - false
   * Goal 6. org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: I4 Branch 12 LOOKUPSWITCH L401 Default-Case - true
   * Goal 7. org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V: I4 Branch 13 IFEQ L425 - true
   * Goal 8. org.apache.commons.cli.Option.add(Ljava/lang/String;)V: I4 Branch 16 IFLE L468 - true
   * Goal 9. org.apache.commons.cli.Option.getValue(I)Ljava/lang/String;: I4 Branch 19 IFEQ L503 - true
   * Goal 10. org.apache.commons.cli.Option.hasNoValues()Z: I5 Branch 26 IFLE L590 - true
   * Goal 11. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: root-Branch in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 12. Branch org.apache.commons.cli.Option.setArgs(I)V: root-Branch in context: org.apache.commons.cli.Option:setArgs(I)V
   * Goal 13. Branch org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: I4 Branch 12 LOOKUPSWITCH L401 Default-Case - true in context: 
   * Goal 14. Branch org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: I4 Branch 11 LOOKUPSWITCH L401 Case -1 - false in context: 
   * Goal 15. Branch org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V: I4 Branch 13 IFEQ L425 - true in context: 
   * Goal 16. Branch org.apache.commons.cli.Option.add(Ljava/lang/String;)V: I4 Branch 16 IFLE L468 - true in context: 
   * Goal 17. Branch org.apache.commons.cli.Option.getValue(I)Ljava/lang/String;: I4 Branch 19 IFEQ L503 - true in context: org.apache.commons.cli.Option:getValue(I)Ljava/lang/String;
   * Goal 18. Branch org.apache.commons.cli.Option.hasNoValues()Z: I5 Branch 26 IFLE L590 - true in context: 
   * Goal 19. [Output]: org.apache.commons.cli.Option.getValue(I)Ljava/lang/String;:NonEmptyString
   * Goal 20. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: Line 91
   * Goal 21. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 22. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 23. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 24. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 25. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 26. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 27. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 28. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 29. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 30. org.apache.commons.cli.Option.add(Ljava/lang/String;)V: Line 468
   * Goal 31. org.apache.commons.cli.Option.add(Ljava/lang/String;)V: Line 474
   * Goal 32. org.apache.commons.cli.Option.add(Ljava/lang/String;)V: Line 475
   * Goal 33. org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: Line 401
   * Goal 34. org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: Line 407
   * Goal 35. org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: Line 409
   * Goal 36. org.apache.commons.cli.Option.getValue(I)Ljava/lang/String;: Line 503
   * Goal 37. org.apache.commons.cli.Option.hasNoValues()Z: Line 590
   * Goal 38. org.apache.commons.cli.Option.hasValueSeparator()Z: Line 381
   * Goal 39. org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V: Line 425
   * Goal 40. org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V: Line 454
   * Goal 41. org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V: Line 455
   * Goal 42. org.apache.commons.cli.Option.setArgs(I)V: Line 349
   * Goal 43. org.apache.commons.cli.Option.setArgs(I)V: Line 350
   * Goal 44. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 45. [METHOD] org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V
   * Goal 46. [METHOD] org.apache.commons.cli.Option.getValue(I)Ljava/lang/String;
   * Goal 47. [METHOD] org.apache.commons.cli.Option.setArgs(I)V
   * Goal 48. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 49. [METHODNOEX] org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V
   * Goal 50. [METHODNOEX] org.apache.commons.cli.Option.getValue(I)Ljava/lang/String;
   * Goal 51. [METHODNOEX] org.apache.commons.cli.Option.setArgs(I)V
   * Goal 52. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 53. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 54. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 55. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 56. Weak Mutation 5: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> longOpt
   * Goal 57. Weak Mutation 7: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> longOpt
   * Goal 58. Weak Mutation 8: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> description
   * Goal 59. Weak Mutation 9: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> opt
   * Goal 60. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 61. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 62. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 63. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 64. Weak Mutation 16: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> longOpt
   * Goal 65. Weak Mutation 79: org.apache.commons.cli.Option.setArgs(I)V:349 - ReplaceVariable num -> UNINITIALIZED
   * Goal 66. Weak Mutation 80: org.apache.commons.cli.Option.setArgs(I)V:349 - ReplaceVariable num -> UNLIMITED_VALUES
   * Goal 67. Weak Mutation 81: org.apache.commons.cli.Option.setArgs(I)V:349 - InsertUnaryOp Negation of num
   * Goal 68. Weak Mutation 82: org.apache.commons.cli.Option.setArgs(I)V:349 - InsertUnaryOp IINC 1 num
   * Goal 69. Weak Mutation 83: org.apache.commons.cli.Option.setArgs(I)V:349 - InsertUnaryOp IINC -1 num
   * Goal 70. Weak Mutation 89: org.apache.commons.cli.Option.hasValueSeparator()Z:381 - ReplaceComparisonOperator <= -> <
   * Goal 71. Weak Mutation 91: org.apache.commons.cli.Option.hasValueSeparator()Z:381 - ReplaceConstant - 0 -> 1
   * Goal 72. Weak Mutation 97: org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V:401 - ReplaceVariable numberOfArgs -> UNINITIALIZED
   * Goal 73. Weak Mutation 98: org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V:401 - ReplaceVariable numberOfArgs -> UNLIMITED_VALUES
   * Goal 74. Weak Mutation 99: org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V:401 - InsertUnaryOp Negation
   * Goal 75. Weak Mutation 100: org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V:401 - InsertUnaryOp +1
   * Goal 76. Weak Mutation 101: org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V:401 - InsertUnaryOp -1
   * Goal 77. Weak Mutation 104: org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V:425 - ReplaceComparisonOperator == -> !=
   * Goal 78. Weak Mutation 149: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - ReplaceVariable numberOfArgs -> UNINITIALIZED
   * Goal 79. Weak Mutation 150: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - ReplaceVariable numberOfArgs -> UNLIMITED_VALUES
   * Goal 80. Weak Mutation 151: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - InsertUnaryOp Negation
   * Goal 81. Weak Mutation 152: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - InsertUnaryOp +1
   * Goal 82. Weak Mutation 153: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - InsertUnaryOp -1
   * Goal 83. Weak Mutation 156: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - ReplaceComparisonOperator <= -> <
   * Goal 84. Weak Mutation 174: org.apache.commons.cli.Option.getValue(I)Ljava/lang/String;:503 - ReplaceComparisonOperator == -> !=
   * Goal 85. Weak Mutation 175: org.apache.commons.cli.Option.getValue(I)Ljava/lang/String;:503 - ReplaceVariable index -> UNINITIALIZED
   * Goal 86. Weak Mutation 176: org.apache.commons.cli.Option.getValue(I)Ljava/lang/String;:503 - ReplaceVariable index -> UNLIMITED_VALUES
   * Goal 87. Weak Mutation 177: org.apache.commons.cli.Option.getValue(I)Ljava/lang/String;:503 - InsertUnaryOp Negation of index
   * Goal 88. Weak Mutation 178: org.apache.commons.cli.Option.getValue(I)Ljava/lang/String;:503 - InsertUnaryOp IINC 1 index
   * Goal 89. Weak Mutation 179: org.apache.commons.cli.Option.getValue(I)Ljava/lang/String;:503 - InsertUnaryOp IINC -1 index
   * Goal 90. Weak Mutation 198: org.apache.commons.cli.Option.hasNoValues()Z:590 - ReplaceComparisonOperator <= -> ==
   * Goal 91. Weak Mutation 201: org.apache.commons.cli.Option.hasNoValues()Z:590 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Option option0 = new Option("", "");
      assertEquals(-1, option0.getArgs());
      
      option0.setArgs(0);
      option0.addValueForProcessing("<HsYz");
      option0.getValue(0);
      assertFalse(option0.hasValueSeparator());
  }

  //Test case number: 10
  /*
   * 82 covered goals:
   * Goal 1. org.apache.commons.cli.Option.setArgs(I)V: root-Branch
   * Goal 2. org.apache.commons.cli.Option.<init>(Ljava/lang/String;ZLjava/lang/String;)V: root-Branch
   * Goal 3. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true
   * Goal 4. org.apache.commons.cli.Option.hasValueSeparator()Z: I4 Branch 10 IFLE L381 - true
   * Goal 5. org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: I4 Branch 11 LOOKUPSWITCH L401 Case -1 - false
   * Goal 6. org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: I4 Branch 12 LOOKUPSWITCH L401 Default-Case - true
   * Goal 7. org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V: I4 Branch 13 IFEQ L425 - true
   * Goal 8. org.apache.commons.cli.Option.add(Ljava/lang/String;)V: I4 Branch 16 IFLE L468 - true
   * Goal 9. org.apache.commons.cli.Option.getValue()Ljava/lang/String;: I4 Branch 18 IFEQ L486 - true
   * Goal 10. org.apache.commons.cli.Option.hasNoValues()Z: I5 Branch 26 IFLE L590 - true
   * Goal 11. Branch org.apache.commons.cli.Option.setArgs(I)V: root-Branch in context: org.apache.commons.cli.Option:setArgs(I)V
   * Goal 12. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;ZLjava/lang/String;)V: root-Branch in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 13. Branch org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: I4 Branch 12 LOOKUPSWITCH L401 Default-Case - true in context: 
   * Goal 14. Branch org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: I4 Branch 11 LOOKUPSWITCH L401 Case -1 - false in context: 
   * Goal 15. Branch org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V: I4 Branch 13 IFEQ L425 - true in context: 
   * Goal 16. Branch org.apache.commons.cli.Option.add(Ljava/lang/String;)V: I4 Branch 16 IFLE L468 - true in context: 
   * Goal 17. Branch org.apache.commons.cli.Option.getValue()Ljava/lang/String;: I4 Branch 18 IFEQ L486 - true in context: org.apache.commons.cli.Option:getValue()Ljava/lang/String;
   * Goal 18. Branch org.apache.commons.cli.Option.hasNoValues()Z: I5 Branch 26 IFLE L590 - true in context: 
   * Goal 19. [Output]: org.apache.commons.cli.Option.getValue()Ljava/lang/String;:NonEmptyString
   * Goal 20. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 21. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 22. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 23. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 24. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 25. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 26. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 27. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 28. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 29. org.apache.commons.cli.Option.<init>(Ljava/lang/String;ZLjava/lang/String;)V: Line 106
   * Goal 30. org.apache.commons.cli.Option.add(Ljava/lang/String;)V: Line 468
   * Goal 31. org.apache.commons.cli.Option.add(Ljava/lang/String;)V: Line 474
   * Goal 32. org.apache.commons.cli.Option.add(Ljava/lang/String;)V: Line 475
   * Goal 33. org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: Line 401
   * Goal 34. org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: Line 407
   * Goal 35. org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: Line 409
   * Goal 36. org.apache.commons.cli.Option.getValue()Ljava/lang/String;: Line 486
   * Goal 37. org.apache.commons.cli.Option.hasNoValues()Z: Line 590
   * Goal 38. org.apache.commons.cli.Option.hasValueSeparator()Z: Line 381
   * Goal 39. org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V: Line 425
   * Goal 40. org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V: Line 454
   * Goal 41. org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V: Line 455
   * Goal 42. org.apache.commons.cli.Option.setArgs(I)V: Line 349
   * Goal 43. org.apache.commons.cli.Option.setArgs(I)V: Line 350
   * Goal 44. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 45. [METHOD] org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V
   * Goal 46. [METHOD] org.apache.commons.cli.Option.getValue()Ljava/lang/String;
   * Goal 47. [METHOD] org.apache.commons.cli.Option.setArgs(I)V
   * Goal 48. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 49. [METHODNOEX] org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V
   * Goal 50. [METHODNOEX] org.apache.commons.cli.Option.getValue()Ljava/lang/String;
   * Goal 51. [METHODNOEX] org.apache.commons.cli.Option.setArgs(I)V
   * Goal 52. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 53. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 54. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 55. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 56. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 57. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 58. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 59. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 60. Weak Mutation 79: org.apache.commons.cli.Option.setArgs(I)V:349 - ReplaceVariable num -> UNINITIALIZED
   * Goal 61. Weak Mutation 80: org.apache.commons.cli.Option.setArgs(I)V:349 - ReplaceVariable num -> UNLIMITED_VALUES
   * Goal 62. Weak Mutation 81: org.apache.commons.cli.Option.setArgs(I)V:349 - InsertUnaryOp Negation of num
   * Goal 63. Weak Mutation 82: org.apache.commons.cli.Option.setArgs(I)V:349 - InsertUnaryOp IINC 1 num
   * Goal 64. Weak Mutation 83: org.apache.commons.cli.Option.setArgs(I)V:349 - InsertUnaryOp IINC -1 num
   * Goal 65. Weak Mutation 89: org.apache.commons.cli.Option.hasValueSeparator()Z:381 - ReplaceComparisonOperator <= -> <
   * Goal 66. Weak Mutation 91: org.apache.commons.cli.Option.hasValueSeparator()Z:381 - ReplaceConstant - 0 -> 1
   * Goal 67. Weak Mutation 97: org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V:401 - ReplaceVariable numberOfArgs -> UNINITIALIZED
   * Goal 68. Weak Mutation 98: org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V:401 - ReplaceVariable numberOfArgs -> UNLIMITED_VALUES
   * Goal 69. Weak Mutation 99: org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V:401 - InsertUnaryOp Negation
   * Goal 70. Weak Mutation 100: org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V:401 - InsertUnaryOp +1
   * Goal 71. Weak Mutation 101: org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V:401 - InsertUnaryOp -1
   * Goal 72. Weak Mutation 104: org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V:425 - ReplaceComparisonOperator == -> !=
   * Goal 73. Weak Mutation 149: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - ReplaceVariable numberOfArgs -> UNINITIALIZED
   * Goal 74. Weak Mutation 150: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - ReplaceVariable numberOfArgs -> UNLIMITED_VALUES
   * Goal 75. Weak Mutation 151: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - InsertUnaryOp Negation
   * Goal 76. Weak Mutation 152: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - InsertUnaryOp +1
   * Goal 77. Weak Mutation 153: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - InsertUnaryOp -1
   * Goal 78. Weak Mutation 155: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - ReplaceComparisonOperator <= -> ==
   * Goal 79. Weak Mutation 172: org.apache.commons.cli.Option.getValue()Ljava/lang/String;:486 - ReplaceComparisonOperator == -> !=
   * Goal 80. Weak Mutation 173: org.apache.commons.cli.Option.getValue()Ljava/lang/String;:486 - ReplaceConstant - 0 -> 1
   * Goal 81. Weak Mutation 198: org.apache.commons.cli.Option.hasNoValues()Z:590 - ReplaceComparisonOperator <= -> ==
   * Goal 82. Weak Mutation 201: org.apache.commons.cli.Option.hasNoValues()Z:590 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Option option0 = new Option((String) null, false, (String) null);
      option0.setArgs((-1796));
      option0.addValueForProcessing("f.btgB<=SO_Nc5yR`");
      option0.getValue();
      assertEquals(-1796, option0.getArgs());
  }

  //Test case number: 11
  /*
   * 43 covered goals:
   * Goal 1. org.apache.commons.cli.Option.setType(Ljava/lang/Object;)V: root-Branch
   * Goal 2. org.apache.commons.cli.Option.getType()Ljava/lang/Object;: root-Branch
   * Goal 3. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - false
   * Goal 4. Branch org.apache.commons.cli.Option.getType()Ljava/lang/Object;: root-Branch in context: org.apache.commons.cli.Option:getType()Ljava/lang/Object;
   * Goal 5. Branch org.apache.commons.cli.Option.setType(Ljava/lang/Object;)V: root-Branch in context: org.apache.commons.cli.Option:setType(Ljava/lang/Object;)V
   * Goal 6. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - false in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 7. [Output]: org.apache.commons.cli.Option.getType()Ljava/lang/Object;:NonNull
   * Goal 8. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 9. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 10. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 11. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 12. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 13. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 14. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 15. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 131
   * Goal 16. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 17. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 18. org.apache.commons.cli.Option.getType()Ljava/lang/Object;: Line 187
   * Goal 19. org.apache.commons.cli.Option.setType(Ljava/lang/Object;)V: Line 197
   * Goal 20. org.apache.commons.cli.Option.setType(Ljava/lang/Object;)V: Line 198
   * Goal 21. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 22. [METHOD] org.apache.commons.cli.Option.getType()Ljava/lang/Object;
   * Goal 23. [METHOD] org.apache.commons.cli.Option.setType(Ljava/lang/Object;)V
   * Goal 24. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 25. [METHODNOEX] org.apache.commons.cli.Option.getType()Ljava/lang/Object;
   * Goal 26. [METHODNOEX] org.apache.commons.cli.Option.setType(Ljava/lang/Object;)V
   * Goal 27. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 28. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 29. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 30. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 31. Weak Mutation 4: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> description
   * Goal 32. Weak Mutation 5: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> longOpt
   * Goal 33. Weak Mutation 6: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> description
   * Goal 34. Weak Mutation 7: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> longOpt
   * Goal 35. Weak Mutation 8: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> description
   * Goal 36. Weak Mutation 9: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> opt
   * Goal 37. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 38. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 39. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 40. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 41. Weak Mutation 14: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:131 - ReplaceConstant - 1 -> 0
   * Goal 42. Weak Mutation 15: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> opt
   * Goal 43. Weak Mutation 16: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> longOpt
   */

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Option option0 = new Option("", "Cannot add value, list full.", true, "");
      option0.setType("");
      option0.getType();
      assertEquals("", option0.getDescription());
      assertTrue(option0.hasArgName());
      assertTrue(option0.hasArg());
      assertEquals("", option0.getOpt());
      assertEquals("Cannot add value, list full.", option0.getLongOpt());
  }

  //Test case number: 12
  /*
   * 37 covered goals:
   * Goal 1. org.apache.commons.cli.Option.getOpt()Ljava/lang/String;: root-Branch
   * Goal 2. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - false
   * Goal 3. Branch org.apache.commons.cli.Option.getOpt()Ljava/lang/String;: root-Branch in context: org.apache.commons.cli.Option:getOpt()Ljava/lang/String;
   * Goal 4. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - false in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 5. [Output]: org.apache.commons.cli.Option.getOpt()Ljava/lang/String;:Null
   * Goal 6. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 7. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 8. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 9. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 10. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 11. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 12. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 13. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 131
   * Goal 14. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 15. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 16. org.apache.commons.cli.Option.getOpt()Ljava/lang/String;: Line 177
   * Goal 17. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 18. [METHOD] org.apache.commons.cli.Option.getOpt()Ljava/lang/String;
   * Goal 19. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 20. [METHODNOEX] org.apache.commons.cli.Option.getOpt()Ljava/lang/String;
   * Goal 21. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 22. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 23. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 24. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 25. Weak Mutation 4: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> description
   * Goal 26. Weak Mutation 5: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> longOpt
   * Goal 27. Weak Mutation 6: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> description
   * Goal 28. Weak Mutation 7: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> longOpt
   * Goal 29. Weak Mutation 8: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> description
   * Goal 30. Weak Mutation 9: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> opt
   * Goal 31. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 32. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 33. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 34. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 35. Weak Mutation 14: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:131 - ReplaceConstant - 1 -> 0
   * Goal 36. Weak Mutation 15: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> opt
   * Goal 37. Weak Mutation 16: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> longOpt
   */

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Option option0 = new Option((String) null, "Cannot add value, list full.", true, "");
      String string0 = option0.getOpt();
      assertEquals(1, option0.getArgs());
      assertEquals("Cannot add value, list full.", option0.getLongOpt());
      assertTrue(option0.hasLongOpt());
      assertTrue(option0.hasArgName());
      assertNull(string0);
      assertEquals("", option0.getDescription());
  }

  //Test case number: 13
  /*
   * 35 covered goals:
   * Goal 1. org.apache.commons.cli.Option.getOpt()Ljava/lang/String;: root-Branch
   * Goal 2. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true
   * Goal 3. Branch org.apache.commons.cli.Option.getOpt()Ljava/lang/String;: root-Branch in context: org.apache.commons.cli.Option:getOpt()Ljava/lang/String;
   * Goal 4. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 5. [Output]: org.apache.commons.cli.Option.getOpt()Ljava/lang/String;:NonEmptyString
   * Goal 6. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 7. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 8. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 9. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 10. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 11. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 12. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 13. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 14. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 15. org.apache.commons.cli.Option.getOpt()Ljava/lang/String;: Line 177
   * Goal 16. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 17. [METHOD] org.apache.commons.cli.Option.getOpt()Ljava/lang/String;
   * Goal 18. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 19. [METHODNOEX] org.apache.commons.cli.Option.getOpt()Ljava/lang/String;
   * Goal 20. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 21. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 22. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 23. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 24. Weak Mutation 4: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> description
   * Goal 25. Weak Mutation 5: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> longOpt
   * Goal 26. Weak Mutation 6: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> description
   * Goal 27. Weak Mutation 7: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> longOpt
   * Goal 28. Weak Mutation 8: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> description
   * Goal 29. Weak Mutation 9: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> opt
   * Goal 30. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 31. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 32. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 33. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 34. Weak Mutation 15: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> opt
   * Goal 35. Weak Mutation 16: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> longOpt
   */

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Option option0 = new Option("NO_ARGS_ALLOWED", "j", false, "xi.6T'v\"8E");
      String string0 = option0.getOpt();
      assertEquals("j", option0.getLongOpt());
      assertTrue(option0.hasArgName());
      assertEquals(-1, option0.getArgs());
      assertEquals("xi.6T'v\"8E", option0.getDescription());
      assertEquals("NO_ARGS_ALLOWED", string0);
  }

  //Test case number: 14
  /*
   * 34 covered goals:
   * Goal 1. org.apache.commons.cli.Option.getLongOpt()Ljava/lang/String;: root-Branch
   * Goal 2. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: root-Branch
   * Goal 3. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true
   * Goal 4. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: root-Branch in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 5. Branch org.apache.commons.cli.Option.getLongOpt()Ljava/lang/String;: root-Branch in context: org.apache.commons.cli.Option:getLongOpt()Ljava/lang/String;
   * Goal 6. [Output]: org.apache.commons.cli.Option.getLongOpt()Ljava/lang/String;:Null
   * Goal 7. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: Line 91
   * Goal 8. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 9. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 10. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 11. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 12. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 13. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 14. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 15. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 16. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 17. org.apache.commons.cli.Option.getLongOpt()Ljava/lang/String;: Line 207
   * Goal 18. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 19. [METHOD] org.apache.commons.cli.Option.getLongOpt()Ljava/lang/String;
   * Goal 20. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 21. [METHODNOEX] org.apache.commons.cli.Option.getLongOpt()Ljava/lang/String;
   * Goal 22. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 23. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 24. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 25. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 26. Weak Mutation 5: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> longOpt
   * Goal 27. Weak Mutation 7: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> longOpt
   * Goal 28. Weak Mutation 8: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> description
   * Goal 29. Weak Mutation 9: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> opt
   * Goal 30. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 31. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 32. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 33. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 34. Weak Mutation 16: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> longOpt
   */

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Option option0 = new Option("", "");
      String string0 = option0.getLongOpt();
      assertNull(string0);
      assertEquals("arg", option0.getArgName());
      assertEquals(-1, option0.getArgs());
  }

  //Test case number: 15
  /*
   * 37 covered goals:
   * Goal 1. org.apache.commons.cli.Option.getLongOpt()Ljava/lang/String;: root-Branch
   * Goal 2. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - false
   * Goal 3. Branch org.apache.commons.cli.Option.getLongOpt()Ljava/lang/String;: root-Branch in context: org.apache.commons.cli.Option:getLongOpt()Ljava/lang/String;
   * Goal 4. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - false in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 5. [Output]: org.apache.commons.cli.Option.getLongOpt()Ljava/lang/String;:NonEmptyString
   * Goal 6. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 7. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 8. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 9. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 10. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 11. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 12. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 13. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 131
   * Goal 14. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 15. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 16. org.apache.commons.cli.Option.getLongOpt()Ljava/lang/String;: Line 207
   * Goal 17. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 18. [METHOD] org.apache.commons.cli.Option.getLongOpt()Ljava/lang/String;
   * Goal 19. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 20. [METHODNOEX] org.apache.commons.cli.Option.getLongOpt()Ljava/lang/String;
   * Goal 21. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 22. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 23. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 24. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 25. Weak Mutation 4: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> description
   * Goal 26. Weak Mutation 5: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> longOpt
   * Goal 27. Weak Mutation 6: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> description
   * Goal 28. Weak Mutation 7: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> longOpt
   * Goal 29. Weak Mutation 8: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> description
   * Goal 30. Weak Mutation 9: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> opt
   * Goal 31. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 32. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 33. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 34. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 35. Weak Mutation 14: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:131 - ReplaceConstant - 1 -> 0
   * Goal 36. Weak Mutation 15: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> opt
   * Goal 37. Weak Mutation 16: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> longOpt
   */

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Option option0 = new Option("", "'3~n0?T1*g[,K", true, "");
      String string0 = option0.getLongOpt();
      assertEquals("'3~n0?T1*g[,K", string0);
      assertEquals("", option0.getOpt());
      assertEquals(1, option0.getArgs());
      assertTrue(option0.hasArgName());
      assertEquals("", option0.getDescription());
  }

  //Test case number: 16
  /*
   * 31 covered goals:
   * Goal 1. org.apache.commons.cli.Option.<init>(Ljava/lang/String;ZLjava/lang/String;)V: root-Branch
   * Goal 2. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true
   * Goal 3. org.apache.commons.cli.Option.getKey()Ljava/lang/String;: I4 Branch 2 IFNONNULL L157 - false
   * Goal 4. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;ZLjava/lang/String;)V: root-Branch in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 5. Branch org.apache.commons.cli.Option.getKey()Ljava/lang/String;: I4 Branch 2 IFNONNULL L157 - false in context: 
   * Goal 6. [Output]: org.apache.commons.cli.Option.getKey()Ljava/lang/String;:Null
   * Goal 7. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 8. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 9. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 10. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 11. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 12. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 13. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 14. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 15. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 16. org.apache.commons.cli.Option.<init>(Ljava/lang/String;ZLjava/lang/String;)V: Line 106
   * Goal 17. org.apache.commons.cli.Option.getKey()Ljava/lang/String;: Line 157
   * Goal 18. org.apache.commons.cli.Option.getKey()Ljava/lang/String;: Line 159
   * Goal 19. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 20. [METHOD] org.apache.commons.cli.Option.getKey()Ljava/lang/String;
   * Goal 21. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 22. [METHODNOEX] org.apache.commons.cli.Option.getKey()Ljava/lang/String;
   * Goal 23. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 24. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 25. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 26. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 27. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 28. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 29. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 30. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 31. Weak Mutation 18: org.apache.commons.cli.Option.getKey()Ljava/lang/String;:157 - ReplaceComparisonOperator != null -> = null
   */

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Option option0 = new Option((String) null, false, (String) null);
      option0.getKey();
      assertEquals(-1, option0.getArgs());
      assertTrue(option0.hasArgName());
  }

  //Test case number: 17
  /*
   * 39 covered goals:
   * Goal 1. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: root-Branch
   * Goal 2. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true
   * Goal 3. org.apache.commons.cli.Option.getKey()Ljava/lang/String;: I4 Branch 2 IFNONNULL L157 - true
   * Goal 4. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: root-Branch in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 5. Branch org.apache.commons.cli.Option.getKey()Ljava/lang/String;: I4 Branch 2 IFNONNULL L157 - true in context: 
   * Goal 6. [Output]: org.apache.commons.cli.Option.getKey()Ljava/lang/String;:NonEmptyString
   * Goal 7. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: Line 91
   * Goal 8. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 9. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 10. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 11. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 12. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 13. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 14. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 15. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 16. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 17. org.apache.commons.cli.Option.getKey()Ljava/lang/String;: Line 157
   * Goal 18. org.apache.commons.cli.Option.getKey()Ljava/lang/String;: Line 162
   * Goal 19. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 20. [METHOD] org.apache.commons.cli.Option.getKey()Ljava/lang/String;
   * Goal 21. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 22. [METHODNOEX] org.apache.commons.cli.Option.getKey()Ljava/lang/String;
   * Goal 23. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 24. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 25. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 26. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 27. Weak Mutation 4: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> description
   * Goal 28. Weak Mutation 5: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> longOpt
   * Goal 29. Weak Mutation 6: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> description
   * Goal 30. Weak Mutation 7: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> longOpt
   * Goal 31. Weak Mutation 8: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> description
   * Goal 32. Weak Mutation 9: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> opt
   * Goal 33. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 34. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 35. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 36. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 37. Weak Mutation 15: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> opt
   * Goal 38. Weak Mutation 16: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> longOpt
   * Goal 39. Weak Mutation 18: org.apache.commons.cli.Option.getKey()Ljava/lang/String;:157 - ReplaceComparisonOperator != null -> = null
   */

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Option option0 = new Option("NO_ARGS_ALLOWED", "tnUs");
      String string0 = option0.getKey();
      assertEquals(-1, option0.getArgs());
      assertEquals("tnUs", option0.getDescription());
      assertFalse(option0.hasLongOpt());
      assertEquals("arg", option0.getArgName());
      assertEquals("NO_ARGS_ALLOWED", string0);
      assertNotNull(string0);
  }

  //Test case number: 18
  /*
   * 36 covered goals:
   * Goal 1. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - false
   * Goal 2. org.apache.commons.cli.Option.getKey()Ljava/lang/String;: I4 Branch 2 IFNONNULL L157 - true
   * Goal 3. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - false in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 4. Branch org.apache.commons.cli.Option.getKey()Ljava/lang/String;: I4 Branch 2 IFNONNULL L157 - true in context: 
   * Goal 5. [Output]: org.apache.commons.cli.Option.getKey()Ljava/lang/String;:EmptyString
   * Goal 6. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 7. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 8. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 9. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 10. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 11. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 12. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 13. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 131
   * Goal 14. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 15. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 16. org.apache.commons.cli.Option.getKey()Ljava/lang/String;: Line 157
   * Goal 17. org.apache.commons.cli.Option.getKey()Ljava/lang/String;: Line 162
   * Goal 18. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 19. [METHOD] org.apache.commons.cli.Option.getKey()Ljava/lang/String;
   * Goal 20. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 21. [METHODNOEX] org.apache.commons.cli.Option.getKey()Ljava/lang/String;
   * Goal 22. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 23. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 24. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 25. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 26. Weak Mutation 4: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> description
   * Goal 27. Weak Mutation 6: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> description
   * Goal 28. Weak Mutation 8: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> description
   * Goal 29. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 30. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 31. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 32. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 33. Weak Mutation 14: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:131 - ReplaceConstant - 1 -> 0
   * Goal 34. Weak Mutation 15: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> opt
   * Goal 35. Weak Mutation 16: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> longOpt
   * Goal 36. Weak Mutation 18: org.apache.commons.cli.Option.getKey()Ljava/lang/String;:157 - ReplaceComparisonOperator != null -> = null
   */

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Option option0 = new Option("", "", true, "");
      option0.getKey();
      assertTrue(option0.hasArg());
      assertEquals("arg", option0.getArgName());
  }

  //Test case number: 19
  /*
   * 35 covered goals:
   * Goal 1. org.apache.commons.cli.Option.getId()I: root-Branch
   * Goal 2. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - false
   * Goal 3. org.apache.commons.cli.Option.getKey()Ljava/lang/String;: I4 Branch 2 IFNONNULL L157 - true
   * Goal 4. Branch org.apache.commons.cli.Option.getId()I: root-Branch in context: org.apache.commons.cli.Option:getId()I
   * Goal 5. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - false in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 6. Branch org.apache.commons.cli.Option.getKey()Ljava/lang/String;: I4 Branch 2 IFNONNULL L157 - true in context: 
   * Goal 7. [Output]: org.apache.commons.cli.Option.getId()I:Positive
   * Goal 8. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 9. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 10. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 11. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 12. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 13. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 14. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 15. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 131
   * Goal 16. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 17. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 18. org.apache.commons.cli.Option.getId()I: Line 146
   * Goal 19. org.apache.commons.cli.Option.getKey()Ljava/lang/String;: Line 157
   * Goal 20. org.apache.commons.cli.Option.getKey()Ljava/lang/String;: Line 162
   * Goal 21. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 22. [METHOD] org.apache.commons.cli.Option.getId()I
   * Goal 23. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 24. [METHODNOEX] org.apache.commons.cli.Option.getId()I
   * Goal 25. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 26. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 27. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 28. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 29. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 30. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 31. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 32. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 33. Weak Mutation 14: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:131 - ReplaceConstant - 1 -> 0
   * Goal 34. Weak Mutation 17: org.apache.commons.cli.Option.getId()I:146 - ReplaceConstant - 0 -> 1
   * Goal 35. Weak Mutation 18: org.apache.commons.cli.Option.getKey()Ljava/lang/String;:157 - ReplaceComparisonOperator != null -> = null
   */

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Option option0 = new Option("NO_ARGS_ALLOWED", "NO_ARGS_ALLOWED", true, "NO_ARGS_ALLOWED");
      int int0 = option0.getId();
      assertEquals(78, int0);
      assertEquals(1, option0.getArgs());
      assertEquals("arg", option0.getArgName());
  }

  //Test case number: 20
  /*
   * 29 covered goals:
   * Goal 1. org.apache.commons.cli.Option.getDescription()Ljava/lang/String;: root-Branch
   * Goal 2. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - false
   * Goal 3. Branch org.apache.commons.cli.Option.getDescription()Ljava/lang/String;: root-Branch in context: org.apache.commons.cli.Option:getDescription()Ljava/lang/String;
   * Goal 4. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - false in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 5. [Output]: org.apache.commons.cli.Option.getDescription()Ljava/lang/String;:Null
   * Goal 6. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 7. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 8. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 9. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 10. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 11. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 12. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 13. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 131
   * Goal 14. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 15. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 16. org.apache.commons.cli.Option.getDescription()Ljava/lang/String;: Line 266
   * Goal 17. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 18. [METHOD] org.apache.commons.cli.Option.getDescription()Ljava/lang/String;
   * Goal 19. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 20. [METHODNOEX] org.apache.commons.cli.Option.getDescription()Ljava/lang/String;
   * Goal 21. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 22. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 23. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 24. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 25. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 26. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 27. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 28. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 29. Weak Mutation 14: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:131 - ReplaceConstant - 1 -> 0
   */

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Option option0 = new Option((String) null, (String) null, true, (String) null);
      option0.getDescription();
      assertTrue(option0.hasArgName());
      assertTrue(option0.hasArg());
  }

  //Test case number: 21
  /*
   * 35 covered goals:
   * Goal 1. org.apache.commons.cli.Option.getDescription()Ljava/lang/String;: root-Branch
   * Goal 2. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - false
   * Goal 3. Branch org.apache.commons.cli.Option.getDescription()Ljava/lang/String;: root-Branch in context: org.apache.commons.cli.Option:getDescription()Ljava/lang/String;
   * Goal 4. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - false in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 5. [Output]: org.apache.commons.cli.Option.getDescription()Ljava/lang/String;:NonEmptyString
   * Goal 6. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 7. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 8. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 9. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 10. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 11. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 12. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 13. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 131
   * Goal 14. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 15. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 16. org.apache.commons.cli.Option.getDescription()Ljava/lang/String;: Line 266
   * Goal 17. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 18. [METHOD] org.apache.commons.cli.Option.getDescription()Ljava/lang/String;
   * Goal 19. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 20. [METHODNOEX] org.apache.commons.cli.Option.getDescription()Ljava/lang/String;
   * Goal 21. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 22. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 23. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 24. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 25. Weak Mutation 4: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> description
   * Goal 26. Weak Mutation 5: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> longOpt
   * Goal 27. Weak Mutation 6: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> description
   * Goal 28. Weak Mutation 7: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> longOpt
   * Goal 29. Weak Mutation 9: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> opt
   * Goal 30. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 31. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 32. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 33. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 34. Weak Mutation 14: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:131 - ReplaceConstant - 1 -> 0
   * Goal 35. Weak Mutation 15: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> opt
   */

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Option option0 = new Option("", "Tm9)r7", true, "Tm9)r7");
      String string0 = option0.getDescription();
      assertEquals("", option0.getOpt());
      assertEquals("Tm9)r7", option0.getLongOpt());
      assertTrue(option0.hasArg());
      assertEquals("Tm9)r7", string0);
      assertEquals("arg", option0.getArgName());
  }

  //Test case number: 22
  /*
   * 50 covered goals:
   * Goal 1. org.apache.commons.cli.Option.setArgs(I)V: root-Branch
   * Goal 2. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: root-Branch
   * Goal 3. org.apache.commons.cli.Option.getArgs()I: root-Branch
   * Goal 4. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true
   * Goal 5. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: root-Branch in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 6. Branch org.apache.commons.cli.Option.setArgs(I)V: root-Branch in context: org.apache.commons.cli.Option:setArgs(I)V
   * Goal 7. Branch org.apache.commons.cli.Option.getArgs()I: root-Branch in context: org.apache.commons.cli.Option:getArgs()I
   * Goal 8. [Output]: org.apache.commons.cli.Option.getArgs()I:Zero
   * Goal 9. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: Line 91
   * Goal 10. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 11. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 12. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 13. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 14. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 15. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 16. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 17. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 18. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 19. org.apache.commons.cli.Option.getArgs()I: Line 391
   * Goal 20. org.apache.commons.cli.Option.setArgs(I)V: Line 349
   * Goal 21. org.apache.commons.cli.Option.setArgs(I)V: Line 350
   * Goal 22. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 23. [METHOD] org.apache.commons.cli.Option.getArgs()I
   * Goal 24. [METHOD] org.apache.commons.cli.Option.setArgs(I)V
   * Goal 25. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 26. [METHODNOEX] org.apache.commons.cli.Option.getArgs()I
   * Goal 27. [METHODNOEX] org.apache.commons.cli.Option.setArgs(I)V
   * Goal 28. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 29. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 30. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 31. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 32. Weak Mutation 5: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> longOpt
   * Goal 33. Weak Mutation 7: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> longOpt
   * Goal 34. Weak Mutation 8: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> description
   * Goal 35. Weak Mutation 9: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> opt
   * Goal 36. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 37. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 38. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 39. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 40. Weak Mutation 16: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> longOpt
   * Goal 41. Weak Mutation 79: org.apache.commons.cli.Option.setArgs(I)V:349 - ReplaceVariable num -> UNINITIALIZED
   * Goal 42. Weak Mutation 80: org.apache.commons.cli.Option.setArgs(I)V:349 - ReplaceVariable num -> UNLIMITED_VALUES
   * Goal 43. Weak Mutation 81: org.apache.commons.cli.Option.setArgs(I)V:349 - InsertUnaryOp Negation of num
   * Goal 44. Weak Mutation 82: org.apache.commons.cli.Option.setArgs(I)V:349 - InsertUnaryOp IINC 1 num
   * Goal 45. Weak Mutation 83: org.apache.commons.cli.Option.setArgs(I)V:349 - InsertUnaryOp IINC -1 num
   * Goal 46. Weak Mutation 92: org.apache.commons.cli.Option.getArgs()I:391 - ReplaceVariable numberOfArgs -> UNINITIALIZED
   * Goal 47. Weak Mutation 93: org.apache.commons.cli.Option.getArgs()I:391 - ReplaceVariable numberOfArgs -> UNLIMITED_VALUES
   * Goal 48. Weak Mutation 94: org.apache.commons.cli.Option.getArgs()I:391 - InsertUnaryOp Negation
   * Goal 49. Weak Mutation 95: org.apache.commons.cli.Option.getArgs()I:391 - InsertUnaryOp +1
   * Goal 50. Weak Mutation 96: org.apache.commons.cli.Option.getArgs()I:391 - InsertUnaryOp -1
   */

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Option option0 = new Option("", "");
      assertEquals(-1, option0.getArgs());
      
      option0.setArgs(0);
      int int0 = option0.getArgs();
      assertEquals(0, int0);
  }

  //Test case number: 23
  /*
   * 42 covered goals:
   * Goal 1. org.apache.commons.cli.Option.getArgs()I: root-Branch
   * Goal 2. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - false
   * Goal 3. Branch org.apache.commons.cli.Option.getArgs()I: root-Branch in context: org.apache.commons.cli.Option:getArgs()I
   * Goal 4. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - false in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 5. [Output]: org.apache.commons.cli.Option.getArgs()I:Positive
   * Goal 6. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 7. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 8. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 9. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 10. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 11. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 12. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 13. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 131
   * Goal 14. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 15. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 16. org.apache.commons.cli.Option.getArgs()I: Line 391
   * Goal 17. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 18. [METHOD] org.apache.commons.cli.Option.getArgs()I
   * Goal 19. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 20. [METHODNOEX] org.apache.commons.cli.Option.getArgs()I
   * Goal 21. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 22. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 23. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 24. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 25. Weak Mutation 4: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> description
   * Goal 26. Weak Mutation 5: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> longOpt
   * Goal 27. Weak Mutation 6: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> description
   * Goal 28. Weak Mutation 7: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> longOpt
   * Goal 29. Weak Mutation 8: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> description
   * Goal 30. Weak Mutation 9: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> opt
   * Goal 31. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 32. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 33. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 34. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 35. Weak Mutation 14: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:131 - ReplaceConstant - 1 -> 0
   * Goal 36. Weak Mutation 15: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> opt
   * Goal 37. Weak Mutation 16: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> longOpt
   * Goal 38. Weak Mutation 92: org.apache.commons.cli.Option.getArgs()I:391 - ReplaceVariable numberOfArgs -> UNINITIALIZED
   * Goal 39. Weak Mutation 93: org.apache.commons.cli.Option.getArgs()I:391 - ReplaceVariable numberOfArgs -> UNLIMITED_VALUES
   * Goal 40. Weak Mutation 94: org.apache.commons.cli.Option.getArgs()I:391 - InsertUnaryOp Negation
   * Goal 41. Weak Mutation 95: org.apache.commons.cli.Option.getArgs()I:391 - InsertUnaryOp +1
   * Goal 42. Weak Mutation 96: org.apache.commons.cli.Option.getArgs()I:391 - InsertUnaryOp -1
   */

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Option option0 = new Option("", "Cannot add value, list full.", true, "");
      int int0 = option0.getArgs();
      assertEquals(1, int0);
      assertTrue(option0.hasArgName());
      assertEquals("", option0.getDescription());
      assertEquals("", option0.getOpt());
      assertEquals("Cannot add value, list full.", option0.getLongOpt());
  }

  //Test case number: 24
  /*
   * 35 covered goals:
   * Goal 1. org.apache.commons.cli.Option.getArgName()Ljava/lang/String;: root-Branch
   * Goal 2. org.apache.commons.cli.Option.setArgName(Ljava/lang/String;)V: root-Branch
   * Goal 3. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - false
   * Goal 4. Branch org.apache.commons.cli.Option.getArgName()Ljava/lang/String;: root-Branch in context: org.apache.commons.cli.Option:getArgName()Ljava/lang/String;
   * Goal 5. Branch org.apache.commons.cli.Option.setArgName(Ljava/lang/String;)V: root-Branch in context: org.apache.commons.cli.Option:setArgName(Ljava/lang/String;)V
   * Goal 6. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - false in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 7. [Output]: org.apache.commons.cli.Option.getArgName()Ljava/lang/String;:Null
   * Goal 8. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 9. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 10. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 11. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 12. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 13. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 14. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 15. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 131
   * Goal 16. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 17. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 18. org.apache.commons.cli.Option.getArgName()Ljava/lang/String;: Line 317
   * Goal 19. org.apache.commons.cli.Option.setArgName(Ljava/lang/String;)V: Line 307
   * Goal 20. org.apache.commons.cli.Option.setArgName(Ljava/lang/String;)V: Line 308
   * Goal 21. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 22. [METHOD] org.apache.commons.cli.Option.getArgName()Ljava/lang/String;
   * Goal 23. [METHOD] org.apache.commons.cli.Option.setArgName(Ljava/lang/String;)V
   * Goal 24. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 25. [METHODNOEX] org.apache.commons.cli.Option.getArgName()Ljava/lang/String;
   * Goal 26. [METHODNOEX] org.apache.commons.cli.Option.setArgName(Ljava/lang/String;)V
   * Goal 27. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 28. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 29. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 30. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 31. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 32. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 33. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 34. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 35. Weak Mutation 14: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:131 - ReplaceConstant - 1 -> 0
   */

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Option option0 = new Option((String) null, (String) null, true, (String) null);
      assertTrue(option0.hasArgName());
      
      option0.setArgName((String) null);
      option0.getArgName();
      assertTrue(option0.hasArg());
  }

  //Test case number: 25
  /*
   * 38 covered goals:
   * Goal 1. org.apache.commons.cli.Option.getArgName()Ljava/lang/String;: root-Branch
   * Goal 2. org.apache.commons.cli.Option.setArgName(Ljava/lang/String;)V: root-Branch
   * Goal 3. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true
   * Goal 4. Branch org.apache.commons.cli.Option.getArgName()Ljava/lang/String;: root-Branch in context: org.apache.commons.cli.Option:getArgName()Ljava/lang/String;
   * Goal 5. Branch org.apache.commons.cli.Option.setArgName(Ljava/lang/String;)V: root-Branch in context: org.apache.commons.cli.Option:setArgName(Ljava/lang/String;)V
   * Goal 6. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 7. [Output]: org.apache.commons.cli.Option.getArgName()Ljava/lang/String;:EmptyString
   * Goal 8. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 9. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 10. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 11. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 12. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 13. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 14. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 15. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 16. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 17. org.apache.commons.cli.Option.getArgName()Ljava/lang/String;: Line 317
   * Goal 18. org.apache.commons.cli.Option.setArgName(Ljava/lang/String;)V: Line 307
   * Goal 19. org.apache.commons.cli.Option.setArgName(Ljava/lang/String;)V: Line 308
   * Goal 20. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 21. [METHOD] org.apache.commons.cli.Option.getArgName()Ljava/lang/String;
   * Goal 22. [METHOD] org.apache.commons.cli.Option.setArgName(Ljava/lang/String;)V
   * Goal 23. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 24. [METHODNOEX] org.apache.commons.cli.Option.getArgName()Ljava/lang/String;
   * Goal 25. [METHODNOEX] org.apache.commons.cli.Option.setArgName(Ljava/lang/String;)V
   * Goal 26. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 27. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 28. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 29. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 30. Weak Mutation 4: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> description
   * Goal 31. Weak Mutation 6: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> description
   * Goal 32. Weak Mutation 8: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> description
   * Goal 33. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 34. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 35. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 36. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 37. Weak Mutation 15: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> opt
   * Goal 38. Weak Mutation 16: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> longOpt
   */

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Option option0 = new Option("", "", false, "1@$Bgk--$o1C");
      assertTrue(option0.hasArgName());
      
      option0.setArgName("");
      option0.getArgName();
      assertEquals(-1, option0.getArgs());
  }

  //Test case number: 26
  /*
   * 90 covered goals:
   * Goal 1. org.apache.commons.cli.Option.setArgs(I)V: root-Branch
   * Goal 2. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: root-Branch
   * Goal 3. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true
   * Goal 4. org.apache.commons.cli.Option.hasValueSeparator()Z: I4 Branch 10 IFLE L381 - true
   * Goal 5. org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: I4 Branch 11 LOOKUPSWITCH L401 Case -1 - false
   * Goal 6. org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: I4 Branch 12 LOOKUPSWITCH L401 Default-Case - true
   * Goal 7. org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V: I4 Branch 13 IFEQ L425 - true
   * Goal 8. org.apache.commons.cli.Option.add(Ljava/lang/String;)V: I4 Branch 16 IFLE L468 - true
   * Goal 9. org.apache.commons.cli.Option.getValue(I)Ljava/lang/String;: I4 Branch 19 IFEQ L503 - true
   * Goal 10. org.apache.commons.cli.Option.hasNoValues()Z: I5 Branch 26 IFLE L590 - true
   * Goal 11. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: root-Branch in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 12. Branch org.apache.commons.cli.Option.setArgs(I)V: root-Branch in context: org.apache.commons.cli.Option:setArgs(I)V
   * Goal 13. Branch org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: I4 Branch 12 LOOKUPSWITCH L401 Default-Case - true in context: 
   * Goal 14. Branch org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: I4 Branch 11 LOOKUPSWITCH L401 Case -1 - false in context: 
   * Goal 15. Branch org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V: I4 Branch 13 IFEQ L425 - true in context: 
   * Goal 16. Branch org.apache.commons.cli.Option.add(Ljava/lang/String;)V: I4 Branch 16 IFLE L468 - true in context: 
   * Goal 17. Branch org.apache.commons.cli.Option.getValue(I)Ljava/lang/String;: I4 Branch 19 IFEQ L503 - true in context: org.apache.commons.cli.Option:getValue(I)Ljava/lang/String;
   * Goal 18. Branch org.apache.commons.cli.Option.hasNoValues()Z: I5 Branch 26 IFLE L590 - true in context: 
   * Goal 19. getValue(I)Ljava/lang/String;_java.lang.IndexOutOfBoundsException_DECLARED
   * Goal 20. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: Line 91
   * Goal 21. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 22. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 23. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 24. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 25. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 26. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 27. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 28. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 29. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 30. org.apache.commons.cli.Option.add(Ljava/lang/String;)V: Line 468
   * Goal 31. org.apache.commons.cli.Option.add(Ljava/lang/String;)V: Line 474
   * Goal 32. org.apache.commons.cli.Option.add(Ljava/lang/String;)V: Line 475
   * Goal 33. org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: Line 401
   * Goal 34. org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: Line 407
   * Goal 35. org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: Line 409
   * Goal 36. org.apache.commons.cli.Option.getValue(I)Ljava/lang/String;: Line 503
   * Goal 37. org.apache.commons.cli.Option.hasNoValues()Z: Line 590
   * Goal 38. org.apache.commons.cli.Option.hasValueSeparator()Z: Line 381
   * Goal 39. org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V: Line 425
   * Goal 40. org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V: Line 454
   * Goal 41. org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V: Line 455
   * Goal 42. org.apache.commons.cli.Option.setArgs(I)V: Line 349
   * Goal 43. org.apache.commons.cli.Option.setArgs(I)V: Line 350
   * Goal 44. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 45. [METHOD] org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V
   * Goal 46. [METHOD] org.apache.commons.cli.Option.getValue(I)Ljava/lang/String;
   * Goal 47. [METHOD] org.apache.commons.cli.Option.setArgs(I)V
   * Goal 48. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 49. [METHODNOEX] org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V
   * Goal 50. [METHODNOEX] org.apache.commons.cli.Option.setArgs(I)V
   * Goal 51. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 52. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 53. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 54. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 55. Weak Mutation 5: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> longOpt
   * Goal 56. Weak Mutation 7: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> longOpt
   * Goal 57. Weak Mutation 8: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> description
   * Goal 58. Weak Mutation 9: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> opt
   * Goal 59. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 60. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 61. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 62. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 63. Weak Mutation 16: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> longOpt
   * Goal 64. Weak Mutation 79: org.apache.commons.cli.Option.setArgs(I)V:349 - ReplaceVariable num -> UNINITIALIZED
   * Goal 65. Weak Mutation 80: org.apache.commons.cli.Option.setArgs(I)V:349 - ReplaceVariable num -> UNLIMITED_VALUES
   * Goal 66. Weak Mutation 81: org.apache.commons.cli.Option.setArgs(I)V:349 - InsertUnaryOp Negation of num
   * Goal 67. Weak Mutation 82: org.apache.commons.cli.Option.setArgs(I)V:349 - InsertUnaryOp IINC 1 num
   * Goal 68. Weak Mutation 83: org.apache.commons.cli.Option.setArgs(I)V:349 - InsertUnaryOp IINC -1 num
   * Goal 69. Weak Mutation 89: org.apache.commons.cli.Option.hasValueSeparator()Z:381 - ReplaceComparisonOperator <= -> <
   * Goal 70. Weak Mutation 91: org.apache.commons.cli.Option.hasValueSeparator()Z:381 - ReplaceConstant - 0 -> 1
   * Goal 71. Weak Mutation 97: org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V:401 - ReplaceVariable numberOfArgs -> UNINITIALIZED
   * Goal 72. Weak Mutation 98: org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V:401 - ReplaceVariable numberOfArgs -> UNLIMITED_VALUES
   * Goal 73. Weak Mutation 99: org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V:401 - InsertUnaryOp Negation
   * Goal 74. Weak Mutation 100: org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V:401 - InsertUnaryOp +1
   * Goal 75. Weak Mutation 101: org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V:401 - InsertUnaryOp -1
   * Goal 76. Weak Mutation 104: org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V:425 - ReplaceComparisonOperator == -> !=
   * Goal 77. Weak Mutation 149: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - ReplaceVariable numberOfArgs -> UNINITIALIZED
   * Goal 78. Weak Mutation 150: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - ReplaceVariable numberOfArgs -> UNLIMITED_VALUES
   * Goal 79. Weak Mutation 151: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - InsertUnaryOp Negation
   * Goal 80. Weak Mutation 152: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - InsertUnaryOp +1
   * Goal 81. Weak Mutation 153: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - InsertUnaryOp -1
   * Goal 82. Weak Mutation 156: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - ReplaceComparisonOperator <= -> <
   * Goal 83. Weak Mutation 174: org.apache.commons.cli.Option.getValue(I)Ljava/lang/String;:503 - ReplaceComparisonOperator == -> !=
   * Goal 84. Weak Mutation 175: org.apache.commons.cli.Option.getValue(I)Ljava/lang/String;:503 - ReplaceVariable index -> UNINITIALIZED
   * Goal 85. Weak Mutation 176: org.apache.commons.cli.Option.getValue(I)Ljava/lang/String;:503 - ReplaceVariable index -> UNLIMITED_VALUES
   * Goal 86. Weak Mutation 177: org.apache.commons.cli.Option.getValue(I)Ljava/lang/String;:503 - InsertUnaryOp Negation of index
   * Goal 87. Weak Mutation 178: org.apache.commons.cli.Option.getValue(I)Ljava/lang/String;:503 - InsertUnaryOp IINC 1 index
   * Goal 88. Weak Mutation 179: org.apache.commons.cli.Option.getValue(I)Ljava/lang/String;:503 - InsertUnaryOp IINC -1 index
   * Goal 89. Weak Mutation 198: org.apache.commons.cli.Option.hasNoValues()Z:590 - ReplaceComparisonOperator <= -> ==
   * Goal 90. Weak Mutation 201: org.apache.commons.cli.Option.hasNoValues()Z:590 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Option option0 = new Option("", "");
      option0.setArgs(0);
      option0.addValueForProcessing("");
      try { 
        option0.getValue(105);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 105, Size: 1
         //
         assertThrownBy("java.util.ArrayList", e);
      }
  }

  //Test case number: 27
  /*
   * 90 covered goals:
   * Goal 1. org.apache.commons.cli.Option.setArgs(I)V: root-Branch
   * Goal 2. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: root-Branch
   * Goal 3. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true
   * Goal 4. org.apache.commons.cli.Option.hasValueSeparator()Z: I4 Branch 10 IFLE L381 - true
   * Goal 5. org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: I4 Branch 11 LOOKUPSWITCH L401 Case -1 - false
   * Goal 6. org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: I4 Branch 12 LOOKUPSWITCH L401 Default-Case - true
   * Goal 7. org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V: I4 Branch 13 IFEQ L425 - true
   * Goal 8. org.apache.commons.cli.Option.add(Ljava/lang/String;)V: I4 Branch 16 IFLE L468 - true
   * Goal 9. org.apache.commons.cli.Option.getValue(I)Ljava/lang/String;: I4 Branch 19 IFEQ L503 - true
   * Goal 10. org.apache.commons.cli.Option.hasNoValues()Z: I5 Branch 26 IFLE L590 - true
   * Goal 11. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: root-Branch in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 12. Branch org.apache.commons.cli.Option.setArgs(I)V: root-Branch in context: org.apache.commons.cli.Option:setArgs(I)V
   * Goal 13. Branch org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: I4 Branch 12 LOOKUPSWITCH L401 Default-Case - true in context: 
   * Goal 14. Branch org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: I4 Branch 11 LOOKUPSWITCH L401 Case -1 - false in context: 
   * Goal 15. Branch org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V: I4 Branch 13 IFEQ L425 - true in context: 
   * Goal 16. Branch org.apache.commons.cli.Option.add(Ljava/lang/String;)V: I4 Branch 16 IFLE L468 - true in context: 
   * Goal 17. Branch org.apache.commons.cli.Option.getValue(I)Ljava/lang/String;: I4 Branch 19 IFEQ L503 - true in context: org.apache.commons.cli.Option:getValue(I)Ljava/lang/String;
   * Goal 18. Branch org.apache.commons.cli.Option.hasNoValues()Z: I5 Branch 26 IFLE L590 - true in context: 
   * Goal 19. getValue(I)Ljava/lang/String;_java.lang.ArrayIndexOutOfBoundsException_DECLARED
   * Goal 20. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: Line 91
   * Goal 21. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 22. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 23. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 24. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 25. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 26. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 27. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 28. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 29. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 30. org.apache.commons.cli.Option.add(Ljava/lang/String;)V: Line 468
   * Goal 31. org.apache.commons.cli.Option.add(Ljava/lang/String;)V: Line 474
   * Goal 32. org.apache.commons.cli.Option.add(Ljava/lang/String;)V: Line 475
   * Goal 33. org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: Line 401
   * Goal 34. org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: Line 407
   * Goal 35. org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: Line 409
   * Goal 36. org.apache.commons.cli.Option.getValue(I)Ljava/lang/String;: Line 503
   * Goal 37. org.apache.commons.cli.Option.hasNoValues()Z: Line 590
   * Goal 38. org.apache.commons.cli.Option.hasValueSeparator()Z: Line 381
   * Goal 39. org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V: Line 425
   * Goal 40. org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V: Line 454
   * Goal 41. org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V: Line 455
   * Goal 42. org.apache.commons.cli.Option.setArgs(I)V: Line 349
   * Goal 43. org.apache.commons.cli.Option.setArgs(I)V: Line 350
   * Goal 44. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 45. [METHOD] org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V
   * Goal 46. [METHOD] org.apache.commons.cli.Option.getValue(I)Ljava/lang/String;
   * Goal 47. [METHOD] org.apache.commons.cli.Option.setArgs(I)V
   * Goal 48. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 49. [METHODNOEX] org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V
   * Goal 50. [METHODNOEX] org.apache.commons.cli.Option.setArgs(I)V
   * Goal 51. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 52. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 53. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 54. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 55. Weak Mutation 5: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> longOpt
   * Goal 56. Weak Mutation 7: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> longOpt
   * Goal 57. Weak Mutation 8: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> description
   * Goal 58. Weak Mutation 9: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> opt
   * Goal 59. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 60. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 61. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 62. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 63. Weak Mutation 16: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> longOpt
   * Goal 64. Weak Mutation 79: org.apache.commons.cli.Option.setArgs(I)V:349 - ReplaceVariable num -> UNINITIALIZED
   * Goal 65. Weak Mutation 80: org.apache.commons.cli.Option.setArgs(I)V:349 - ReplaceVariable num -> UNLIMITED_VALUES
   * Goal 66. Weak Mutation 81: org.apache.commons.cli.Option.setArgs(I)V:349 - InsertUnaryOp Negation of num
   * Goal 67. Weak Mutation 82: org.apache.commons.cli.Option.setArgs(I)V:349 - InsertUnaryOp IINC 1 num
   * Goal 68. Weak Mutation 83: org.apache.commons.cli.Option.setArgs(I)V:349 - InsertUnaryOp IINC -1 num
   * Goal 69. Weak Mutation 89: org.apache.commons.cli.Option.hasValueSeparator()Z:381 - ReplaceComparisonOperator <= -> <
   * Goal 70. Weak Mutation 91: org.apache.commons.cli.Option.hasValueSeparator()Z:381 - ReplaceConstant - 0 -> 1
   * Goal 71. Weak Mutation 97: org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V:401 - ReplaceVariable numberOfArgs -> UNINITIALIZED
   * Goal 72. Weak Mutation 98: org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V:401 - ReplaceVariable numberOfArgs -> UNLIMITED_VALUES
   * Goal 73. Weak Mutation 99: org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V:401 - InsertUnaryOp Negation
   * Goal 74. Weak Mutation 100: org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V:401 - InsertUnaryOp +1
   * Goal 75. Weak Mutation 101: org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V:401 - InsertUnaryOp -1
   * Goal 76. Weak Mutation 104: org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V:425 - ReplaceComparisonOperator == -> !=
   * Goal 77. Weak Mutation 149: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - ReplaceVariable numberOfArgs -> UNINITIALIZED
   * Goal 78. Weak Mutation 150: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - ReplaceVariable numberOfArgs -> UNLIMITED_VALUES
   * Goal 79. Weak Mutation 151: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - InsertUnaryOp Negation
   * Goal 80. Weak Mutation 152: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - InsertUnaryOp +1
   * Goal 81. Weak Mutation 153: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - InsertUnaryOp -1
   * Goal 82. Weak Mutation 155: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - ReplaceComparisonOperator <= -> ==
   * Goal 83. Weak Mutation 174: org.apache.commons.cli.Option.getValue(I)Ljava/lang/String;:503 - ReplaceComparisonOperator == -> !=
   * Goal 84. Weak Mutation 175: org.apache.commons.cli.Option.getValue(I)Ljava/lang/String;:503 - ReplaceVariable index -> UNINITIALIZED
   * Goal 85. Weak Mutation 176: org.apache.commons.cli.Option.getValue(I)Ljava/lang/String;:503 - ReplaceVariable index -> UNLIMITED_VALUES
   * Goal 86. Weak Mutation 177: org.apache.commons.cli.Option.getValue(I)Ljava/lang/String;:503 - InsertUnaryOp Negation of index
   * Goal 87. Weak Mutation 178: org.apache.commons.cli.Option.getValue(I)Ljava/lang/String;:503 - InsertUnaryOp IINC 1 index
   * Goal 88. Weak Mutation 179: org.apache.commons.cli.Option.getValue(I)Ljava/lang/String;:503 - InsertUnaryOp IINC -1 index
   * Goal 89. Weak Mutation 198: org.apache.commons.cli.Option.hasNoValues()Z:590 - ReplaceComparisonOperator <= -> ==
   * Goal 90. Weak Mutation 201: org.apache.commons.cli.Option.hasNoValues()Z:590 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Option option0 = new Option("", "");
      option0.setArgs((-2127));
      option0.addValueForProcessing("");
      try { 
        option0.getValue((-2127));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 28
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.cli.Option.<init>(Ljava/lang/String;ZLjava/lang/String;)V: root-Branch
   * Goal 2. <init>(Ljava/lang/String;ZLjava/lang/String;)V_java.lang.IllegalArgumentException_DECLARED
   * Goal 3. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 4. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 5. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 6. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 7. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 8. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 9. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 10. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 11. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 12. Weak Mutation 4: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> description
   * Goal 13. Weak Mutation 5: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> longOpt
   */

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Option option0 = null;
      try {
        option0 = new Option(" ]", true, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // opt contains illegal character value ' '
         //
         assertThrownBy("org.apache.commons.cli.OptionValidator", e);
      }
  }

  //Test case number: 29
  /*
   * 12 covered goals:
   * Goal 1. <init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V_java.lang.IllegalArgumentException_DECLARED
   * Goal 2. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 3. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 4. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 5. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 6. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 7. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 8. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 9. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 10. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 11. Weak Mutation 4: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> description
   * Goal 12. Weak Mutation 5: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> longOpt
   */

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Option option0 = null;
      try {
        option0 = new Option("|*HE", "1@$Bgk--$o1C", true, ")h7h5c?e[)dBl");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // opt contains illegal character value '|'
         //
         assertThrownBy("org.apache.commons.cli.OptionValidator", e);
      }
  }

  //Test case number: 30
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: root-Branch
   * Goal 2. <init>(Ljava/lang/String;Ljava/lang/String;)V_java.lang.IllegalArgumentException_DECLARED
   * Goal 3. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 4. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 5. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 6. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 7. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 8. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 9. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 10. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 11. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 12. Weak Mutation 4: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> description
   * Goal 13. Weak Mutation 5: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> longOpt
   */

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Option option0 = null;
      try {
        option0 = new Option("|fhsuUdEzXd(a$6qJ@!", "X");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // opt contains illegal character value '|'
         //
         assertThrownBy("org.apache.commons.cli.OptionValidator", e);
      }
  }

  //Test case number: 31
  /*
   * 88 covered goals:
   * Goal 1. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - false
   * Goal 2. org.apache.commons.cli.Option.hasValueSeparator()Z: I4 Branch 10 IFLE L381 - true
   * Goal 3. org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: I4 Branch 11 LOOKUPSWITCH L401 Case -1 - false
   * Goal 4. org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: I4 Branch 12 LOOKUPSWITCH L401 Default-Case - true
   * Goal 5. org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V: I4 Branch 13 IFEQ L425 - true
   * Goal 6. org.apache.commons.cli.Option.add(Ljava/lang/String;)V: I4 Branch 16 IFLE L468 - false
   * Goal 7. org.apache.commons.cli.Option.add(Ljava/lang/String;)V: I12 Branch 17 IF_ICMPLE L468 - true
   * Goal 8. org.apache.commons.cli.Option.getValue()Ljava/lang/String;: I4 Branch 18 IFEQ L486 - true
   * Goal 9. org.apache.commons.cli.Option.hasNoValues()Z: I5 Branch 26 IFLE L590 - true
   * Goal 10. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - false in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 11. Branch org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: I4 Branch 12 LOOKUPSWITCH L401 Default-Case - true in context: 
   * Goal 12. Branch org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: I4 Branch 11 LOOKUPSWITCH L401 Case -1 - false in context: 
   * Goal 13. Branch org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V: I4 Branch 13 IFEQ L425 - true in context: 
   * Goal 14. Branch org.apache.commons.cli.Option.add(Ljava/lang/String;)V: I4 Branch 16 IFLE L468 - false in context: 
   * Goal 15. Branch org.apache.commons.cli.Option.add(Ljava/lang/String;)V: I12 Branch 17 IF_ICMPLE L468 - true in context: 
   * Goal 16. Branch org.apache.commons.cli.Option.getValue()Ljava/lang/String;: I4 Branch 18 IFEQ L486 - true in context: org.apache.commons.cli.Option:getValue()Ljava/lang/String;
   * Goal 17. Branch org.apache.commons.cli.Option.hasNoValues()Z: I5 Branch 26 IFLE L590 - true in context: 
   * Goal 18. [Output]: org.apache.commons.cli.Option.getValue()Ljava/lang/String;:EmptyString
   * Goal 19. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 20. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 21. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 22. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 23. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 24. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 25. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 26. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 131
   * Goal 27. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 28. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 29. org.apache.commons.cli.Option.add(Ljava/lang/String;)V: Line 468
   * Goal 30. org.apache.commons.cli.Option.add(Ljava/lang/String;)V: Line 474
   * Goal 31. org.apache.commons.cli.Option.add(Ljava/lang/String;)V: Line 475
   * Goal 32. org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: Line 401
   * Goal 33. org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: Line 407
   * Goal 34. org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: Line 409
   * Goal 35. org.apache.commons.cli.Option.getValue()Ljava/lang/String;: Line 486
   * Goal 36. org.apache.commons.cli.Option.hasNoValues()Z: Line 590
   * Goal 37. org.apache.commons.cli.Option.hasValueSeparator()Z: Line 381
   * Goal 38. org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V: Line 425
   * Goal 39. org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V: Line 454
   * Goal 40. org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V: Line 455
   * Goal 41. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 42. [METHOD] org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V
   * Goal 43. [METHOD] org.apache.commons.cli.Option.getValue()Ljava/lang/String;
   * Goal 44. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 45. [METHODNOEX] org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V
   * Goal 46. [METHODNOEX] org.apache.commons.cli.Option.getValue()Ljava/lang/String;
   * Goal 47. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 48. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 49. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 50. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 51. Weak Mutation 4: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> description
   * Goal 52. Weak Mutation 6: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> description
   * Goal 53. Weak Mutation 8: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> description
   * Goal 54. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 55. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 56. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 57. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 58. Weak Mutation 14: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:131 - ReplaceConstant - 1 -> 0
   * Goal 59. Weak Mutation 15: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> opt
   * Goal 60. Weak Mutation 16: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> longOpt
   * Goal 61. Weak Mutation 89: org.apache.commons.cli.Option.hasValueSeparator()Z:381 - ReplaceComparisonOperator <= -> <
   * Goal 62. Weak Mutation 91: org.apache.commons.cli.Option.hasValueSeparator()Z:381 - ReplaceConstant - 0 -> 1
   * Goal 63. Weak Mutation 97: org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V:401 - ReplaceVariable numberOfArgs -> UNINITIALIZED
   * Goal 64. Weak Mutation 98: org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V:401 - ReplaceVariable numberOfArgs -> UNLIMITED_VALUES
   * Goal 65. Weak Mutation 99: org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V:401 - InsertUnaryOp Negation
   * Goal 66. Weak Mutation 100: org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V:401 - InsertUnaryOp +1
   * Goal 67. Weak Mutation 101: org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V:401 - InsertUnaryOp -1
   * Goal 68. Weak Mutation 104: org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V:425 - ReplaceComparisonOperator == -> !=
   * Goal 69. Weak Mutation 149: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - ReplaceVariable numberOfArgs -> UNINITIALIZED
   * Goal 70. Weak Mutation 150: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - ReplaceVariable numberOfArgs -> UNLIMITED_VALUES
   * Goal 71. Weak Mutation 151: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - InsertUnaryOp Negation
   * Goal 72. Weak Mutation 152: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - InsertUnaryOp +1
   * Goal 73. Weak Mutation 153: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - InsertUnaryOp -1
   * Goal 74. Weak Mutation 154: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - ReplaceComparisonOperator <= -> -1
   * Goal 75. Weak Mutation 157: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - ReplaceVariable numberOfArgs -> UNINITIALIZED
   * Goal 76. Weak Mutation 158: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - ReplaceVariable numberOfArgs -> UNLIMITED_VALUES
   * Goal 77. Weak Mutation 159: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - InsertUnaryOp Negation
   * Goal 78. Weak Mutation 160: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - InsertUnaryOp +1
   * Goal 79. Weak Mutation 161: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - InsertUnaryOp -1
   * Goal 80. Weak Mutation 162: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - ReplaceConstant - 1 -> 0
   * Goal 81. Weak Mutation 163: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - ReplaceArithmeticOperator - -> +
   * Goal 82. Weak Mutation 165: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - ReplaceArithmeticOperator - -> *
   * Goal 83. Weak Mutation 166: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - ReplaceArithmeticOperator - -> /
   * Goal 84. Weak Mutation 168: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - ReplaceComparisonOperator <= -> <
   * Goal 85. Weak Mutation 172: org.apache.commons.cli.Option.getValue()Ljava/lang/String;:486 - ReplaceComparisonOperator == -> !=
   * Goal 86. Weak Mutation 173: org.apache.commons.cli.Option.getValue()Ljava/lang/String;:486 - ReplaceConstant - 0 -> 1
   * Goal 87. Weak Mutation 198: org.apache.commons.cli.Option.hasNoValues()Z:590 - ReplaceComparisonOperator <= -> ==
   * Goal 88. Weak Mutation 201: org.apache.commons.cli.Option.hasNoValues()Z:590 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Option option0 = new Option("", "", true, "");
      option0.addValueForProcessing("");
      String string0 = option0.getValue();
      assertNotNull(string0);
      assertEquals(1, option0.getArgs());
      assertFalse(option0.hasValueSeparator());
      assertEquals("arg", option0.getArgName());
  }

  //Test case number: 32
  /*
   * 35 covered goals:
   * Goal 1. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - false
   * Goal 2. org.apache.commons.cli.Option.getValue()Ljava/lang/String;: I4 Branch 18 IFEQ L486 - false
   * Goal 3. org.apache.commons.cli.Option.hasNoValues()Z: I5 Branch 26 IFLE L590 - false
   * Goal 4. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - false in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 5. Branch org.apache.commons.cli.Option.getValue()Ljava/lang/String;: I4 Branch 18 IFEQ L486 - false in context: org.apache.commons.cli.Option:getValue()Ljava/lang/String;
   * Goal 6. Branch org.apache.commons.cli.Option.hasNoValues()Z: I5 Branch 26 IFLE L590 - false in context: 
   * Goal 7. [Output]: org.apache.commons.cli.Option.getValue()Ljava/lang/String;:Null
   * Goal 8. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 9. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 10. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 11. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 12. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 13. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 14. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 15. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 131
   * Goal 16. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 17. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 18. org.apache.commons.cli.Option.getValue()Ljava/lang/String;: Line 486
   * Goal 19. org.apache.commons.cli.Option.hasNoValues()Z: Line 590
   * Goal 20. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 21. [METHOD] org.apache.commons.cli.Option.getValue()Ljava/lang/String;
   * Goal 22. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 23. [METHODNOEX] org.apache.commons.cli.Option.getValue()Ljava/lang/String;
   * Goal 24. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 25. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 26. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 27. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 28. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 29. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 30. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 31. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 32. Weak Mutation 14: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:131 - ReplaceConstant - 1 -> 0
   * Goal 33. Weak Mutation 172: org.apache.commons.cli.Option.getValue()Ljava/lang/String;:486 - ReplaceComparisonOperator == -> !=
   * Goal 34. Weak Mutation 197: org.apache.commons.cli.Option.hasNoValues()Z:590 - ReplaceComparisonOperator <= -> -1
   * Goal 35. Weak Mutation 200: org.apache.commons.cli.Option.hasNoValues()Z:590 - ReplaceConstant - 1 -> 0
   */

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Option option0 = new Option((String) null, (String) null, true, (String) null);
      option0.getValue();
      assertEquals("arg", option0.getArgName());
      assertTrue(option0.hasArg());
  }

  //Test case number: 33
  /*
   * 39 covered goals:
   * Goal 1. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: root-Branch
   * Goal 2. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true
   * Goal 3. org.apache.commons.cli.Option.hasValueSeparator()Z: I4 Branch 10 IFLE L381 - true
   * Goal 4. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: root-Branch in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 5. Branch org.apache.commons.cli.Option.hasValueSeparator()Z: I4 Branch 10 IFLE L381 - true in context: org.apache.commons.cli.Option:hasValueSeparator()Z
   * Goal 6. [Output]: org.apache.commons.cli.Option.hasValueSeparator()Z:False
   * Goal 7. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: Line 91
   * Goal 8. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 9. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 10. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 11. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 12. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 13. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 14. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 15. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 16. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 17. org.apache.commons.cli.Option.hasValueSeparator()Z: Line 381
   * Goal 18. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 19. [METHOD] org.apache.commons.cli.Option.hasValueSeparator()Z
   * Goal 20. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 21. [METHODNOEX] org.apache.commons.cli.Option.hasValueSeparator()Z
   * Goal 22. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 23. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 24. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 25. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 26. Weak Mutation 4: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> description
   * Goal 27. Weak Mutation 5: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> longOpt
   * Goal 28. Weak Mutation 6: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> description
   * Goal 29. Weak Mutation 7: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> longOpt
   * Goal 30. Weak Mutation 8: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> description
   * Goal 31. Weak Mutation 9: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> opt
   * Goal 32. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 33. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 34. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 35. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 36. Weak Mutation 15: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> opt
   * Goal 37. Weak Mutation 16: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> longOpt
   * Goal 38. Weak Mutation 89: org.apache.commons.cli.Option.hasValueSeparator()Z:381 - ReplaceComparisonOperator <= -> <
   * Goal 39. Weak Mutation 91: org.apache.commons.cli.Option.hasValueSeparator()Z:381 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Option option0 = new Option("", "");
      boolean boolean0 = option0.hasValueSeparator();
      assertFalse(option0.hasLongOpt());
      assertTrue(option0.hasArgName());
      assertEquals(-1, option0.getArgs());
      assertFalse(boolean0);
  }

  //Test case number: 34
  /*
   * 51 covered goals:
   * Goal 1. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: root-Branch
   * Goal 2. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true
   * Goal 3. org.apache.commons.cli.Option.hasArgs()Z: I5 Branch 8 IF_ICMPGT L339 - false
   * Goal 4. org.apache.commons.cli.Option.hasArgs()Z: I9 Branch 9 IF_ICMPNE L339 - true
   * Goal 5. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: root-Branch in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 6. Branch org.apache.commons.cli.Option.hasArgs()Z: I9 Branch 9 IF_ICMPNE L339 - true in context: org.apache.commons.cli.Option:hasArgs()Z
   * Goal 7. Branch org.apache.commons.cli.Option.hasArgs()Z: I5 Branch 8 IF_ICMPGT L339 - false in context: org.apache.commons.cli.Option:hasArgs()Z
   * Goal 8. [Output]: org.apache.commons.cli.Option.hasArgs()Z:False
   * Goal 9. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: Line 91
   * Goal 10. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 11. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 12. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 13. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 14. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 15. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 16. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 17. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 18. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 19. org.apache.commons.cli.Option.hasArgs()Z: Line 339
   * Goal 20. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 21. [METHOD] org.apache.commons.cli.Option.hasArgs()Z
   * Goal 22. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 23. [METHODNOEX] org.apache.commons.cli.Option.hasArgs()Z
   * Goal 24. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 25. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 26. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 27. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 28. Weak Mutation 5: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> longOpt
   * Goal 29. Weak Mutation 7: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> longOpt
   * Goal 30. Weak Mutation 8: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> description
   * Goal 31. Weak Mutation 9: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> opt
   * Goal 32. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 33. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 34. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 35. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 36. Weak Mutation 16: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> longOpt
   * Goal 37. Weak Mutation 59: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceVariable numberOfArgs -> UNLIMITED_VALUES
   * Goal 38. Weak Mutation 60: org.apache.commons.cli.Option.hasArgs()Z:339 - InsertUnaryOp Negation
   * Goal 39. Weak Mutation 61: org.apache.commons.cli.Option.hasArgs()Z:339 - InsertUnaryOp +1
   * Goal 40. Weak Mutation 62: org.apache.commons.cli.Option.hasArgs()Z:339 - InsertUnaryOp -1
   * Goal 41. Weak Mutation 63: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceConstant - 1 -> 0
   * Goal 42. Weak Mutation 66: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceVariable numberOfArgs -> UNLIMITED_VALUES
   * Goal 43. Weak Mutation 67: org.apache.commons.cli.Option.hasArgs()Z:339 - InsertUnaryOp Negation
   * Goal 44. Weak Mutation 68: org.apache.commons.cli.Option.hasArgs()Z:339 - InsertUnaryOp +1
   * Goal 45. Weak Mutation 69: org.apache.commons.cli.Option.hasArgs()Z:339 - InsertUnaryOp -1
   * Goal 46. Weak Mutation 70: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceConstant - -2 -> 0
   * Goal 47. Weak Mutation 71: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceConstant - -2 -> 1
   * Goal 48. Weak Mutation 72: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceConstant - -2 -> -1
   * Goal 49. Weak Mutation 73: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceConstant - -2 -> -3
   * Goal 50. Weak Mutation 75: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceComparisonOperator != -> <
   * Goal 51. Weak Mutation 78: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Option option0 = new Option("", "");
      boolean boolean0 = option0.hasArgs();
      assertFalse(option0.hasLongOpt());
      assertFalse(boolean0);
      assertEquals(-1, option0.getArgs());
      assertTrue(option0.hasArgName());
  }

  //Test case number: 35
  /*
   * 54 covered goals:
   * Goal 1. org.apache.commons.cli.Option.setArgs(I)V: root-Branch
   * Goal 2. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true
   * Goal 3. org.apache.commons.cli.Option.hasArgs()Z: I5 Branch 8 IF_ICMPGT L339 - true
   * Goal 4. Branch org.apache.commons.cli.Option.setArgs(I)V: root-Branch in context: org.apache.commons.cli.Option:setArgs(I)V
   * Goal 5. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 6. Branch org.apache.commons.cli.Option.hasArgs()Z: I5 Branch 8 IF_ICMPGT L339 - true in context: org.apache.commons.cli.Option:hasArgs()Z
   * Goal 7. [Output]: org.apache.commons.cli.Option.hasArgs()Z:True
   * Goal 8. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 9. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 10. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 11. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 12. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 13. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 14. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 15. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 16. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 17. org.apache.commons.cli.Option.hasArgs()Z: Line 339
   * Goal 18. org.apache.commons.cli.Option.setArgs(I)V: Line 349
   * Goal 19. org.apache.commons.cli.Option.setArgs(I)V: Line 350
   * Goal 20. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 21. [METHOD] org.apache.commons.cli.Option.hasArgs()Z
   * Goal 22. [METHOD] org.apache.commons.cli.Option.setArgs(I)V
   * Goal 23. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 24. [METHODNOEX] org.apache.commons.cli.Option.hasArgs()Z
   * Goal 25. [METHODNOEX] org.apache.commons.cli.Option.setArgs(I)V
   * Goal 26. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 27. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 28. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 29. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 30. Weak Mutation 4: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> description
   * Goal 31. Weak Mutation 5: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> longOpt
   * Goal 32. Weak Mutation 6: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> description
   * Goal 33. Weak Mutation 7: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> longOpt
   * Goal 34. Weak Mutation 8: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> description
   * Goal 35. Weak Mutation 9: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> opt
   * Goal 36. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 37. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 38. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 39. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 40. Weak Mutation 15: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> opt
   * Goal 41. Weak Mutation 16: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> longOpt
   * Goal 42. Weak Mutation 58: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceVariable numberOfArgs -> UNINITIALIZED
   * Goal 43. Weak Mutation 59: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceVariable numberOfArgs -> UNLIMITED_VALUES
   * Goal 44. Weak Mutation 60: org.apache.commons.cli.Option.hasArgs()Z:339 - InsertUnaryOp Negation
   * Goal 45. Weak Mutation 61: org.apache.commons.cli.Option.hasArgs()Z:339 - InsertUnaryOp +1
   * Goal 46. Weak Mutation 62: org.apache.commons.cli.Option.hasArgs()Z:339 - InsertUnaryOp -1
   * Goal 47. Weak Mutation 63: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceConstant - 1 -> 0
   * Goal 48. Weak Mutation 64: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceComparisonOperator > -> ==
   * Goal 49. Weak Mutation 77: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceConstant - 1 -> 0
   * Goal 50. Weak Mutation 79: org.apache.commons.cli.Option.setArgs(I)V:349 - ReplaceVariable num -> UNINITIALIZED
   * Goal 51. Weak Mutation 80: org.apache.commons.cli.Option.setArgs(I)V:349 - ReplaceVariable num -> UNLIMITED_VALUES
   * Goal 52. Weak Mutation 81: org.apache.commons.cli.Option.setArgs(I)V:349 - InsertUnaryOp Negation of num
   * Goal 53. Weak Mutation 82: org.apache.commons.cli.Option.setArgs(I)V:349 - InsertUnaryOp IINC 1 num
   * Goal 54. Weak Mutation 83: org.apache.commons.cli.Option.setArgs(I)V:349 - InsertUnaryOp IINC -1 num
   */

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Option option0 = new Option("", "", false, (String) null);
      option0.setArgs(163);
      boolean boolean0 = option0.hasArgs();
      assertEquals(163, option0.getArgs());
      assertTrue(boolean0);
  }

  //Test case number: 36
  /*
   * 46 covered goals:
   * Goal 1. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: root-Branch
   * Goal 2. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true
   * Goal 3. org.apache.commons.cli.Option.hasArg()Z: I4 Branch 4 IFGT L256 - false
   * Goal 4. org.apache.commons.cli.Option.hasArg()Z: I8 Branch 5 IF_ICMPNE L256 - true
   * Goal 5. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: root-Branch in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 6. Branch org.apache.commons.cli.Option.hasArg()Z: I4 Branch 4 IFGT L256 - false in context: org.apache.commons.cli.Option:hasArg()Z
   * Goal 7. Branch org.apache.commons.cli.Option.hasArg()Z: I8 Branch 5 IF_ICMPNE L256 - true in context: org.apache.commons.cli.Option:hasArg()Z
   * Goal 8. [Output]: org.apache.commons.cli.Option.hasArg()Z:False
   * Goal 9. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: Line 91
   * Goal 10. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 11. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 12. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 13. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 14. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 15. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 16. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 17. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 18. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 19. org.apache.commons.cli.Option.hasArg()Z: Line 256
   * Goal 20. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 21. [METHOD] org.apache.commons.cli.Option.hasArg()Z
   * Goal 22. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 23. [METHODNOEX] org.apache.commons.cli.Option.hasArg()Z
   * Goal 24. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 25. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 26. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 27. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 28. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 29. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 30. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 31. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 32. Weak Mutation 27: org.apache.commons.cli.Option.hasArg()Z:256 - ReplaceVariable numberOfArgs -> UNLIMITED_VALUES
   * Goal 33. Weak Mutation 28: org.apache.commons.cli.Option.hasArg()Z:256 - InsertUnaryOp Negation
   * Goal 34. Weak Mutation 29: org.apache.commons.cli.Option.hasArg()Z:256 - InsertUnaryOp +1
   * Goal 35. Weak Mutation 30: org.apache.commons.cli.Option.hasArg()Z:256 - InsertUnaryOp -1
   * Goal 36. Weak Mutation 32: org.apache.commons.cli.Option.hasArg()Z:256 - ReplaceComparisonOperator > -> !=
   * Goal 37. Weak Mutation 35: org.apache.commons.cli.Option.hasArg()Z:256 - ReplaceVariable numberOfArgs -> UNLIMITED_VALUES
   * Goal 38. Weak Mutation 36: org.apache.commons.cli.Option.hasArg()Z:256 - InsertUnaryOp Negation
   * Goal 39. Weak Mutation 37: org.apache.commons.cli.Option.hasArg()Z:256 - InsertUnaryOp +1
   * Goal 40. Weak Mutation 38: org.apache.commons.cli.Option.hasArg()Z:256 - InsertUnaryOp -1
   * Goal 41. Weak Mutation 39: org.apache.commons.cli.Option.hasArg()Z:256 - ReplaceConstant - -2 -> 0
   * Goal 42. Weak Mutation 40: org.apache.commons.cli.Option.hasArg()Z:256 - ReplaceConstant - -2 -> 1
   * Goal 43. Weak Mutation 41: org.apache.commons.cli.Option.hasArg()Z:256 - ReplaceConstant - -2 -> -1
   * Goal 44. Weak Mutation 42: org.apache.commons.cli.Option.hasArg()Z:256 - ReplaceConstant - -2 -> -3
   * Goal 45. Weak Mutation 44: org.apache.commons.cli.Option.hasArg()Z:256 - ReplaceComparisonOperator != -> <
   * Goal 46. Weak Mutation 47: org.apache.commons.cli.Option.hasArg()Z:256 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Option option0 = new Option((String) null, (String) null);
      boolean boolean0 = option0.hasArg();
      assertFalse(boolean0);
      assertEquals(-1, option0.getArgs());
      assertTrue(option0.hasArgName());
  }

  //Test case number: 37
  /*
   * 55 covered goals:
   * Goal 1. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - false
   * Goal 2. org.apache.commons.cli.Option.hashCode()I: I4 Branch 36 IFNULL L622 - true
   * Goal 3. org.apache.commons.cli.Option.hashCode()I: I20 Branch 37 IFNULL L623 - true
   * Goal 4. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - false in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 5. Branch org.apache.commons.cli.Option.hashCode()I: I4 Branch 36 IFNULL L622 - true in context: org.apache.commons.cli.Option:hashCode()I
   * Goal 6. Branch org.apache.commons.cli.Option.hashCode()I: I20 Branch 37 IFNULL L623 - true in context: org.apache.commons.cli.Option:hashCode()I
   * Goal 7. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 8. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 9. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 10. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 11. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 12. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 13. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 14. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 131
   * Goal 15. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 16. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 17. org.apache.commons.cli.Option.hashCode()I: Line 622
   * Goal 18. org.apache.commons.cli.Option.hashCode()I: Line 623
   * Goal 19. org.apache.commons.cli.Option.hashCode()I: Line 624
   * Goal 20. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 21. [METHOD] org.apache.commons.cli.Option.hashCode()I
   * Goal 22. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 23. [METHODNOEX] org.apache.commons.cli.Option.hashCode()I
   * Goal 24. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 25. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 26. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 27. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 28. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 29. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 30. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 31. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 32. Weak Mutation 14: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:131 - ReplaceConstant - 1 -> 0
   * Goal 33. Weak Mutation 224: org.apache.commons.cli.Option.hashCode()I:622 - ReplaceComparisonOperator = null -> != null
   * Goal 34. Weak Mutation 225: org.apache.commons.cli.Option.hashCode()I:622 - ReplaceConstant - 0 -> 1
   * Goal 35. Weak Mutation 226: org.apache.commons.cli.Option.hashCode()I:623 - ReplaceConstant - 31 -> 0
   * Goal 36. Weak Mutation 227: org.apache.commons.cli.Option.hashCode()I:623 - ReplaceConstant - 31 -> 1
   * Goal 37. Weak Mutation 228: org.apache.commons.cli.Option.hashCode()I:623 - ReplaceConstant - 31 -> -1
   * Goal 38. Weak Mutation 229: org.apache.commons.cli.Option.hashCode()I:623 - ReplaceConstant - 31 -> 30
   * Goal 39. Weak Mutation 230: org.apache.commons.cli.Option.hashCode()I:623 - ReplaceConstant - 31 -> 32
   * Goal 40. Weak Mutation 231: org.apache.commons.cli.Option.hashCode()I:623 - ReplaceVariable result -> UNINITIALIZED
   * Goal 41. Weak Mutation 232: org.apache.commons.cli.Option.hashCode()I:623 - ReplaceVariable result -> UNLIMITED_VALUES
   * Goal 42. Weak Mutation 233: org.apache.commons.cli.Option.hashCode()I:623 - InsertUnaryOp Negation of result
   * Goal 43. Weak Mutation 234: org.apache.commons.cli.Option.hashCode()I:623 - InsertUnaryOp IINC 1 result
   * Goal 44. Weak Mutation 235: org.apache.commons.cli.Option.hashCode()I:623 - InsertUnaryOp IINC -1 result
   * Goal 45. Weak Mutation 237: org.apache.commons.cli.Option.hashCode()I:623 - ReplaceArithmeticOperator * -> %
   * Goal 46. Weak Mutation 239: org.apache.commons.cli.Option.hashCode()I:623 - ReplaceArithmeticOperator * -> /
   * Goal 47. Weak Mutation 240: org.apache.commons.cli.Option.hashCode()I:623 - ReplaceComparisonOperator = null -> != null
   * Goal 48. Weak Mutation 241: org.apache.commons.cli.Option.hashCode()I:623 - ReplaceConstant - 0 -> 1
   * Goal 49. Weak Mutation 242: org.apache.commons.cli.Option.hashCode()I:623 - ReplaceArithmeticOperator + -> %
   * Goal 50. Weak Mutation 245: org.apache.commons.cli.Option.hashCode()I:623 - ReplaceArithmeticOperator + -> /
   * Goal 51. Weak Mutation 246: org.apache.commons.cli.Option.hashCode()I:624 - ReplaceVariable result -> UNINITIALIZED
   * Goal 52. Weak Mutation 247: org.apache.commons.cli.Option.hashCode()I:624 - ReplaceVariable result -> UNLIMITED_VALUES
   * Goal 53. Weak Mutation 248: org.apache.commons.cli.Option.hashCode()I:624 - InsertUnaryOp Negation of result
   * Goal 54. Weak Mutation 249: org.apache.commons.cli.Option.hashCode()I:624 - InsertUnaryOp IINC 1 result
   * Goal 55. Weak Mutation 250: org.apache.commons.cli.Option.hashCode()I:624 - InsertUnaryOp IINC -1 result
   */

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Option option0 = new Option((String) null, (String) null, true, (String) null);
      option0.hashCode();
      assertTrue(option0.hasArg());
      assertTrue(option0.hasArgName());
  }

  //Test case number: 38
  /*
   * 66 covered goals:
   * Goal 1. org.apache.commons.cli.Option.<init>(Ljava/lang/String;ZLjava/lang/String;)V: root-Branch
   * Goal 2. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - false
   * Goal 3. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I4 Branch 27 IF_ACMPNE L595 - true
   * Goal 4. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I12 Branch 28 IFNULL L599 - false
   * Goal 5. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I17 Branch 29 IF_ACMPEQ L599 - true
   * Goal 6. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I31 Branch 30 IFNULL L607 - false
   * Goal 7. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I37 Branch 31 IFGT L607 - true
   * Goal 8. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I51 Branch 33 IFNULL L611 - true
   * Goal 9. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I62 Branch 35 IFNULL L611 - false
   * Goal 10. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;ZLjava/lang/String;)V: root-Branch in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 11. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - false in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 12. Branch org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I4 Branch 27 IF_ACMPNE L595 - true in context: org.apache.commons.cli.Option:equals(Ljava/lang/Object;)Z
   * Goal 13. Branch org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I12 Branch 28 IFNULL L599 - false in context: org.apache.commons.cli.Option:equals(Ljava/lang/Object;)Z
   * Goal 14. Branch org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I17 Branch 29 IF_ACMPEQ L599 - true in context: org.apache.commons.cli.Option:equals(Ljava/lang/Object;)Z
   * Goal 15. Branch org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I31 Branch 30 IFNULL L607 - false in context: org.apache.commons.cli.Option:equals(Ljava/lang/Object;)Z
   * Goal 16. Branch org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I37 Branch 31 IFGT L607 - true in context: org.apache.commons.cli.Option:equals(Ljava/lang/Object;)Z
   * Goal 17. Branch org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I62 Branch 35 IFNULL L611 - false in context: org.apache.commons.cli.Option:equals(Ljava/lang/Object;)Z
   * Goal 18. Branch org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I51 Branch 33 IFNULL L611 - true in context: org.apache.commons.cli.Option:equals(Ljava/lang/Object;)Z
   * Goal 19. [Output]: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:False
   * Goal 20. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 21. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 22. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 23. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 24. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 25. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 26. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 27. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 131
   * Goal 28. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 29. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 30. org.apache.commons.cli.Option.<init>(Ljava/lang/String;ZLjava/lang/String;)V: Line 106
   * Goal 31. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: Line 595
   * Goal 32. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: Line 599
   * Goal 33. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: Line 604
   * Goal 34. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: Line 607
   * Goal 35. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: Line 611
   * Goal 36. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: Line 613
   * Goal 37. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 38. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 39. [METHOD] org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z
   * Goal 40. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 41. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 42. [METHODNOEX] org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z
   * Goal 43. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 44. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 45. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 46. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 47. Weak Mutation 5: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> longOpt
   * Goal 48. Weak Mutation 7: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> longOpt
   * Goal 49. Weak Mutation 8: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> description
   * Goal 50. Weak Mutation 9: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> opt
   * Goal 51. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 52. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 53. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 54. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 55. Weak Mutation 14: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:131 - ReplaceConstant - 1 -> 0
   * Goal 56. Weak Mutation 16: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> longOpt
   * Goal 57. Weak Mutation 202: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:595 - ReplaceComparisonOperator != -> ==
   * Goal 58. Weak Mutation 204: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:599 - ReplaceComparisonOperator = null -> != null
   * Goal 59. Weak Mutation 205: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:599 - ReplaceComparisonOperator == -> !=
   * Goal 60. Weak Mutation 207: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:607 - ReplaceComparisonOperator = null -> != null
   * Goal 61. Weak Mutation 208: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:607 - ReplaceVariable option -> this
   * Goal 62. Weak Mutation 209: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:607 - ReplaceComparisonOperator > -> -2
   * Goal 63. Weak Mutation 215: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:611 - ReplaceComparisonOperator = null -> != null
   * Goal 64. Weak Mutation 220: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:611 - ReplaceVariable option -> this
   * Goal 65. Weak Mutation 221: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:611 - ReplaceComparisonOperator = null -> != null
   * Goal 66. Weak Mutation 222: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:613 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Option option0 = new Option("", true, "");
      Option option1 = new Option("", "", true, "");
      boolean boolean0 = option0.equals(option1);
      assertFalse(boolean0);
      assertTrue(option1.hasArg());
      assertEquals("arg", option1.getArgName());
  }

  //Test case number: 39
  /*
   * 67 covered goals:
   * Goal 1. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: root-Branch
   * Goal 2. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true
   * Goal 3. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - false
   * Goal 4. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I4 Branch 27 IF_ACMPNE L595 - true
   * Goal 5. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I12 Branch 28 IFNULL L599 - false
   * Goal 6. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I17 Branch 29 IF_ACMPEQ L599 - true
   * Goal 7. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I31 Branch 30 IFNULL L607 - false
   * Goal 8. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I37 Branch 31 IFGT L607 - true
   * Goal 9. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I51 Branch 33 IFNULL L611 - false
   * Goal 10. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I57 Branch 34 IFGT L611 - false
   * Goal 11. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: root-Branch in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 12. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - false in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 13. Branch org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I4 Branch 27 IF_ACMPNE L595 - true in context: org.apache.commons.cli.Option:equals(Ljava/lang/Object;)Z
   * Goal 14. Branch org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I12 Branch 28 IFNULL L599 - false in context: org.apache.commons.cli.Option:equals(Ljava/lang/Object;)Z
   * Goal 15. Branch org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I17 Branch 29 IF_ACMPEQ L599 - true in context: org.apache.commons.cli.Option:equals(Ljava/lang/Object;)Z
   * Goal 16. Branch org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I31 Branch 30 IFNULL L607 - false in context: org.apache.commons.cli.Option:equals(Ljava/lang/Object;)Z
   * Goal 17. Branch org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I37 Branch 31 IFGT L607 - true in context: org.apache.commons.cli.Option:equals(Ljava/lang/Object;)Z
   * Goal 18. Branch org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I51 Branch 33 IFNULL L611 - false in context: org.apache.commons.cli.Option:equals(Ljava/lang/Object;)Z
   * Goal 19. Branch org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I57 Branch 34 IFGT L611 - false in context: org.apache.commons.cli.Option:equals(Ljava/lang/Object;)Z
   * Goal 20. [Output]: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:False
   * Goal 21. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: Line 91
   * Goal 22. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 23. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 24. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 25. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 26. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 27. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 28. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 29. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 131
   * Goal 30. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 31. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 32. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: Line 595
   * Goal 33. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: Line 599
   * Goal 34. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: Line 604
   * Goal 35. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: Line 607
   * Goal 36. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: Line 611
   * Goal 37. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: Line 613
   * Goal 38. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 39. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 40. [METHOD] org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z
   * Goal 41. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 42. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 43. [METHODNOEX] org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z
   * Goal 44. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 45. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 46. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 47. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 48. Weak Mutation 5: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> longOpt
   * Goal 49. Weak Mutation 7: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> longOpt
   * Goal 50. Weak Mutation 8: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> description
   * Goal 51. Weak Mutation 9: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> opt
   * Goal 52. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 53. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 54. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 55. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 56. Weak Mutation 14: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:131 - ReplaceConstant - 1 -> 0
   * Goal 57. Weak Mutation 16: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> longOpt
   * Goal 58. Weak Mutation 202: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:595 - ReplaceComparisonOperator != -> ==
   * Goal 59. Weak Mutation 204: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:599 - ReplaceComparisonOperator = null -> != null
   * Goal 60. Weak Mutation 205: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:599 - ReplaceComparisonOperator == -> !=
   * Goal 61. Weak Mutation 207: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:607 - ReplaceComparisonOperator = null -> != null
   * Goal 62. Weak Mutation 208: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:607 - ReplaceVariable option -> this
   * Goal 63. Weak Mutation 209: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:607 - ReplaceComparisonOperator > -> -2
   * Goal 64. Weak Mutation 215: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:611 - ReplaceComparisonOperator = null -> != null
   * Goal 65. Weak Mutation 216: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:611 - ReplaceVariable option -> this
   * Goal 66. Weak Mutation 218: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:611 - ReplaceComparisonOperator > -> !=
   * Goal 67. Weak Mutation 222: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:613 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Option option0 = new Option("", "", true, "");
      Option option1 = new Option("", "");
      boolean boolean0 = option0.equals(option1);
      assertEquals(-1, option1.getArgs());
      assertFalse(boolean0);
      assertTrue(option0.hasArg());
      assertEquals("arg", option1.getArgName());
  }

  //Test case number: 40
  /*
   * 56 covered goals:
   * Goal 1. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: root-Branch
   * Goal 2. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true
   * Goal 3. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I4 Branch 27 IF_ACMPNE L595 - false
   * Goal 4. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I12 Branch 28 IFNULL L599 - false
   * Goal 5. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I17 Branch 29 IF_ACMPEQ L599 - true
   * Goal 6. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I31 Branch 30 IFNULL L607 - true
   * Goal 7. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I42 Branch 32 IFNULL L607 - true
   * Goal 8. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I51 Branch 33 IFNULL L611 - true
   * Goal 9. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I62 Branch 35 IFNULL L611 - true
   * Goal 10. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: root-Branch in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 11. Branch org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I4 Branch 27 IF_ACMPNE L595 - false in context: org.apache.commons.cli.Option:equals(Ljava/lang/Object;)Z
   * Goal 12. Branch org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I12 Branch 28 IFNULL L599 - false in context: org.apache.commons.cli.Option:equals(Ljava/lang/Object;)Z
   * Goal 13. Branch org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I17 Branch 29 IF_ACMPEQ L599 - true in context: org.apache.commons.cli.Option:equals(Ljava/lang/Object;)Z
   * Goal 14. Branch org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I42 Branch 32 IFNULL L607 - true in context: org.apache.commons.cli.Option:equals(Ljava/lang/Object;)Z
   * Goal 15. Branch org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I31 Branch 30 IFNULL L607 - true in context: org.apache.commons.cli.Option:equals(Ljava/lang/Object;)Z
   * Goal 16. Branch org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I62 Branch 35 IFNULL L611 - true in context: org.apache.commons.cli.Option:equals(Ljava/lang/Object;)Z
   * Goal 17. Branch org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I51 Branch 33 IFNULL L611 - true in context: org.apache.commons.cli.Option:equals(Ljava/lang/Object;)Z
   * Goal 18. [Output]: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:True
   * Goal 19. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: Line 91
   * Goal 20. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 21. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 22. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 23. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 24. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 25. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 26. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 27. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 28. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 29. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: Line 595
   * Goal 30. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: Line 599
   * Goal 31. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: Line 604
   * Goal 32. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: Line 607
   * Goal 33. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: Line 611
   * Goal 34. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: Line 616
   * Goal 35. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 36. [METHOD] org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z
   * Goal 37. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 38. [METHODNOEX] org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z
   * Goal 39. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 40. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 41. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 42. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 43. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 44. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 45. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 46. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 47. Weak Mutation 202: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:595 - ReplaceComparisonOperator != -> ==
   * Goal 48. Weak Mutation 204: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:599 - ReplaceComparisonOperator = null -> != null
   * Goal 49. Weak Mutation 205: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:599 - ReplaceComparisonOperator == -> !=
   * Goal 50. Weak Mutation 207: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:607 - ReplaceComparisonOperator = null -> != null
   * Goal 51. Weak Mutation 212: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:607 - ReplaceVariable option -> this
   * Goal 52. Weak Mutation 213: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:607 - ReplaceComparisonOperator = null -> != null
   * Goal 53. Weak Mutation 215: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:611 - ReplaceComparisonOperator = null -> != null
   * Goal 54. Weak Mutation 220: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:611 - ReplaceVariable option -> this
   * Goal 55. Weak Mutation 221: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:611 - ReplaceComparisonOperator = null -> != null
   * Goal 56. Weak Mutation 223: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:616 - ReplaceConstant - 1 -> 0
   */

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Option option0 = new Option((String) null, (String) null);
      Option option1 = new Option((String) null, (String) null);
      boolean boolean0 = option0.equals(option1);
      assertTrue(option1.hasArgName());
      assertEquals(-1, option1.getArgs());
      assertTrue(boolean0);
  }

  //Test case number: 41
  /*
   * 71 covered goals:
   * Goal 1. org.apache.commons.cli.Option.clone()Ljava/lang/Object;: root-Branch
   * Goal 2. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - false
   * Goal 3. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I4 Branch 27 IF_ACMPNE L595 - false
   * Goal 4. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I12 Branch 28 IFNULL L599 - false
   * Goal 5. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I17 Branch 29 IF_ACMPEQ L599 - true
   * Goal 6. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I31 Branch 30 IFNULL L607 - false
   * Goal 7. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I37 Branch 31 IFGT L607 - true
   * Goal 8. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I51 Branch 33 IFNULL L611 - false
   * Goal 9. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I57 Branch 34 IFGT L611 - true
   * Goal 10. Branch org.apache.commons.cli.Option.clone()Ljava/lang/Object;: root-Branch in context: org.apache.commons.cli.Option:clone()Ljava/lang/Object;
   * Goal 11. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - false in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 12. Branch org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I4 Branch 27 IF_ACMPNE L595 - false in context: org.apache.commons.cli.Option:equals(Ljava/lang/Object;)Z
   * Goal 13. Branch org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I12 Branch 28 IFNULL L599 - false in context: org.apache.commons.cli.Option:equals(Ljava/lang/Object;)Z
   * Goal 14. Branch org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I17 Branch 29 IF_ACMPEQ L599 - true in context: org.apache.commons.cli.Option:equals(Ljava/lang/Object;)Z
   * Goal 15. Branch org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I31 Branch 30 IFNULL L607 - false in context: org.apache.commons.cli.Option:equals(Ljava/lang/Object;)Z
   * Goal 16. Branch org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I37 Branch 31 IFGT L607 - true in context: org.apache.commons.cli.Option:equals(Ljava/lang/Object;)Z
   * Goal 17. Branch org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I51 Branch 33 IFNULL L611 - false in context: org.apache.commons.cli.Option:equals(Ljava/lang/Object;)Z
   * Goal 18. Branch org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I57 Branch 34 IFGT L611 - true in context: org.apache.commons.cli.Option:equals(Ljava/lang/Object;)Z
   * Goal 19. [Output]: org.apache.commons.cli.Option.clone()Ljava/lang/Object;:NonNull
   * Goal 20. [Output]: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:True
   * Goal 21. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 22. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 23. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 24. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 25. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 26. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 27. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 28. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 131
   * Goal 29. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 30. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 31. org.apache.commons.cli.Option.clone()Ljava/lang/Object;: Line 641
   * Goal 32. org.apache.commons.cli.Option.clone()Ljava/lang/Object;: Line 642
   * Goal 33. org.apache.commons.cli.Option.clone()Ljava/lang/Object;: Line 643
   * Goal 34. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: Line 595
   * Goal 35. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: Line 599
   * Goal 36. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: Line 604
   * Goal 37. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: Line 607
   * Goal 38. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: Line 611
   * Goal 39. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: Line 616
   * Goal 40. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 41. [METHOD] org.apache.commons.cli.Option.clone()Ljava/lang/Object;
   * Goal 42. [METHOD] org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z
   * Goal 43. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 44. [METHODNOEX] org.apache.commons.cli.Option.clone()Ljava/lang/Object;
   * Goal 45. [METHODNOEX] org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z
   * Goal 46. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 47. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 48. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 49. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 50. Weak Mutation 4: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> description
   * Goal 51. Weak Mutation 6: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> description
   * Goal 52. Weak Mutation 8: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> description
   * Goal 53. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 54. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 55. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 56. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 57. Weak Mutation 14: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:131 - ReplaceConstant - 1 -> 0
   * Goal 58. Weak Mutation 15: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> opt
   * Goal 59. Weak Mutation 16: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> longOpt
   * Goal 60. Weak Mutation 202: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:595 - ReplaceComparisonOperator != -> ==
   * Goal 61. Weak Mutation 204: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:599 - ReplaceComparisonOperator = null -> != null
   * Goal 62. Weak Mutation 205: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:599 - ReplaceComparisonOperator == -> !=
   * Goal 63. Weak Mutation 207: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:607 - ReplaceComparisonOperator = null -> != null
   * Goal 64. Weak Mutation 208: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:607 - ReplaceVariable option -> this
   * Goal 65. Weak Mutation 209: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:607 - ReplaceComparisonOperator > -> -2
   * Goal 66. Weak Mutation 215: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:611 - ReplaceComparisonOperator = null -> != null
   * Goal 67. Weak Mutation 216: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:611 - ReplaceVariable option -> this
   * Goal 68. Weak Mutation 217: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:611 - ReplaceComparisonOperator > -> -2
   * Goal 69. Weak Mutation 223: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:616 - ReplaceConstant - 1 -> 0
   * Goal 70. Weak Mutation 251: org.apache.commons.cli.Option.clone()Ljava/lang/Object;:642 - ReplaceVariable option -> this
   * Goal 71. Weak Mutation 252: org.apache.commons.cli.Option.clone()Ljava/lang/Object;:643 - ReplaceVariable option -> this
   */

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Option option0 = new Option("", "", true, "NO_ARGS_ALLOWED");
      Option option1 = (Option)option0.clone();
      boolean boolean0 = option0.equals(option1);
      assertEquals("", option1.getLongOpt());
      assertEquals("arg", option1.getArgName());
      assertNotSame(option1, option0);
      assertTrue(boolean0);
      assertEquals("", option1.getOpt());
      assertTrue(option1.hasArg());
      assertEquals("NO_ARGS_ALLOWED", option1.getDescription());
  }

  //Test case number: 42
  /*
   * 56 covered goals:
   * Goal 1. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - false
   * Goal 2. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I4 Branch 27 IF_ACMPNE L595 - true
   * Goal 3. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I12 Branch 28 IFNULL L599 - false
   * Goal 4. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I17 Branch 29 IF_ACMPEQ L599 - true
   * Goal 5. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I31 Branch 30 IFNULL L607 - false
   * Goal 6. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I37 Branch 31 IFGT L607 - false
   * Goal 7. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - false in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 8. Branch org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I4 Branch 27 IF_ACMPNE L595 - true in context: org.apache.commons.cli.Option:equals(Ljava/lang/Object;)Z
   * Goal 9. Branch org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I12 Branch 28 IFNULL L599 - false in context: org.apache.commons.cli.Option:equals(Ljava/lang/Object;)Z
   * Goal 10. Branch org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I17 Branch 29 IF_ACMPEQ L599 - true in context: org.apache.commons.cli.Option:equals(Ljava/lang/Object;)Z
   * Goal 11. Branch org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I37 Branch 31 IFGT L607 - false in context: org.apache.commons.cli.Option:equals(Ljava/lang/Object;)Z
   * Goal 12. Branch org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I31 Branch 30 IFNULL L607 - false in context: org.apache.commons.cli.Option:equals(Ljava/lang/Object;)Z
   * Goal 13. [Output]: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:False
   * Goal 14. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 15. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 16. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 17. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 18. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 19. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 20. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 21. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 131
   * Goal 22. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 23. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 24. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: Line 595
   * Goal 25. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: Line 599
   * Goal 26. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: Line 604
   * Goal 27. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: Line 607
   * Goal 28. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: Line 609
   * Goal 29. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 30. [METHOD] org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z
   * Goal 31. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 32. [METHODNOEX] org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z
   * Goal 33. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 34. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 35. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 36. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 37. Weak Mutation 4: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> description
   * Goal 38. Weak Mutation 5: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> longOpt
   * Goal 39. Weak Mutation 6: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> description
   * Goal 40. Weak Mutation 7: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> longOpt
   * Goal 41. Weak Mutation 8: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> description
   * Goal 42. Weak Mutation 9: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> opt
   * Goal 43. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 44. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 45. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 46. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 47. Weak Mutation 14: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:131 - ReplaceConstant - 1 -> 0
   * Goal 48. Weak Mutation 15: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> opt
   * Goal 49. Weak Mutation 16: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> longOpt
   * Goal 50. Weak Mutation 202: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:595 - ReplaceComparisonOperator != -> ==
   * Goal 51. Weak Mutation 204: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:599 - ReplaceComparisonOperator = null -> != null
   * Goal 52. Weak Mutation 205: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:599 - ReplaceComparisonOperator == -> !=
   * Goal 53. Weak Mutation 207: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:607 - ReplaceComparisonOperator = null -> != null
   * Goal 54. Weak Mutation 208: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:607 - ReplaceVariable option -> this
   * Goal 55. Weak Mutation 210: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:607 - ReplaceComparisonOperator > -> !=
   * Goal 56. Weak Mutation 214: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:609 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Option option0 = new Option("", "", true, "NO_ARGS_ALLOWED");
      Option option1 = new Option((String) null, "arg", true, (String) null);
      boolean boolean0 = option0.equals(option1);
      assertTrue(option1.hasLongOpt());
      assertEquals("NO_ARGS_ALLOWED", option0.getDescription());
      assertEquals("arg", option1.getArgName());
      assertEquals("", option0.getOpt());
      assertEquals(1, option1.getArgs());
      assertFalse(boolean0);
  }

  //Test case number: 43
  /*
   * 46 covered goals:
   * Goal 1. org.apache.commons.cli.Option.getValuesList()Ljava/util/List;: root-Branch
   * Goal 2. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - false
   * Goal 3. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I4 Branch 27 IF_ACMPNE L595 - true
   * Goal 4. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I12 Branch 28 IFNULL L599 - false
   * Goal 5. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I17 Branch 29 IF_ACMPEQ L599 - false
   * Goal 6. Branch org.apache.commons.cli.Option.getValuesList()Ljava/util/List;: root-Branch in context: org.apache.commons.cli.Option:getValuesList()Ljava/util/List;
   * Goal 7. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - false in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 8. Branch org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I4 Branch 27 IF_ACMPNE L595 - true in context: org.apache.commons.cli.Option:equals(Ljava/lang/Object;)Z
   * Goal 9. Branch org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I17 Branch 29 IF_ACMPEQ L599 - false in context: org.apache.commons.cli.Option:equals(Ljava/lang/Object;)Z
   * Goal 10. Branch org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I12 Branch 28 IFNULL L599 - false in context: org.apache.commons.cli.Option:equals(Ljava/lang/Object;)Z
   * Goal 11. [Output]: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:False
   * Goal 12. [Output]: org.apache.commons.cli.Option.getValuesList()Ljava/util/List;:NonNull:java.util.List:isEmpty()Z:True
   * Goal 13. [Output]: org.apache.commons.cli.Option.getValuesList()Ljava/util/List;:NonNull:java.util.List:size()I:Zero
   * Goal 14. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 15. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 16. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 17. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 18. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 19. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 20. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 21. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 131
   * Goal 22. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 23. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 24. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: Line 595
   * Goal 25. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: Line 599
   * Goal 26. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: Line 601
   * Goal 27. org.apache.commons.cli.Option.getValuesList()Ljava/util/List;: Line 541
   * Goal 28. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 29. [METHOD] org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z
   * Goal 30. [METHOD] org.apache.commons.cli.Option.getValuesList()Ljava/util/List;
   * Goal 31. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 32. [METHODNOEX] org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z
   * Goal 33. [METHODNOEX] org.apache.commons.cli.Option.getValuesList()Ljava/util/List;
   * Goal 34. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 35. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 36. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 37. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 38. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 39. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 40. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 41. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 42. Weak Mutation 14: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:131 - ReplaceConstant - 1 -> 0
   * Goal 43. Weak Mutation 202: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:595 - ReplaceComparisonOperator != -> ==
   * Goal 44. Weak Mutation 204: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:599 - ReplaceComparisonOperator = null -> != null
   * Goal 45. Weak Mutation 205: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:599 - ReplaceComparisonOperator == -> !=
   * Goal 46. Weak Mutation 206: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:601 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Option option0 = new Option((String) null, (String) null, true, (String) null);
      List list0 = option0.getValuesList();
      boolean boolean0 = option0.equals(list0);
      assertTrue(option0.hasArg());
      assertFalse(boolean0);
      assertTrue(option0.hasArgName());
  }

  //Test case number: 44
  /*
   * 36 covered goals:
   * Goal 1. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - false
   * Goal 2. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I4 Branch 27 IF_ACMPNE L595 - true
   * Goal 3. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I12 Branch 28 IFNULL L599 - true
   * Goal 4. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - false in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 5. Branch org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I4 Branch 27 IF_ACMPNE L595 - true in context: org.apache.commons.cli.Option:equals(Ljava/lang/Object;)Z
   * Goal 6. Branch org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I12 Branch 28 IFNULL L599 - true in context: org.apache.commons.cli.Option:equals(Ljava/lang/Object;)Z
   * Goal 7. [Output]: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:False
   * Goal 8. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 9. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 10. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 11. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 12. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 13. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 14. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 15. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 131
   * Goal 16. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 17. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 18. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: Line 595
   * Goal 19. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: Line 599
   * Goal 20. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: Line 601
   * Goal 21. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 22. [METHOD] org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z
   * Goal 23. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 24. [METHODNOEX] org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z
   * Goal 25. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 26. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 27. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 28. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 29. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 30. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 31. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 32. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 33. Weak Mutation 14: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:131 - ReplaceConstant - 1 -> 0
   * Goal 34. Weak Mutation 202: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:595 - ReplaceComparisonOperator != -> ==
   * Goal 35. Weak Mutation 204: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:599 - ReplaceComparisonOperator = null -> != null
   * Goal 36. Weak Mutation 206: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:601 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Option option0 = new Option((String) null, (String) null, true, (String) null);
      boolean boolean0 = option0.equals((Object) null);
      assertFalse(boolean0);
      assertEquals(1, option0.getArgs());
      assertTrue(option0.hasArgName());
  }

  //Test case number: 45
  /*
   * 37 covered goals:
   * Goal 1. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - false
   * Goal 2. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I4 Branch 27 IF_ACMPNE L595 - false
   * Goal 3. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - false in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 4. Branch org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I4 Branch 27 IF_ACMPNE L595 - false in context: org.apache.commons.cli.Option:equals(Ljava/lang/Object;)Z
   * Goal 5. [Output]: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:True
   * Goal 6. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 7. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 8. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 9. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 10. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 11. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 12. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 13. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 131
   * Goal 14. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 15. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 16. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: Line 595
   * Goal 17. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: Line 597
   * Goal 18. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 19. [METHOD] org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z
   * Goal 20. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 21. [METHODNOEX] org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z
   * Goal 22. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 23. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 24. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 25. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 26. Weak Mutation 4: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> description
   * Goal 27. Weak Mutation 6: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> description
   * Goal 28. Weak Mutation 8: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> description
   * Goal 29. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 30. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 31. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 32. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 33. Weak Mutation 14: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:131 - ReplaceConstant - 1 -> 0
   * Goal 34. Weak Mutation 15: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> opt
   * Goal 35. Weak Mutation 16: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> longOpt
   * Goal 36. Weak Mutation 202: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:595 - ReplaceComparisonOperator != -> ==
   * Goal 37. Weak Mutation 203: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:597 - ReplaceConstant - 1 -> 0
   */

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Option option0 = new Option("", "", true, "NO_ARGS_ALLOWED");
      boolean boolean0 = option0.equals(option0);
      assertEquals("NO_ARGS_ALLOWED", option0.getDescription());
      assertTrue(boolean0);
      assertEquals("", option0.getOpt());
      assertEquals(1, option0.getArgs());
      assertTrue(option0.hasArgName());
      assertEquals("", option0.getLongOpt());
  }

  //Test case number: 46
  /*
   * 54 covered goals:
   * Goal 1. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true
   * Goal 2. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I4 Branch 27 IF_ACMPNE L595 - true
   * Goal 3. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I12 Branch 28 IFNULL L599 - false
   * Goal 4. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I17 Branch 29 IF_ACMPEQ L599 - true
   * Goal 5. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I31 Branch 30 IFNULL L607 - true
   * Goal 6. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I42 Branch 32 IFNULL L607 - false
   * Goal 7. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 8. Branch org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I4 Branch 27 IF_ACMPNE L595 - true in context: org.apache.commons.cli.Option:equals(Ljava/lang/Object;)Z
   * Goal 9. Branch org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I12 Branch 28 IFNULL L599 - false in context: org.apache.commons.cli.Option:equals(Ljava/lang/Object;)Z
   * Goal 10. Branch org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I17 Branch 29 IF_ACMPEQ L599 - true in context: org.apache.commons.cli.Option:equals(Ljava/lang/Object;)Z
   * Goal 11. Branch org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I42 Branch 32 IFNULL L607 - false in context: org.apache.commons.cli.Option:equals(Ljava/lang/Object;)Z
   * Goal 12. Branch org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: I31 Branch 30 IFNULL L607 - true in context: org.apache.commons.cli.Option:equals(Ljava/lang/Object;)Z
   * Goal 13. [Output]: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:False
   * Goal 14. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 15. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 16. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 17. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 18. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 19. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 20. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 21. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 22. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 23. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: Line 595
   * Goal 24. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: Line 599
   * Goal 25. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: Line 604
   * Goal 26. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: Line 607
   * Goal 27. org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z: Line 609
   * Goal 28. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 29. [METHOD] org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z
   * Goal 30. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 31. [METHODNOEX] org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z
   * Goal 32. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 33. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 34. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 35. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 36. Weak Mutation 4: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> description
   * Goal 37. Weak Mutation 5: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> longOpt
   * Goal 38. Weak Mutation 6: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> description
   * Goal 39. Weak Mutation 7: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> longOpt
   * Goal 40. Weak Mutation 8: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> description
   * Goal 41. Weak Mutation 9: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> opt
   * Goal 42. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 43. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 44. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 45. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 46. Weak Mutation 15: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> opt
   * Goal 47. Weak Mutation 16: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> longOpt
   * Goal 48. Weak Mutation 202: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:595 - ReplaceComparisonOperator != -> ==
   * Goal 49. Weak Mutation 204: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:599 - ReplaceComparisonOperator = null -> != null
   * Goal 50. Weak Mutation 205: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:599 - ReplaceComparisonOperator == -> !=
   * Goal 51. Weak Mutation 207: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:607 - ReplaceComparisonOperator = null -> != null
   * Goal 52. Weak Mutation 212: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:607 - ReplaceVariable option -> this
   * Goal 53. Weak Mutation 213: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:607 - ReplaceComparisonOperator = null -> != null
   * Goal 54. Weak Mutation 214: org.apache.commons.cli.Option.equals(Ljava/lang/Object;)Z:609 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Option option0 = new Option("", "", false, "NO_ARGS_ALLOWED");
      Option option1 = new Option((String) null, "arg", false, (String) null);
      boolean boolean0 = option1.equals(option0);
      assertEquals(-1, option1.getArgs());
      assertEquals("NO_ARGS_ALLOWED", option0.getDescription());
      assertEquals("arg", option1.getArgName());
      assertEquals("", option0.getOpt());
      assertFalse(boolean0);
      assertTrue(option1.hasLongOpt());
  }

  //Test case number: 47
  /*
   * 84 covered goals:
   * Goal 1. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - false
   * Goal 2. org.apache.commons.cli.Option.hasArg()Z: I4 Branch 4 IFGT L256 - true
   * Goal 3. org.apache.commons.cli.Option.hasArgs()Z: I5 Branch 8 IF_ICMPGT L339 - false
   * Goal 4. org.apache.commons.cli.Option.hasArgs()Z: I9 Branch 9 IF_ICMPNE L339 - true
   * Goal 5. org.apache.commons.cli.Option.toString()Ljava/lang/String;: I19 Branch 22 IFNULL L555 - true
   * Goal 6. org.apache.commons.cli.Option.toString()Ljava/lang/String;: I39 Branch 23 IFEQ L562 - true
   * Goal 7. org.apache.commons.cli.Option.toString()Ljava/lang/String;: I51 Branch 24 IFEQ L566 - false
   * Goal 8. org.apache.commons.cli.Option.toString()Ljava/lang/String;: I71 Branch 25 IFNULL L573 - true
   * Goal 9. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - false in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 10. Branch org.apache.commons.cli.Option.toString()Ljava/lang/String;: I19 Branch 22 IFNULL L555 - true in context: org.apache.commons.cli.Option:toString()Ljava/lang/String;
   * Goal 11. Branch org.apache.commons.cli.Option.toString()Ljava/lang/String;: I39 Branch 23 IFEQ L562 - true in context: org.apache.commons.cli.Option:toString()Ljava/lang/String;
   * Goal 12. Branch org.apache.commons.cli.Option.toString()Ljava/lang/String;: I51 Branch 24 IFEQ L566 - false in context: org.apache.commons.cli.Option:toString()Ljava/lang/String;
   * Goal 13. Branch org.apache.commons.cli.Option.toString()Ljava/lang/String;: I71 Branch 25 IFNULL L573 - true in context: org.apache.commons.cli.Option:toString()Ljava/lang/String;
   * Goal 14. [Output]: org.apache.commons.cli.Option.toString()Ljava/lang/String;:NonEmptyString
   * Goal 15. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 16. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 17. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 18. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 19. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 20. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 21. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 22. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 131
   * Goal 23. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 24. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 25. org.apache.commons.cli.Option.hasArg()Z: Line 256
   * Goal 26. org.apache.commons.cli.Option.hasArgs()Z: Line 339
   * Goal 27. org.apache.commons.cli.Option.toString()Ljava/lang/String;: Line 551
   * Goal 28. org.apache.commons.cli.Option.toString()Ljava/lang/String;: Line 553
   * Goal 29. org.apache.commons.cli.Option.toString()Ljava/lang/String;: Line 555
   * Goal 30. org.apache.commons.cli.Option.toString()Ljava/lang/String;: Line 560
   * Goal 31. org.apache.commons.cli.Option.toString()Ljava/lang/String;: Line 562
   * Goal 32. org.apache.commons.cli.Option.toString()Ljava/lang/String;: Line 566
   * Goal 33. org.apache.commons.cli.Option.toString()Ljava/lang/String;: Line 568
   * Goal 34. org.apache.commons.cli.Option.toString()Ljava/lang/String;: Line 571
   * Goal 35. org.apache.commons.cli.Option.toString()Ljava/lang/String;: Line 573
   * Goal 36. org.apache.commons.cli.Option.toString()Ljava/lang/String;: Line 578
   * Goal 37. org.apache.commons.cli.Option.toString()Ljava/lang/String;: Line 580
   * Goal 38. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 39. [METHOD] org.apache.commons.cli.Option.toString()Ljava/lang/String;
   * Goal 40. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 41. [METHODNOEX] org.apache.commons.cli.Option.toString()Ljava/lang/String;
   * Goal 42. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 43. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 44. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 45. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 46. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 47. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 48. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 49. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 50. Weak Mutation 14: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:131 - ReplaceConstant - 1 -> 0
   * Goal 51. Weak Mutation 26: org.apache.commons.cli.Option.hasArg()Z:256 - ReplaceVariable numberOfArgs -> UNINITIALIZED
   * Goal 52. Weak Mutation 27: org.apache.commons.cli.Option.hasArg()Z:256 - ReplaceVariable numberOfArgs -> UNLIMITED_VALUES
   * Goal 53. Weak Mutation 28: org.apache.commons.cli.Option.hasArg()Z:256 - InsertUnaryOp Negation
   * Goal 54. Weak Mutation 29: org.apache.commons.cli.Option.hasArg()Z:256 - InsertUnaryOp +1
   * Goal 55. Weak Mutation 30: org.apache.commons.cli.Option.hasArg()Z:256 - InsertUnaryOp -1
   * Goal 56. Weak Mutation 31: org.apache.commons.cli.Option.hasArg()Z:256 - ReplaceComparisonOperator > -> -2
   * Goal 57. Weak Mutation 46: org.apache.commons.cli.Option.hasArg()Z:256 - ReplaceConstant - 1 -> 0
   * Goal 58. Weak Mutation 58: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceVariable numberOfArgs -> UNINITIALIZED
   * Goal 59. Weak Mutation 59: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceVariable numberOfArgs -> UNLIMITED_VALUES
   * Goal 60. Weak Mutation 60: org.apache.commons.cli.Option.hasArgs()Z:339 - InsertUnaryOp Negation
   * Goal 61. Weak Mutation 61: org.apache.commons.cli.Option.hasArgs()Z:339 - InsertUnaryOp +1
   * Goal 62. Weak Mutation 62: org.apache.commons.cli.Option.hasArgs()Z:339 - InsertUnaryOp -1
   * Goal 63. Weak Mutation 63: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceConstant - 1 -> 0
   * Goal 64. Weak Mutation 64: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceComparisonOperator > -> ==
   * Goal 65. Weak Mutation 65: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceVariable numberOfArgs -> UNINITIALIZED
   * Goal 66. Weak Mutation 66: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceVariable numberOfArgs -> UNLIMITED_VALUES
   * Goal 67. Weak Mutation 67: org.apache.commons.cli.Option.hasArgs()Z:339 - InsertUnaryOp Negation
   * Goal 68. Weak Mutation 68: org.apache.commons.cli.Option.hasArgs()Z:339 - InsertUnaryOp +1
   * Goal 69. Weak Mutation 69: org.apache.commons.cli.Option.hasArgs()Z:339 - InsertUnaryOp -1
   * Goal 70. Weak Mutation 70: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceConstant - -2 -> 0
   * Goal 71. Weak Mutation 71: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceConstant - -2 -> 1
   * Goal 72. Weak Mutation 72: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceConstant - -2 -> -1
   * Goal 73. Weak Mutation 73: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceConstant - -2 -> -3
   * Goal 74. Weak Mutation 75: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceComparisonOperator != -> <
   * Goal 75. Weak Mutation 78: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceConstant - 0 -> 1
   * Goal 76. Weak Mutation 185: org.apache.commons.cli.Option.toString()Ljava/lang/String;:551 - ReplaceConstant - [ option:  -> 
   * Goal 77. Weak Mutation 186: org.apache.commons.cli.Option.toString()Ljava/lang/String;:555 - ReplaceComparisonOperator = null -> != null
   * Goal 78. Weak Mutation 188: org.apache.commons.cli.Option.toString()Ljava/lang/String;:560 - ReplaceConstant -   -> 
   * Goal 79. Weak Mutation 189: org.apache.commons.cli.Option.toString()Ljava/lang/String;:562 - ReplaceComparisonOperator == -> !=
   * Goal 80. Weak Mutation 191: org.apache.commons.cli.Option.toString()Ljava/lang/String;:566 - ReplaceComparisonOperator == -> !=
   * Goal 81. Weak Mutation 192: org.apache.commons.cli.Option.toString()Ljava/lang/String;:568 - ReplaceConstant -  [ARG] -> 
   * Goal 82. Weak Mutation 193: org.apache.commons.cli.Option.toString()Ljava/lang/String;:571 - ReplaceConstant -  ::  -> 
   * Goal 83. Weak Mutation 194: org.apache.commons.cli.Option.toString()Ljava/lang/String;:573 - ReplaceComparisonOperator = null -> != null
   * Goal 84. Weak Mutation 196: org.apache.commons.cli.Option.toString()Ljava/lang/String;:578 - ReplaceConstant -  ] -> 
   */

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Option option0 = new Option((String) null, (String) null, true, (String) null);
      String string0 = option0.toString();
      assertEquals("[ option: null  [ARG] :: null ]", string0);
      assertEquals("arg", option0.getArgName());
  }

  //Test case number: 48
  /*
   * 40 covered goals:
   * Goal 1. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: root-Branch
   * Goal 2. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true
   * Goal 3. org.apache.commons.cli.Option.getValues()[Ljava/lang/String;: I4 Branch 21 IFEQ L532 - false
   * Goal 4. org.apache.commons.cli.Option.hasNoValues()Z: I5 Branch 26 IFLE L590 - false
   * Goal 5. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: root-Branch in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 6. Branch org.apache.commons.cli.Option.getValues()[Ljava/lang/String;: I4 Branch 21 IFEQ L532 - false in context: org.apache.commons.cli.Option:getValues()[Ljava/lang/String;
   * Goal 7. Branch org.apache.commons.cli.Option.hasNoValues()Z: I5 Branch 26 IFLE L590 - false in context: 
   * Goal 8. [Output]: org.apache.commons.cli.Option.getValues()[Ljava/lang/String;:Null
   * Goal 9. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: Line 91
   * Goal 10. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 11. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 12. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 13. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 14. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 15. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 16. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 17. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 18. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 19. org.apache.commons.cli.Option.getValues()[Ljava/lang/String;: Line 532
   * Goal 20. org.apache.commons.cli.Option.hasNoValues()Z: Line 590
   * Goal 21. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 22. [METHOD] org.apache.commons.cli.Option.getValues()[Ljava/lang/String;
   * Goal 23. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 24. [METHODNOEX] org.apache.commons.cli.Option.getValues()[Ljava/lang/String;
   * Goal 25. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 26. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 27. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 28. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 29. Weak Mutation 5: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> longOpt
   * Goal 30. Weak Mutation 7: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> longOpt
   * Goal 31. Weak Mutation 8: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> description
   * Goal 32. Weak Mutation 9: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> opt
   * Goal 33. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 34. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 35. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 36. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 37. Weak Mutation 16: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> longOpt
   * Goal 38. Weak Mutation 184: org.apache.commons.cli.Option.getValues()[Ljava/lang/String;:532 - ReplaceComparisonOperator == -> !=
   * Goal 39. Weak Mutation 197: org.apache.commons.cli.Option.hasNoValues()Z:590 - ReplaceComparisonOperator <= -> -1
   * Goal 40. Weak Mutation 200: org.apache.commons.cli.Option.hasNoValues()Z:590 - ReplaceConstant - 1 -> 0
   */

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Option option0 = new Option("", "");
      String[] stringArray0 = option0.getValues();
      assertTrue(option0.hasArgName());
      assertNull(stringArray0);
      assertEquals(-1, option0.getArgs());
      assertFalse(option0.hasLongOpt());
  }

  //Test case number: 49
  /*
   * 86 covered goals:
   * Goal 1. org.apache.commons.cli.Option.setArgs(I)V: root-Branch
   * Goal 2. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: root-Branch
   * Goal 3. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true
   * Goal 4. org.apache.commons.cli.Option.hasValueSeparator()Z: I4 Branch 10 IFLE L381 - true
   * Goal 5. org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: I4 Branch 11 LOOKUPSWITCH L401 Case -1 - false
   * Goal 6. org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: I4 Branch 12 LOOKUPSWITCH L401 Default-Case - true
   * Goal 7. org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V: I4 Branch 13 IFEQ L425 - true
   * Goal 8. org.apache.commons.cli.Option.add(Ljava/lang/String;)V: I4 Branch 16 IFLE L468 - true
   * Goal 9. org.apache.commons.cli.Option.getValues()[Ljava/lang/String;: I4 Branch 21 IFEQ L532 - true
   * Goal 10. org.apache.commons.cli.Option.hasNoValues()Z: I5 Branch 26 IFLE L590 - true
   * Goal 11. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: root-Branch in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 12. Branch org.apache.commons.cli.Option.setArgs(I)V: root-Branch in context: org.apache.commons.cli.Option:setArgs(I)V
   * Goal 13. Branch org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: I4 Branch 12 LOOKUPSWITCH L401 Default-Case - true in context: 
   * Goal 14. Branch org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: I4 Branch 11 LOOKUPSWITCH L401 Case -1 - false in context: 
   * Goal 15. Branch org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V: I4 Branch 13 IFEQ L425 - true in context: 
   * Goal 16. Branch org.apache.commons.cli.Option.add(Ljava/lang/String;)V: I4 Branch 16 IFLE L468 - true in context: 
   * Goal 17. Branch org.apache.commons.cli.Option.getValues()[Ljava/lang/String;: I4 Branch 21 IFEQ L532 - true in context: org.apache.commons.cli.Option:getValues()[Ljava/lang/String;
   * Goal 18. Branch org.apache.commons.cli.Option.hasNoValues()Z: I5 Branch 26 IFLE L590 - true in context: 
   * Goal 19. [Output]: org.apache.commons.cli.Option.getValues()[Ljava/lang/String;:NonEmptyArray
   * Goal 20. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: Line 91
   * Goal 21. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 22. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 23. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 24. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 25. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 26. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 27. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 28. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 29. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 30. org.apache.commons.cli.Option.add(Ljava/lang/String;)V: Line 468
   * Goal 31. org.apache.commons.cli.Option.add(Ljava/lang/String;)V: Line 474
   * Goal 32. org.apache.commons.cli.Option.add(Ljava/lang/String;)V: Line 475
   * Goal 33. org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: Line 401
   * Goal 34. org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: Line 407
   * Goal 35. org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: Line 409
   * Goal 36. org.apache.commons.cli.Option.getValues()[Ljava/lang/String;: Line 532
   * Goal 37. org.apache.commons.cli.Option.hasNoValues()Z: Line 590
   * Goal 38. org.apache.commons.cli.Option.hasValueSeparator()Z: Line 381
   * Goal 39. org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V: Line 425
   * Goal 40. org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V: Line 454
   * Goal 41. org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V: Line 455
   * Goal 42. org.apache.commons.cli.Option.setArgs(I)V: Line 349
   * Goal 43. org.apache.commons.cli.Option.setArgs(I)V: Line 350
   * Goal 44. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 45. [METHOD] org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V
   * Goal 46. [METHOD] org.apache.commons.cli.Option.getValues()[Ljava/lang/String;
   * Goal 47. [METHOD] org.apache.commons.cli.Option.setArgs(I)V
   * Goal 48. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 49. [METHODNOEX] org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V
   * Goal 50. [METHODNOEX] org.apache.commons.cli.Option.getValues()[Ljava/lang/String;
   * Goal 51. [METHODNOEX] org.apache.commons.cli.Option.setArgs(I)V
   * Goal 52. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 53. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 54. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 55. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 56. Weak Mutation 5: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> longOpt
   * Goal 57. Weak Mutation 7: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> longOpt
   * Goal 58. Weak Mutation 8: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> description
   * Goal 59. Weak Mutation 9: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> opt
   * Goal 60. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 61. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 62. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 63. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 64. Weak Mutation 16: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> longOpt
   * Goal 65. Weak Mutation 79: org.apache.commons.cli.Option.setArgs(I)V:349 - ReplaceVariable num -> UNINITIALIZED
   * Goal 66. Weak Mutation 80: org.apache.commons.cli.Option.setArgs(I)V:349 - ReplaceVariable num -> UNLIMITED_VALUES
   * Goal 67. Weak Mutation 81: org.apache.commons.cli.Option.setArgs(I)V:349 - InsertUnaryOp Negation of num
   * Goal 68. Weak Mutation 82: org.apache.commons.cli.Option.setArgs(I)V:349 - InsertUnaryOp IINC 1 num
   * Goal 69. Weak Mutation 83: org.apache.commons.cli.Option.setArgs(I)V:349 - InsertUnaryOp IINC -1 num
   * Goal 70. Weak Mutation 89: org.apache.commons.cli.Option.hasValueSeparator()Z:381 - ReplaceComparisonOperator <= -> <
   * Goal 71. Weak Mutation 91: org.apache.commons.cli.Option.hasValueSeparator()Z:381 - ReplaceConstant - 0 -> 1
   * Goal 72. Weak Mutation 97: org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V:401 - ReplaceVariable numberOfArgs -> UNINITIALIZED
   * Goal 73. Weak Mutation 98: org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V:401 - ReplaceVariable numberOfArgs -> UNLIMITED_VALUES
   * Goal 74. Weak Mutation 99: org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V:401 - InsertUnaryOp Negation
   * Goal 75. Weak Mutation 100: org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V:401 - InsertUnaryOp +1
   * Goal 76. Weak Mutation 101: org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V:401 - InsertUnaryOp -1
   * Goal 77. Weak Mutation 104: org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V:425 - ReplaceComparisonOperator == -> !=
   * Goal 78. Weak Mutation 149: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - ReplaceVariable numberOfArgs -> UNINITIALIZED
   * Goal 79. Weak Mutation 150: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - ReplaceVariable numberOfArgs -> UNLIMITED_VALUES
   * Goal 80. Weak Mutation 151: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - InsertUnaryOp Negation
   * Goal 81. Weak Mutation 152: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - InsertUnaryOp +1
   * Goal 82. Weak Mutation 153: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - InsertUnaryOp -1
   * Goal 83. Weak Mutation 156: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - ReplaceComparisonOperator <= -> <
   * Goal 84. Weak Mutation 184: org.apache.commons.cli.Option.getValues()[Ljava/lang/String;:532 - ReplaceComparisonOperator == -> !=
   * Goal 85. Weak Mutation 198: org.apache.commons.cli.Option.hasNoValues()Z:590 - ReplaceComparisonOperator <= -> ==
   * Goal 86. Weak Mutation 201: org.apache.commons.cli.Option.hasNoValues()Z:590 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Option option0 = new Option("", "");
      assertEquals(-1, option0.getArgs());
      
      option0.setArgs(0);
      option0.addValueForProcessing("");
      option0.getValues();
      assertFalse(option0.hasArg());
  }

  //Test case number: 50
  /*
   * 38 covered goals:
   * Goal 1. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true
   * Goal 2. org.apache.commons.cli.Option.getValue(I)Ljava/lang/String;: I4 Branch 19 IFEQ L503 - false
   * Goal 3. org.apache.commons.cli.Option.hasNoValues()Z: I5 Branch 26 IFLE L590 - false
   * Goal 4. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 5. Branch org.apache.commons.cli.Option.getValue(I)Ljava/lang/String;: I4 Branch 19 IFEQ L503 - false in context: org.apache.commons.cli.Option:getValue(I)Ljava/lang/String;
   * Goal 6. Branch org.apache.commons.cli.Option.hasNoValues()Z: I5 Branch 26 IFLE L590 - false in context: 
   * Goal 7. [Output]: org.apache.commons.cli.Option.getValue(I)Ljava/lang/String;:Null
   * Goal 8. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 9. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 10. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 11. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 12. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 13. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 14. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 15. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 16. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 17. org.apache.commons.cli.Option.getValue(I)Ljava/lang/String;: Line 503
   * Goal 18. org.apache.commons.cli.Option.hasNoValues()Z: Line 590
   * Goal 19. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 20. [METHOD] org.apache.commons.cli.Option.getValue(I)Ljava/lang/String;
   * Goal 21. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 22. [METHODNOEX] org.apache.commons.cli.Option.getValue(I)Ljava/lang/String;
   * Goal 23. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 24. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 25. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 26. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 27. Weak Mutation 4: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> description
   * Goal 28. Weak Mutation 6: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> description
   * Goal 29. Weak Mutation 8: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> description
   * Goal 30. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 31. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 32. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 33. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 34. Weak Mutation 15: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> opt
   * Goal 35. Weak Mutation 16: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> longOpt
   * Goal 36. Weak Mutation 174: org.apache.commons.cli.Option.getValue(I)Ljava/lang/String;:503 - ReplaceComparisonOperator == -> !=
   * Goal 37. Weak Mutation 197: org.apache.commons.cli.Option.hasNoValues()Z:590 - ReplaceComparisonOperator <= -> -1
   * Goal 38. Weak Mutation 200: org.apache.commons.cli.Option.hasNoValues()Z:590 - ReplaceConstant - 1 -> 0
   */

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Option option0 = new Option("", "", false, "NO_ARGS_ALLOWED");
      option0.getValue(3008);
      assertEquals("", option0.getOpt());
      assertEquals(-1, option0.getArgs());
      assertEquals("NO_ARGS_ALLOWED", option0.getDescription());
      assertTrue(option0.hasArgName());
      assertEquals("", option0.getLongOpt());
  }

  //Test case number: 51
  /*
   * 91 covered goals:
   * Goal 1. org.apache.commons.cli.Option.setArgs(I)V: root-Branch
   * Goal 2. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: root-Branch
   * Goal 3. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true
   * Goal 4. org.apache.commons.cli.Option.hasValueSeparator()Z: I4 Branch 10 IFLE L381 - true
   * Goal 5. org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: I4 Branch 11 LOOKUPSWITCH L401 Case -1 - false
   * Goal 6. org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: I4 Branch 12 LOOKUPSWITCH L401 Default-Case - true
   * Goal 7. org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V: I4 Branch 13 IFEQ L425 - true
   * Goal 8. org.apache.commons.cli.Option.add(Ljava/lang/String;)V: I4 Branch 16 IFLE L468 - true
   * Goal 9. org.apache.commons.cli.Option.getValue(I)Ljava/lang/String;: I4 Branch 19 IFEQ L503 - true
   * Goal 10. org.apache.commons.cli.Option.hasNoValues()Z: I5 Branch 26 IFLE L590 - true
   * Goal 11. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: root-Branch in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 12. Branch org.apache.commons.cli.Option.setArgs(I)V: root-Branch in context: org.apache.commons.cli.Option:setArgs(I)V
   * Goal 13. Branch org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: I4 Branch 12 LOOKUPSWITCH L401 Default-Case - true in context: 
   * Goal 14. Branch org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: I4 Branch 11 LOOKUPSWITCH L401 Case -1 - false in context: 
   * Goal 15. Branch org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V: I4 Branch 13 IFEQ L425 - true in context: 
   * Goal 16. Branch org.apache.commons.cli.Option.add(Ljava/lang/String;)V: I4 Branch 16 IFLE L468 - true in context: 
   * Goal 17. Branch org.apache.commons.cli.Option.getValue(I)Ljava/lang/String;: I4 Branch 19 IFEQ L503 - true in context: org.apache.commons.cli.Option:getValue(I)Ljava/lang/String;
   * Goal 18. Branch org.apache.commons.cli.Option.hasNoValues()Z: I5 Branch 26 IFLE L590 - true in context: 
   * Goal 19. [Output]: org.apache.commons.cli.Option.getValue(I)Ljava/lang/String;:EmptyString
   * Goal 20. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: Line 91
   * Goal 21. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 22. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 23. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 24. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 25. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 26. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 27. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 28. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 29. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 30. org.apache.commons.cli.Option.add(Ljava/lang/String;)V: Line 468
   * Goal 31. org.apache.commons.cli.Option.add(Ljava/lang/String;)V: Line 474
   * Goal 32. org.apache.commons.cli.Option.add(Ljava/lang/String;)V: Line 475
   * Goal 33. org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: Line 401
   * Goal 34. org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: Line 407
   * Goal 35. org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: Line 409
   * Goal 36. org.apache.commons.cli.Option.getValue(I)Ljava/lang/String;: Line 503
   * Goal 37. org.apache.commons.cli.Option.hasNoValues()Z: Line 590
   * Goal 38. org.apache.commons.cli.Option.hasValueSeparator()Z: Line 381
   * Goal 39. org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V: Line 425
   * Goal 40. org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V: Line 454
   * Goal 41. org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V: Line 455
   * Goal 42. org.apache.commons.cli.Option.setArgs(I)V: Line 349
   * Goal 43. org.apache.commons.cli.Option.setArgs(I)V: Line 350
   * Goal 44. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 45. [METHOD] org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V
   * Goal 46. [METHOD] org.apache.commons.cli.Option.getValue(I)Ljava/lang/String;
   * Goal 47. [METHOD] org.apache.commons.cli.Option.setArgs(I)V
   * Goal 48. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 49. [METHODNOEX] org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V
   * Goal 50. [METHODNOEX] org.apache.commons.cli.Option.getValue(I)Ljava/lang/String;
   * Goal 51. [METHODNOEX] org.apache.commons.cli.Option.setArgs(I)V
   * Goal 52. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 53. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 54. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 55. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 56. Weak Mutation 5: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> longOpt
   * Goal 57. Weak Mutation 7: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> longOpt
   * Goal 58. Weak Mutation 8: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> description
   * Goal 59. Weak Mutation 9: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> opt
   * Goal 60. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 61. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 62. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 63. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 64. Weak Mutation 16: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> longOpt
   * Goal 65. Weak Mutation 79: org.apache.commons.cli.Option.setArgs(I)V:349 - ReplaceVariable num -> UNINITIALIZED
   * Goal 66. Weak Mutation 80: org.apache.commons.cli.Option.setArgs(I)V:349 - ReplaceVariable num -> UNLIMITED_VALUES
   * Goal 67. Weak Mutation 81: org.apache.commons.cli.Option.setArgs(I)V:349 - InsertUnaryOp Negation of num
   * Goal 68. Weak Mutation 82: org.apache.commons.cli.Option.setArgs(I)V:349 - InsertUnaryOp IINC 1 num
   * Goal 69. Weak Mutation 83: org.apache.commons.cli.Option.setArgs(I)V:349 - InsertUnaryOp IINC -1 num
   * Goal 70. Weak Mutation 89: org.apache.commons.cli.Option.hasValueSeparator()Z:381 - ReplaceComparisonOperator <= -> <
   * Goal 71. Weak Mutation 91: org.apache.commons.cli.Option.hasValueSeparator()Z:381 - ReplaceConstant - 0 -> 1
   * Goal 72. Weak Mutation 97: org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V:401 - ReplaceVariable numberOfArgs -> UNINITIALIZED
   * Goal 73. Weak Mutation 98: org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V:401 - ReplaceVariable numberOfArgs -> UNLIMITED_VALUES
   * Goal 74. Weak Mutation 99: org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V:401 - InsertUnaryOp Negation
   * Goal 75. Weak Mutation 100: org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V:401 - InsertUnaryOp +1
   * Goal 76. Weak Mutation 101: org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V:401 - InsertUnaryOp -1
   * Goal 77. Weak Mutation 104: org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V:425 - ReplaceComparisonOperator == -> !=
   * Goal 78. Weak Mutation 149: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - ReplaceVariable numberOfArgs -> UNINITIALIZED
   * Goal 79. Weak Mutation 150: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - ReplaceVariable numberOfArgs -> UNLIMITED_VALUES
   * Goal 80. Weak Mutation 151: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - InsertUnaryOp Negation
   * Goal 81. Weak Mutation 152: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - InsertUnaryOp +1
   * Goal 82. Weak Mutation 153: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - InsertUnaryOp -1
   * Goal 83. Weak Mutation 156: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - ReplaceComparisonOperator <= -> <
   * Goal 84. Weak Mutation 174: org.apache.commons.cli.Option.getValue(I)Ljava/lang/String;:503 - ReplaceComparisonOperator == -> !=
   * Goal 85. Weak Mutation 175: org.apache.commons.cli.Option.getValue(I)Ljava/lang/String;:503 - ReplaceVariable index -> UNINITIALIZED
   * Goal 86. Weak Mutation 176: org.apache.commons.cli.Option.getValue(I)Ljava/lang/String;:503 - ReplaceVariable index -> UNLIMITED_VALUES
   * Goal 87. Weak Mutation 177: org.apache.commons.cli.Option.getValue(I)Ljava/lang/String;:503 - InsertUnaryOp Negation of index
   * Goal 88. Weak Mutation 178: org.apache.commons.cli.Option.getValue(I)Ljava/lang/String;:503 - InsertUnaryOp IINC 1 index
   * Goal 89. Weak Mutation 179: org.apache.commons.cli.Option.getValue(I)Ljava/lang/String;:503 - InsertUnaryOp IINC -1 index
   * Goal 90. Weak Mutation 198: org.apache.commons.cli.Option.hasNoValues()Z:590 - ReplaceComparisonOperator <= -> ==
   * Goal 91. Weak Mutation 201: org.apache.commons.cli.Option.hasNoValues()Z:590 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Option option0 = new Option("", "");
      assertEquals(-1, option0.getArgs());
      
      option0.setArgs(0);
      option0.addValueForProcessing("");
      option0.getValue(0);
      assertFalse(option0.hasValueSeparator());
  }

  //Test case number: 52
  /*
   * 42 covered goals:
   * Goal 1. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true
   * Goal 2. org.apache.commons.cli.Option.getValue()Ljava/lang/String;: I4 Branch 18 IFEQ L486 - false
   * Goal 3. org.apache.commons.cli.Option.getValue(Ljava/lang/String;)Ljava/lang/String;: I8 Branch 20 IFNULL L520 - true
   * Goal 4. org.apache.commons.cli.Option.hasNoValues()Z: I5 Branch 26 IFLE L590 - false
   * Goal 5. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 6. Branch org.apache.commons.cli.Option.getValue(Ljava/lang/String;)Ljava/lang/String;: I8 Branch 20 IFNULL L520 - true in context: org.apache.commons.cli.Option:getValue(Ljava/lang/String;)Ljava/lang/String;
   * Goal 7. Branch org.apache.commons.cli.Option.hasNoValues()Z: I5 Branch 26 IFLE L590 - false in context: 
   * Goal 8. [Output]: org.apache.commons.cli.Option.getValue(Ljava/lang/String;)Ljava/lang/String;:Null
   * Goal 9. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 10. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 11. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 12. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 13. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 14. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 15. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 16. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 17. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 18. org.apache.commons.cli.Option.getValue()Ljava/lang/String;: Line 486
   * Goal 19. org.apache.commons.cli.Option.getValue(Ljava/lang/String;)Ljava/lang/String;: Line 518
   * Goal 20. org.apache.commons.cli.Option.getValue(Ljava/lang/String;)Ljava/lang/String;: Line 520
   * Goal 21. org.apache.commons.cli.Option.hasNoValues()Z: Line 590
   * Goal 22. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 23. [METHOD] org.apache.commons.cli.Option.getValue(Ljava/lang/String;)Ljava/lang/String;
   * Goal 24. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 25. [METHODNOEX] org.apache.commons.cli.Option.getValue(Ljava/lang/String;)Ljava/lang/String;
   * Goal 26. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 27. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 28. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 29. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 30. Weak Mutation 4: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> description
   * Goal 31. Weak Mutation 6: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> description
   * Goal 32. Weak Mutation 8: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> description
   * Goal 33. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 34. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 35. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 36. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 37. Weak Mutation 15: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> opt
   * Goal 38. Weak Mutation 16: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> longOpt
   * Goal 39. Weak Mutation 172: org.apache.commons.cli.Option.getValue()Ljava/lang/String;:486 - ReplaceComparisonOperator == -> !=
   * Goal 40. Weak Mutation 181: org.apache.commons.cli.Option.getValue(Ljava/lang/String;)Ljava/lang/String;:520 - ReplaceComparisonOperator = null -> != null
   * Goal 41. Weak Mutation 197: org.apache.commons.cli.Option.hasNoValues()Z:590 - ReplaceComparisonOperator <= -> -1
   * Goal 42. Weak Mutation 200: org.apache.commons.cli.Option.hasNoValues()Z:590 - ReplaceConstant - 1 -> 0
   */

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Option option0 = new Option("", "", false, "NO_ARGS_ALLOWED");
      option0.getValue((String) null);
      assertEquals("NO_ARGS_ALLOWED", option0.getDescription());
      assertEquals("", option0.getOpt());
      assertEquals(-1, option0.getArgs());
      assertEquals("", option0.getLongOpt());
      assertTrue(option0.hasArgName());
  }

  //Test case number: 53
  /*
   * 84 covered goals:
   * Goal 1. org.apache.commons.cli.Option.<init>(Ljava/lang/String;ZLjava/lang/String;)V: root-Branch
   * Goal 2. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - false
   * Goal 3. org.apache.commons.cli.Option.hasValueSeparator()Z: I4 Branch 10 IFLE L381 - true
   * Goal 4. org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: I4 Branch 11 LOOKUPSWITCH L401 Case -1 - false
   * Goal 5. org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: I4 Branch 12 LOOKUPSWITCH L401 Default-Case - true
   * Goal 6. org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V: I4 Branch 13 IFEQ L425 - true
   * Goal 7. org.apache.commons.cli.Option.add(Ljava/lang/String;)V: I4 Branch 16 IFLE L468 - false
   * Goal 8. org.apache.commons.cli.Option.add(Ljava/lang/String;)V: I12 Branch 17 IF_ICMPLE L468 - true
   * Goal 9. org.apache.commons.cli.Option.add(Ljava/lang/String;)V: I12 Branch 17 IF_ICMPLE L468 - false
   * Goal 10. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;ZLjava/lang/String;)V: root-Branch in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 11. Branch org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: I4 Branch 12 LOOKUPSWITCH L401 Default-Case - true in context: 
   * Goal 12. Branch org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: I4 Branch 11 LOOKUPSWITCH L401 Case -1 - false in context: 
   * Goal 13. Branch org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V: I4 Branch 13 IFEQ L425 - true in context: 
   * Goal 14. Branch org.apache.commons.cli.Option.add(Ljava/lang/String;)V: I12 Branch 17 IF_ICMPLE L468 - false in context: 
   * Goal 15. Branch org.apache.commons.cli.Option.add(Ljava/lang/String;)V: I4 Branch 16 IFLE L468 - false in context: 
   * Goal 16. Branch org.apache.commons.cli.Option.add(Ljava/lang/String;)V: I12 Branch 17 IF_ICMPLE L468 - true in context: 
   * Goal 17. addValueForProcessing(Ljava/lang/String;)V_java.lang.RuntimeException_EXPLICIT
   * Goal 18. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 19. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 20. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 21. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 22. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 23. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 24. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 25. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 131
   * Goal 26. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 27. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 28. org.apache.commons.cli.Option.<init>(Ljava/lang/String;ZLjava/lang/String;)V: Line 106
   * Goal 29. org.apache.commons.cli.Option.add(Ljava/lang/String;)V: Line 468
   * Goal 30. org.apache.commons.cli.Option.add(Ljava/lang/String;)V: Line 470
   * Goal 31. org.apache.commons.cli.Option.add(Ljava/lang/String;)V: Line 474
   * Goal 32. org.apache.commons.cli.Option.add(Ljava/lang/String;)V: Line 475
   * Goal 33. org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: Line 401
   * Goal 34. org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: Line 407
   * Goal 35. org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: Line 409
   * Goal 36. org.apache.commons.cli.Option.hasValueSeparator()Z: Line 381
   * Goal 37. org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V: Line 425
   * Goal 38. org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V: Line 454
   * Goal 39. org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V: Line 455
   * Goal 40. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 41. [METHOD] org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V
   * Goal 42. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 43. [METHODNOEX] org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V
   * Goal 44. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 45. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 46. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 47. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 48. Weak Mutation 5: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> longOpt
   * Goal 49. Weak Mutation 7: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> longOpt
   * Goal 50. Weak Mutation 8: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> description
   * Goal 51. Weak Mutation 9: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> opt
   * Goal 52. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 53. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 54. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 55. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 56. Weak Mutation 14: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:131 - ReplaceConstant - 1 -> 0
   * Goal 57. Weak Mutation 16: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> longOpt
   * Goal 58. Weak Mutation 89: org.apache.commons.cli.Option.hasValueSeparator()Z:381 - ReplaceComparisonOperator <= -> <
   * Goal 59. Weak Mutation 91: org.apache.commons.cli.Option.hasValueSeparator()Z:381 - ReplaceConstant - 0 -> 1
   * Goal 60. Weak Mutation 97: org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V:401 - ReplaceVariable numberOfArgs -> UNINITIALIZED
   * Goal 61. Weak Mutation 98: org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V:401 - ReplaceVariable numberOfArgs -> UNLIMITED_VALUES
   * Goal 62. Weak Mutation 99: org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V:401 - InsertUnaryOp Negation
   * Goal 63. Weak Mutation 100: org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V:401 - InsertUnaryOp +1
   * Goal 64. Weak Mutation 101: org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V:401 - InsertUnaryOp -1
   * Goal 65. Weak Mutation 104: org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V:425 - ReplaceComparisonOperator == -> !=
   * Goal 66. Weak Mutation 149: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - ReplaceVariable numberOfArgs -> UNINITIALIZED
   * Goal 67. Weak Mutation 150: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - ReplaceVariable numberOfArgs -> UNLIMITED_VALUES
   * Goal 68. Weak Mutation 151: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - InsertUnaryOp Negation
   * Goal 69. Weak Mutation 152: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - InsertUnaryOp +1
   * Goal 70. Weak Mutation 153: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - InsertUnaryOp -1
   * Goal 71. Weak Mutation 154: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - ReplaceComparisonOperator <= -> -1
   * Goal 72. Weak Mutation 157: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - ReplaceVariable numberOfArgs -> UNINITIALIZED
   * Goal 73. Weak Mutation 158: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - ReplaceVariable numberOfArgs -> UNLIMITED_VALUES
   * Goal 74. Weak Mutation 159: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - InsertUnaryOp Negation
   * Goal 75. Weak Mutation 160: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - InsertUnaryOp +1
   * Goal 76. Weak Mutation 161: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - InsertUnaryOp -1
   * Goal 77. Weak Mutation 162: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - ReplaceConstant - 1 -> 0
   * Goal 78. Weak Mutation 163: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - ReplaceArithmeticOperator - -> +
   * Goal 79. Weak Mutation 165: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - ReplaceArithmeticOperator - -> *
   * Goal 80. Weak Mutation 166: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - ReplaceArithmeticOperator - -> /
   * Goal 81. Weak Mutation 167: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - ReplaceComparisonOperator <= -> -1
   * Goal 82. Weak Mutation 168: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - ReplaceComparisonOperator <= -> <
   * Goal 83. Weak Mutation 170: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:470 - ReplaceConstant - Cannot add value, list full. -> 
   * Goal 84. Weak Mutation 171: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:470 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Option option0 = new Option("", true, "");
      option0.addValueForProcessing("");
      // Undeclared exception!
      try { 
        option0.addValueForProcessing("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot add value, list full.
         //
         assertThrownBy("org.apache.commons.cli.Option", e);
      }
  }

  //Test case number: 54
  /*
   * 101 covered goals:
   * Goal 1. org.apache.commons.cli.Option.setValueSeparator(C)V: root-Branch
   * Goal 2. org.apache.commons.cli.Option.setArgs(I)V: root-Branch
   * Goal 3. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: root-Branch
   * Goal 4. org.apache.commons.cli.Option.getValueSeparator()C: root-Branch
   * Goal 5. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true
   * Goal 6. org.apache.commons.cli.Option.hasValueSeparator()Z: I4 Branch 10 IFLE L381 - false
   * Goal 7. org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: I4 Branch 11 LOOKUPSWITCH L401 Case -1 - false
   * Goal 8. org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: I4 Branch 12 LOOKUPSWITCH L401 Default-Case - true
   * Goal 9. org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V: I4 Branch 13 IFEQ L425 - false
   * Goal 10. org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V: I20 Branch 14 IF_ICMPEQ L434 - true
   * Goal 11. org.apache.commons.cli.Option.add(Ljava/lang/String;)V: I4 Branch 16 IFLE L468 - true
   * Goal 12. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: root-Branch in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 13. Branch org.apache.commons.cli.Option.setArgs(I)V: root-Branch in context: org.apache.commons.cli.Option:setArgs(I)V
   * Goal 14. Branch org.apache.commons.cli.Option.setValueSeparator(C)V: root-Branch in context: org.apache.commons.cli.Option:setValueSeparator(C)V
   * Goal 15. Branch org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: I4 Branch 12 LOOKUPSWITCH L401 Default-Case - true in context: 
   * Goal 16. Branch org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: I4 Branch 11 LOOKUPSWITCH L401 Case -1 - false in context: 
   * Goal 17. Branch org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V: I4 Branch 13 IFEQ L425 - false in context: 
   * Goal 18. Branch org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V: I20 Branch 14 IF_ICMPEQ L434 - true in context: 
   * Goal 19. Branch org.apache.commons.cli.Option.add(Ljava/lang/String;)V: I4 Branch 16 IFLE L468 - true in context: 
   * Goal 20. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: Line 91
   * Goal 21. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 22. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 23. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 24. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 25. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 26. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 27. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 28. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 29. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 30. org.apache.commons.cli.Option.add(Ljava/lang/String;)V: Line 468
   * Goal 31. org.apache.commons.cli.Option.add(Ljava/lang/String;)V: Line 474
   * Goal 32. org.apache.commons.cli.Option.add(Ljava/lang/String;)V: Line 475
   * Goal 33. org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: Line 401
   * Goal 34. org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: Line 407
   * Goal 35. org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: Line 409
   * Goal 36. org.apache.commons.cli.Option.getValueSeparator()C: Line 370
   * Goal 37. org.apache.commons.cli.Option.hasValueSeparator()Z: Line 381
   * Goal 38. org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V: Line 425
   * Goal 39. org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V: Line 428
   * Goal 40. org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V: Line 431
   * Goal 41. org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V: Line 434
   * Goal 42. org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V: Line 454
   * Goal 43. org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V: Line 455
   * Goal 44. org.apache.commons.cli.Option.setArgs(I)V: Line 349
   * Goal 45. org.apache.commons.cli.Option.setArgs(I)V: Line 350
   * Goal 46. org.apache.commons.cli.Option.setValueSeparator(C)V: Line 360
   * Goal 47. org.apache.commons.cli.Option.setValueSeparator(C)V: Line 361
   * Goal 48. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 49. [METHOD] org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V
   * Goal 50. [METHOD] org.apache.commons.cli.Option.setArgs(I)V
   * Goal 51. [METHOD] org.apache.commons.cli.Option.setValueSeparator(C)V
   * Goal 52. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 53. [METHODNOEX] org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V
   * Goal 54. [METHODNOEX] org.apache.commons.cli.Option.setArgs(I)V
   * Goal 55. [METHODNOEX] org.apache.commons.cli.Option.setValueSeparator(C)V
   * Goal 56. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 57. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 58. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 59. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 60. Weak Mutation 5: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> longOpt
   * Goal 61. Weak Mutation 7: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> longOpt
   * Goal 62. Weak Mutation 8: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> description
   * Goal 63. Weak Mutation 9: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> opt
   * Goal 64. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 65. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 66. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 67. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 68. Weak Mutation 16: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> longOpt
   * Goal 69. Weak Mutation 79: org.apache.commons.cli.Option.setArgs(I)V:349 - ReplaceVariable num -> UNINITIALIZED
   * Goal 70. Weak Mutation 80: org.apache.commons.cli.Option.setArgs(I)V:349 - ReplaceVariable num -> UNLIMITED_VALUES
   * Goal 71. Weak Mutation 81: org.apache.commons.cli.Option.setArgs(I)V:349 - InsertUnaryOp Negation of num
   * Goal 72. Weak Mutation 82: org.apache.commons.cli.Option.setArgs(I)V:349 - InsertUnaryOp IINC 1 num
   * Goal 73. Weak Mutation 83: org.apache.commons.cli.Option.setArgs(I)V:349 - InsertUnaryOp IINC -1 num
   * Goal 74. Weak Mutation 84: org.apache.commons.cli.Option.setValueSeparator(C)V:360 - InsertUnaryOp Negation of sep
   * Goal 75. Weak Mutation 85: org.apache.commons.cli.Option.setValueSeparator(C)V:360 - InsertUnaryOp IINC 1 sep
   * Goal 76. Weak Mutation 86: org.apache.commons.cli.Option.setValueSeparator(C)V:360 - InsertUnaryOp IINC -1 sep
   * Goal 77. Weak Mutation 87: org.apache.commons.cli.Option.hasValueSeparator()Z:381 - ReplaceComparisonOperator <= -> -1
   * Goal 78. Weak Mutation 90: org.apache.commons.cli.Option.hasValueSeparator()Z:381 - ReplaceConstant - 1 -> 0
   * Goal 79. Weak Mutation 97: org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V:401 - ReplaceVariable numberOfArgs -> UNINITIALIZED
   * Goal 80. Weak Mutation 98: org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V:401 - ReplaceVariable numberOfArgs -> UNLIMITED_VALUES
   * Goal 81. Weak Mutation 99: org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V:401 - InsertUnaryOp Negation
   * Goal 82. Weak Mutation 100: org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V:401 - InsertUnaryOp +1
   * Goal 83. Weak Mutation 101: org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V:401 - InsertUnaryOp -1
   * Goal 84. Weak Mutation 104: org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V:425 - ReplaceComparisonOperator == -> !=
   * Goal 85. Weak Mutation 105: org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V:431 - InsertUnaryOp Negation of sep
   * Goal 86. Weak Mutation 106: org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V:431 - InsertUnaryOp IINC 1 sep
   * Goal 87. Weak Mutation 107: org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V:431 - InsertUnaryOp IINC -1 sep
   * Goal 88. Weak Mutation 109: org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V:434 - ReplaceVariable index -> UNLIMITED_VALUES
   * Goal 89. Weak Mutation 110: org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V:434 - InsertUnaryOp Negation of index
   * Goal 90. Weak Mutation 111: org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V:434 - InsertUnaryOp IINC 1 index
   * Goal 91. Weak Mutation 112: org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V:434 - InsertUnaryOp IINC -1 index
   * Goal 92. Weak Mutation 113: org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V:434 - ReplaceConstant - -1 -> 0
   * Goal 93. Weak Mutation 114: org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V:434 - ReplaceConstant - -1 -> 1
   * Goal 94. Weak Mutation 115: org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V:434 - ReplaceConstant - -1 -> -2
   * Goal 95. Weak Mutation 116: org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V:434 - ReplaceComparisonOperator == -> -2
   * Goal 96. Weak Mutation 149: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - ReplaceVariable numberOfArgs -> UNINITIALIZED
   * Goal 97. Weak Mutation 150: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - ReplaceVariable numberOfArgs -> UNLIMITED_VALUES
   * Goal 98. Weak Mutation 151: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - InsertUnaryOp Negation
   * Goal 99. Weak Mutation 152: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - InsertUnaryOp +1
   * Goal 100. Weak Mutation 153: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - InsertUnaryOp -1
   * Goal 101. Weak Mutation 156: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - ReplaceComparisonOperator <= -> <
   */

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Option option0 = new Option("", "");
      option0.setArgs(0);
      option0.setValueSeparator('x');
      option0.addValueForProcessing("");
      assertEquals('x', option0.getValueSeparator());
  }

  //Test case number: 55
  /*
   * 70 covered goals:
   * Goal 1. org.apache.commons.cli.Option.setValueSeparator(C)V: root-Branch
   * Goal 2. org.apache.commons.cli.Option.<init>(Ljava/lang/String;ZLjava/lang/String;)V: root-Branch
   * Goal 3. org.apache.commons.cli.Option.getValueSeparator()C: root-Branch
   * Goal 4. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - false
   * Goal 5. org.apache.commons.cli.Option.hasValueSeparator()Z: I4 Branch 10 IFLE L381 - false
   * Goal 6. org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: I4 Branch 11 LOOKUPSWITCH L401 Case -1 - false
   * Goal 7. org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: I4 Branch 12 LOOKUPSWITCH L401 Default-Case - true
   * Goal 8. org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V: I4 Branch 13 IFEQ L425 - false
   * Goal 9. Branch org.apache.commons.cli.Option.setValueSeparator(C)V: root-Branch in context: org.apache.commons.cli.Option:setValueSeparator(C)V
   * Goal 10. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;ZLjava/lang/String;)V: root-Branch in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 11. Branch org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: I4 Branch 12 LOOKUPSWITCH L401 Default-Case - true in context: 
   * Goal 12. Branch org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: I4 Branch 11 LOOKUPSWITCH L401 Case -1 - false in context: 
   * Goal 13. Branch org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V: I4 Branch 13 IFEQ L425 - false in context: 
   * Goal 14. addValueForProcessing(Ljava/lang/String;)V_java.lang.NullPointerException_IMPLICIT
   * Goal 15. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 16. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 17. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 18. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 19. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 20. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 21. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 22. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 131
   * Goal 23. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 24. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 25. org.apache.commons.cli.Option.<init>(Ljava/lang/String;ZLjava/lang/String;)V: Line 106
   * Goal 26. org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: Line 401
   * Goal 27. org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: Line 407
   * Goal 28. org.apache.commons.cli.Option.getValueSeparator()C: Line 370
   * Goal 29. org.apache.commons.cli.Option.hasValueSeparator()Z: Line 381
   * Goal 30. org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V: Line 425
   * Goal 31. org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V: Line 428
   * Goal 32. org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V: Line 431
   * Goal 33. org.apache.commons.cli.Option.setValueSeparator(C)V: Line 360
   * Goal 34. org.apache.commons.cli.Option.setValueSeparator(C)V: Line 361
   * Goal 35. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 36. [METHOD] org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V
   * Goal 37. [METHOD] org.apache.commons.cli.Option.setValueSeparator(C)V
   * Goal 38. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 39. [METHODNOEX] org.apache.commons.cli.Option.setValueSeparator(C)V
   * Goal 40. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 41. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 42. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 43. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 44. Weak Mutation 4: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> description
   * Goal 45. Weak Mutation 5: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> longOpt
   * Goal 46. Weak Mutation 6: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> description
   * Goal 47. Weak Mutation 7: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> longOpt
   * Goal 48. Weak Mutation 8: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> description
   * Goal 49. Weak Mutation 9: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> opt
   * Goal 50. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 51. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 52. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 53. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 54. Weak Mutation 14: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:131 - ReplaceConstant - 1 -> 0
   * Goal 55. Weak Mutation 15: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> opt
   * Goal 56. Weak Mutation 16: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> longOpt
   * Goal 57. Weak Mutation 84: org.apache.commons.cli.Option.setValueSeparator(C)V:360 - InsertUnaryOp Negation of sep
   * Goal 58. Weak Mutation 85: org.apache.commons.cli.Option.setValueSeparator(C)V:360 - InsertUnaryOp IINC 1 sep
   * Goal 59. Weak Mutation 86: org.apache.commons.cli.Option.setValueSeparator(C)V:360 - InsertUnaryOp IINC -1 sep
   * Goal 60. Weak Mutation 87: org.apache.commons.cli.Option.hasValueSeparator()Z:381 - ReplaceComparisonOperator <= -> -1
   * Goal 61. Weak Mutation 90: org.apache.commons.cli.Option.hasValueSeparator()Z:381 - ReplaceConstant - 1 -> 0
   * Goal 62. Weak Mutation 97: org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V:401 - ReplaceVariable numberOfArgs -> UNINITIALIZED
   * Goal 63. Weak Mutation 98: org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V:401 - ReplaceVariable numberOfArgs -> UNLIMITED_VALUES
   * Goal 64. Weak Mutation 99: org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V:401 - InsertUnaryOp Negation
   * Goal 65. Weak Mutation 100: org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V:401 - InsertUnaryOp +1
   * Goal 66. Weak Mutation 101: org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V:401 - InsertUnaryOp -1
   * Goal 67. Weak Mutation 104: org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V:425 - ReplaceComparisonOperator == -> !=
   * Goal 68. Weak Mutation 105: org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V:431 - InsertUnaryOp Negation of sep
   * Goal 69. Weak Mutation 106: org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V:431 - InsertUnaryOp IINC 1 sep
   * Goal 70. Weak Mutation 107: org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V:431 - InsertUnaryOp IINC -1 sep
   */

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Option option0 = new Option("", true, "9Bi'MxSM.^");
      option0.setValueSeparator('');
      // Undeclared exception!
      try { 
        option0.addValueForProcessing((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.apache.commons.cli.Option", e);
      }
  }

  //Test case number: 56
  /*
   * 45 covered goals:
   * Goal 1. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: root-Branch
   * Goal 2. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true
   * Goal 3. org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: I4 Branch 11 LOOKUPSWITCH L401 Case -1 - true
   * Goal 4. org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: I4 Branch 12 LOOKUPSWITCH L401 Default-Case - false
   * Goal 5. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: root-Branch in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 6. Branch org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: I4 Branch 11 LOOKUPSWITCH L401 Case -1 - true in context: 
   * Goal 7. Branch org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: I4 Branch 12 LOOKUPSWITCH L401 Default-Case - false in context: 
   * Goal 8. addValueForProcessing(Ljava/lang/String;)V_java.lang.RuntimeException_EXPLICIT
   * Goal 9. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: Line 91
   * Goal 10. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 11. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 12. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 13. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 14. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 15. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 16. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 17. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 18. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 19. org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: Line 401
   * Goal 20. org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: Line 404
   * Goal 21. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 22. [METHOD] org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V
   * Goal 23. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 24. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 25. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 26. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 27. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 28. Weak Mutation 4: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> description
   * Goal 29. Weak Mutation 5: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> longOpt
   * Goal 30. Weak Mutation 6: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> description
   * Goal 31. Weak Mutation 7: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> longOpt
   * Goal 32. Weak Mutation 8: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> description
   * Goal 33. Weak Mutation 9: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> opt
   * Goal 34. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 35. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 36. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 37. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 38. Weak Mutation 15: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> opt
   * Goal 39. Weak Mutation 16: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> longOpt
   * Goal 40. Weak Mutation 98: org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V:401 - ReplaceVariable numberOfArgs -> UNLIMITED_VALUES
   * Goal 41. Weak Mutation 99: org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V:401 - InsertUnaryOp Negation
   * Goal 42. Weak Mutation 100: org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V:401 - InsertUnaryOp +1
   * Goal 43. Weak Mutation 101: org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V:401 - InsertUnaryOp -1
   * Goal 44. Weak Mutation 102: org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V:404 - ReplaceConstant - NO_ARGS_ALLOWED -> 
   * Goal 45. Weak Mutation 103: org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V:404 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Option option0 = new Option("NO_ARGS_ALLOWED", "tnUs");
      // Undeclared exception!
      try { 
        option0.addValueForProcessing("v{}3K]^90usAlwl<");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // NO_ARGS_ALLOWED
         //
         assertThrownBy("org.apache.commons.cli.Option", e);
      }
  }

  //Test case number: 57
  /*
   * 93 covered goals:
   * Goal 1. org.apache.commons.cli.Option.setArgs(I)V: root-Branch
   * Goal 2. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: root-Branch
   * Goal 3. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true
   * Goal 4. org.apache.commons.cli.Option.hasValueSeparator()Z: I4 Branch 10 IFLE L381 - true
   * Goal 5. org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: I4 Branch 11 LOOKUPSWITCH L401 Case -1 - false
   * Goal 6. org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: I4 Branch 12 LOOKUPSWITCH L401 Default-Case - true
   * Goal 7. org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V: I4 Branch 13 IFEQ L425 - true
   * Goal 8. org.apache.commons.cli.Option.add(Ljava/lang/String;)V: I4 Branch 16 IFLE L468 - true
   * Goal 9. org.apache.commons.cli.Option.getValue()Ljava/lang/String;: I4 Branch 18 IFEQ L486 - true
   * Goal 10. org.apache.commons.cli.Option.getValue(Ljava/lang/String;)Ljava/lang/String;: I8 Branch 20 IFNULL L520 - false
   * Goal 11. org.apache.commons.cli.Option.hasNoValues()Z: I5 Branch 26 IFLE L590 - true
   * Goal 12. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: root-Branch in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 13. Branch org.apache.commons.cli.Option.setArgs(I)V: root-Branch in context: org.apache.commons.cli.Option:setArgs(I)V
   * Goal 14. Branch org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: I4 Branch 12 LOOKUPSWITCH L401 Default-Case - true in context: 
   * Goal 15. Branch org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: I4 Branch 11 LOOKUPSWITCH L401 Case -1 - false in context: 
   * Goal 16. Branch org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V: I4 Branch 13 IFEQ L425 - true in context: 
   * Goal 17. Branch org.apache.commons.cli.Option.add(Ljava/lang/String;)V: I4 Branch 16 IFLE L468 - true in context: 
   * Goal 18. Branch org.apache.commons.cli.Option.getValue(Ljava/lang/String;)Ljava/lang/String;: I8 Branch 20 IFNULL L520 - false in context: org.apache.commons.cli.Option:getValue(Ljava/lang/String;)Ljava/lang/String;
   * Goal 19. Branch org.apache.commons.cli.Option.hasNoValues()Z: I5 Branch 26 IFLE L590 - true in context: 
   * Goal 20. [Output]: org.apache.commons.cli.Option.getValue(Ljava/lang/String;)Ljava/lang/String;:EmptyString
   * Goal 21. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: Line 91
   * Goal 22. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 23. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 24. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 25. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 26. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 27. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 28. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 29. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 30. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 31. org.apache.commons.cli.Option.add(Ljava/lang/String;)V: Line 468
   * Goal 32. org.apache.commons.cli.Option.add(Ljava/lang/String;)V: Line 474
   * Goal 33. org.apache.commons.cli.Option.add(Ljava/lang/String;)V: Line 475
   * Goal 34. org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: Line 401
   * Goal 35. org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: Line 407
   * Goal 36. org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V: Line 409
   * Goal 37. org.apache.commons.cli.Option.getValue()Ljava/lang/String;: Line 486
   * Goal 38. org.apache.commons.cli.Option.getValue(Ljava/lang/String;)Ljava/lang/String;: Line 518
   * Goal 39. org.apache.commons.cli.Option.getValue(Ljava/lang/String;)Ljava/lang/String;: Line 520
   * Goal 40. org.apache.commons.cli.Option.hasNoValues()Z: Line 590
   * Goal 41. org.apache.commons.cli.Option.hasValueSeparator()Z: Line 381
   * Goal 42. org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V: Line 425
   * Goal 43. org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V: Line 454
   * Goal 44. org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V: Line 455
   * Goal 45. org.apache.commons.cli.Option.setArgs(I)V: Line 349
   * Goal 46. org.apache.commons.cli.Option.setArgs(I)V: Line 350
   * Goal 47. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 48. [METHOD] org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V
   * Goal 49. [METHOD] org.apache.commons.cli.Option.getValue(Ljava/lang/String;)Ljava/lang/String;
   * Goal 50. [METHOD] org.apache.commons.cli.Option.setArgs(I)V
   * Goal 51. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 52. [METHODNOEX] org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V
   * Goal 53. [METHODNOEX] org.apache.commons.cli.Option.getValue(Ljava/lang/String;)Ljava/lang/String;
   * Goal 54. [METHODNOEX] org.apache.commons.cli.Option.setArgs(I)V
   * Goal 55. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 56. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 57. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 58. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 59. Weak Mutation 5: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> longOpt
   * Goal 60. Weak Mutation 7: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> longOpt
   * Goal 61. Weak Mutation 8: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> description
   * Goal 62. Weak Mutation 9: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> opt
   * Goal 63. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 64. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 65. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 66. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 67. Weak Mutation 16: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> longOpt
   * Goal 68. Weak Mutation 79: org.apache.commons.cli.Option.setArgs(I)V:349 - ReplaceVariable num -> UNINITIALIZED
   * Goal 69. Weak Mutation 80: org.apache.commons.cli.Option.setArgs(I)V:349 - ReplaceVariable num -> UNLIMITED_VALUES
   * Goal 70. Weak Mutation 81: org.apache.commons.cli.Option.setArgs(I)V:349 - InsertUnaryOp Negation of num
   * Goal 71. Weak Mutation 82: org.apache.commons.cli.Option.setArgs(I)V:349 - InsertUnaryOp IINC 1 num
   * Goal 72. Weak Mutation 83: org.apache.commons.cli.Option.setArgs(I)V:349 - InsertUnaryOp IINC -1 num
   * Goal 73. Weak Mutation 89: org.apache.commons.cli.Option.hasValueSeparator()Z:381 - ReplaceComparisonOperator <= -> <
   * Goal 74. Weak Mutation 91: org.apache.commons.cli.Option.hasValueSeparator()Z:381 - ReplaceConstant - 0 -> 1
   * Goal 75. Weak Mutation 97: org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V:401 - ReplaceVariable numberOfArgs -> UNINITIALIZED
   * Goal 76. Weak Mutation 98: org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V:401 - ReplaceVariable numberOfArgs -> UNLIMITED_VALUES
   * Goal 77. Weak Mutation 99: org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V:401 - InsertUnaryOp Negation
   * Goal 78. Weak Mutation 100: org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V:401 - InsertUnaryOp +1
   * Goal 79. Weak Mutation 101: org.apache.commons.cli.Option.addValueForProcessing(Ljava/lang/String;)V:401 - InsertUnaryOp -1
   * Goal 80. Weak Mutation 104: org.apache.commons.cli.Option.processValue(Ljava/lang/String;)V:425 - ReplaceComparisonOperator == -> !=
   * Goal 81. Weak Mutation 149: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - ReplaceVariable numberOfArgs -> UNINITIALIZED
   * Goal 82. Weak Mutation 150: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - ReplaceVariable numberOfArgs -> UNLIMITED_VALUES
   * Goal 83. Weak Mutation 151: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - InsertUnaryOp Negation
   * Goal 84. Weak Mutation 152: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - InsertUnaryOp +1
   * Goal 85. Weak Mutation 153: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - InsertUnaryOp -1
   * Goal 86. Weak Mutation 156: org.apache.commons.cli.Option.add(Ljava/lang/String;)V:468 - ReplaceComparisonOperator <= -> <
   * Goal 87. Weak Mutation 172: org.apache.commons.cli.Option.getValue()Ljava/lang/String;:486 - ReplaceComparisonOperator == -> !=
   * Goal 88. Weak Mutation 173: org.apache.commons.cli.Option.getValue()Ljava/lang/String;:486 - ReplaceConstant - 0 -> 1
   * Goal 89. Weak Mutation 180: org.apache.commons.cli.Option.getValue(Ljava/lang/String;)Ljava/lang/String;:520 - ReplaceVariable value -> defaultValue
   * Goal 90. Weak Mutation 181: org.apache.commons.cli.Option.getValue(Ljava/lang/String;)Ljava/lang/String;:520 - ReplaceComparisonOperator = null -> != null
   * Goal 91. Weak Mutation 182: org.apache.commons.cli.Option.getValue(Ljava/lang/String;)Ljava/lang/String;:520 - ReplaceVariable value -> defaultValue
   * Goal 92. Weak Mutation 198: org.apache.commons.cli.Option.hasNoValues()Z:590 - ReplaceComparisonOperator <= -> ==
   * Goal 93. Weak Mutation 201: org.apache.commons.cli.Option.hasNoValues()Z:590 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Option option0 = new Option("", "");
      assertEquals(-1, option0.getArgs());
      
      option0.setArgs(0);
      option0.addValueForProcessing("");
      option0.getValue((String) null);
      assertEquals(0, option0.getArgs());
  }

  //Test case number: 58
  /*
   * 59 covered goals:
   * Goal 1. org.apache.commons.cli.Option.setArgs(I)V: root-Branch
   * Goal 2. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true
   * Goal 3. org.apache.commons.cli.Option.hasArgs()Z: I5 Branch 8 IF_ICMPGT L339 - false
   * Goal 4. org.apache.commons.cli.Option.hasArgs()Z: I9 Branch 9 IF_ICMPNE L339 - false
   * Goal 5. Branch org.apache.commons.cli.Option.setArgs(I)V: root-Branch in context: org.apache.commons.cli.Option:setArgs(I)V
   * Goal 6. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 7. Branch org.apache.commons.cli.Option.hasArgs()Z: I9 Branch 9 IF_ICMPNE L339 - false in context: org.apache.commons.cli.Option:hasArgs()Z
   * Goal 8. Branch org.apache.commons.cli.Option.hasArgs()Z: I5 Branch 8 IF_ICMPGT L339 - false in context: org.apache.commons.cli.Option:hasArgs()Z
   * Goal 9. [Output]: org.apache.commons.cli.Option.hasArgs()Z:True
   * Goal 10. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 11. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 12. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 13. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 14. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 15. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 16. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 17. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 18. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 19. org.apache.commons.cli.Option.hasArgs()Z: Line 339
   * Goal 20. org.apache.commons.cli.Option.setArgs(I)V: Line 349
   * Goal 21. org.apache.commons.cli.Option.setArgs(I)V: Line 350
   * Goal 22. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 23. [METHOD] org.apache.commons.cli.Option.hasArgs()Z
   * Goal 24. [METHOD] org.apache.commons.cli.Option.setArgs(I)V
   * Goal 25. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 26. [METHODNOEX] org.apache.commons.cli.Option.hasArgs()Z
   * Goal 27. [METHODNOEX] org.apache.commons.cli.Option.setArgs(I)V
   * Goal 28. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 29. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 30. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 31. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 32. Weak Mutation 4: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> description
   * Goal 33. Weak Mutation 6: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> description
   * Goal 34. Weak Mutation 8: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> description
   * Goal 35. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 36. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 37. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 38. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 39. Weak Mutation 15: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> opt
   * Goal 40. Weak Mutation 16: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> longOpt
   * Goal 41. Weak Mutation 58: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceVariable numberOfArgs -> UNINITIALIZED
   * Goal 42. Weak Mutation 60: org.apache.commons.cli.Option.hasArgs()Z:339 - InsertUnaryOp Negation
   * Goal 43. Weak Mutation 61: org.apache.commons.cli.Option.hasArgs()Z:339 - InsertUnaryOp +1
   * Goal 44. Weak Mutation 62: org.apache.commons.cli.Option.hasArgs()Z:339 - InsertUnaryOp -1
   * Goal 45. Weak Mutation 63: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceConstant - 1 -> 0
   * Goal 46. Weak Mutation 65: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceVariable numberOfArgs -> UNINITIALIZED
   * Goal 47. Weak Mutation 67: org.apache.commons.cli.Option.hasArgs()Z:339 - InsertUnaryOp Negation
   * Goal 48. Weak Mutation 68: org.apache.commons.cli.Option.hasArgs()Z:339 - InsertUnaryOp +1
   * Goal 49. Weak Mutation 69: org.apache.commons.cli.Option.hasArgs()Z:339 - InsertUnaryOp -1
   * Goal 50. Weak Mutation 70: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceConstant - -2 -> 0
   * Goal 51. Weak Mutation 71: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceConstant - -2 -> 1
   * Goal 52. Weak Mutation 72: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceConstant - -2 -> -1
   * Goal 53. Weak Mutation 73: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceConstant - -2 -> -3
   * Goal 54. Weak Mutation 74: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceComparisonOperator != -> -1
   * Goal 55. Weak Mutation 77: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceConstant - 1 -> 0
   * Goal 56. Weak Mutation 79: org.apache.commons.cli.Option.setArgs(I)V:349 - ReplaceVariable num -> UNINITIALIZED
   * Goal 57. Weak Mutation 81: org.apache.commons.cli.Option.setArgs(I)V:349 - InsertUnaryOp Negation of num
   * Goal 58. Weak Mutation 82: org.apache.commons.cli.Option.setArgs(I)V:349 - InsertUnaryOp IINC 1 num
   * Goal 59. Weak Mutation 83: org.apache.commons.cli.Option.setArgs(I)V:349 - InsertUnaryOp IINC -1 num
   */

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Option option0 = new Option("", "", false, "arg");
      assertFalse(option0.hasArg());
      
      option0.setArgs((-2));
      boolean boolean0 = option0.hasArgs();
      assertEquals(-2, option0.getArgs());
      assertTrue(boolean0);
  }

  //Test case number: 59
  /*
   * 76 covered goals:
   * Goal 1. org.apache.commons.cli.Option.setArgs(I)V: root-Branch
   * Goal 2. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true
   * Goal 3. org.apache.commons.cli.Option.hasArgs()Z: I5 Branch 8 IF_ICMPGT L339 - true
   * Goal 4. org.apache.commons.cli.Option.toString()Ljava/lang/String;: I19 Branch 22 IFNULL L555 - false
   * Goal 5. org.apache.commons.cli.Option.toString()Ljava/lang/String;: I39 Branch 23 IFEQ L562 - false
   * Goal 6. org.apache.commons.cli.Option.toString()Ljava/lang/String;: I71 Branch 25 IFNULL L573 - true
   * Goal 7. Branch org.apache.commons.cli.Option.setArgs(I)V: root-Branch in context: org.apache.commons.cli.Option:setArgs(I)V
   * Goal 8. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 9. Branch org.apache.commons.cli.Option.toString()Ljava/lang/String;: I19 Branch 22 IFNULL L555 - false in context: org.apache.commons.cli.Option:toString()Ljava/lang/String;
   * Goal 10. Branch org.apache.commons.cli.Option.toString()Ljava/lang/String;: I39 Branch 23 IFEQ L562 - false in context: org.apache.commons.cli.Option:toString()Ljava/lang/String;
   * Goal 11. Branch org.apache.commons.cli.Option.toString()Ljava/lang/String;: I71 Branch 25 IFNULL L573 - true in context: org.apache.commons.cli.Option:toString()Ljava/lang/String;
   * Goal 12. [Output]: org.apache.commons.cli.Option.toString()Ljava/lang/String;:NonEmptyString
   * Goal 13. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 14. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 15. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 16. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 17. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 18. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 19. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 20. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 21. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 22. org.apache.commons.cli.Option.hasArgs()Z: Line 339
   * Goal 23. org.apache.commons.cli.Option.setArgs(I)V: Line 349
   * Goal 24. org.apache.commons.cli.Option.setArgs(I)V: Line 350
   * Goal 25. org.apache.commons.cli.Option.toString()Ljava/lang/String;: Line 551
   * Goal 26. org.apache.commons.cli.Option.toString()Ljava/lang/String;: Line 553
   * Goal 27. org.apache.commons.cli.Option.toString()Ljava/lang/String;: Line 555
   * Goal 28. org.apache.commons.cli.Option.toString()Ljava/lang/String;: Line 557
   * Goal 29. org.apache.commons.cli.Option.toString()Ljava/lang/String;: Line 560
   * Goal 30. org.apache.commons.cli.Option.toString()Ljava/lang/String;: Line 562
   * Goal 31. org.apache.commons.cli.Option.toString()Ljava/lang/String;: Line 564
   * Goal 32. org.apache.commons.cli.Option.toString()Ljava/lang/String;: Line 571
   * Goal 33. org.apache.commons.cli.Option.toString()Ljava/lang/String;: Line 573
   * Goal 34. org.apache.commons.cli.Option.toString()Ljava/lang/String;: Line 578
   * Goal 35. org.apache.commons.cli.Option.toString()Ljava/lang/String;: Line 580
   * Goal 36. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 37. [METHOD] org.apache.commons.cli.Option.setArgs(I)V
   * Goal 38. [METHOD] org.apache.commons.cli.Option.toString()Ljava/lang/String;
   * Goal 39. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 40. [METHODNOEX] org.apache.commons.cli.Option.setArgs(I)V
   * Goal 41. [METHODNOEX] org.apache.commons.cli.Option.toString()Ljava/lang/String;
   * Goal 42. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 43. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 44. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 45. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 46. Weak Mutation 4: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> description
   * Goal 47. Weak Mutation 6: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> description
   * Goal 48. Weak Mutation 8: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> description
   * Goal 49. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 50. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 51. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 52. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 53. Weak Mutation 15: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> opt
   * Goal 54. Weak Mutation 16: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> longOpt
   * Goal 55. Weak Mutation 58: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceVariable numberOfArgs -> UNINITIALIZED
   * Goal 56. Weak Mutation 59: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceVariable numberOfArgs -> UNLIMITED_VALUES
   * Goal 57. Weak Mutation 60: org.apache.commons.cli.Option.hasArgs()Z:339 - InsertUnaryOp Negation
   * Goal 58. Weak Mutation 61: org.apache.commons.cli.Option.hasArgs()Z:339 - InsertUnaryOp +1
   * Goal 59. Weak Mutation 62: org.apache.commons.cli.Option.hasArgs()Z:339 - InsertUnaryOp -1
   * Goal 60. Weak Mutation 63: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceConstant - 1 -> 0
   * Goal 61. Weak Mutation 64: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceComparisonOperator > -> ==
   * Goal 62. Weak Mutation 77: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceConstant - 1 -> 0
   * Goal 63. Weak Mutation 79: org.apache.commons.cli.Option.setArgs(I)V:349 - ReplaceVariable num -> UNINITIALIZED
   * Goal 64. Weak Mutation 80: org.apache.commons.cli.Option.setArgs(I)V:349 - ReplaceVariable num -> UNLIMITED_VALUES
   * Goal 65. Weak Mutation 81: org.apache.commons.cli.Option.setArgs(I)V:349 - InsertUnaryOp Negation of num
   * Goal 66. Weak Mutation 82: org.apache.commons.cli.Option.setArgs(I)V:349 - InsertUnaryOp IINC 1 num
   * Goal 67. Weak Mutation 83: org.apache.commons.cli.Option.setArgs(I)V:349 - InsertUnaryOp IINC -1 num
   * Goal 68. Weak Mutation 185: org.apache.commons.cli.Option.toString()Ljava/lang/String;:551 - ReplaceConstant - [ option:  -> 
   * Goal 69. Weak Mutation 186: org.apache.commons.cli.Option.toString()Ljava/lang/String;:555 - ReplaceComparisonOperator = null -> != null
   * Goal 70. Weak Mutation 187: org.apache.commons.cli.Option.toString()Ljava/lang/String;:557 - ReplaceConstant -   -> 
   * Goal 71. Weak Mutation 188: org.apache.commons.cli.Option.toString()Ljava/lang/String;:560 - ReplaceConstant -   -> 
   * Goal 72. Weak Mutation 189: org.apache.commons.cli.Option.toString()Ljava/lang/String;:562 - ReplaceComparisonOperator == -> !=
   * Goal 73. Weak Mutation 190: org.apache.commons.cli.Option.toString()Ljava/lang/String;:564 - ReplaceConstant - [ARG...] -> 
   * Goal 74. Weak Mutation 193: org.apache.commons.cli.Option.toString()Ljava/lang/String;:571 - ReplaceConstant -  ::  -> 
   * Goal 75. Weak Mutation 194: org.apache.commons.cli.Option.toString()Ljava/lang/String;:573 - ReplaceComparisonOperator = null -> != null
   * Goal 76. Weak Mutation 196: org.apache.commons.cli.Option.toString()Ljava/lang/String;:578 - ReplaceConstant -  ] -> 
   */

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Option option0 = new Option("", "", false, "NO_ARGS_ALLOWED");
      option0.setArgs(3008);
      option0.toString();
      assertEquals(3008, option0.getArgs());
  }

  //Test case number: 60
  /*
   * 45 covered goals:
   * Goal 1. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: root-Branch
   * Goal 2. org.apache.commons.cli.Option.setArgName(Ljava/lang/String;)V: root-Branch
   * Goal 3. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true
   * Goal 4. org.apache.commons.cli.Option.hasArgName()Z: I4 Branch 6 IFNULL L329 - false
   * Goal 5. org.apache.commons.cli.Option.hasArgName()Z: I8 Branch 7 IFLE L329 - true
   * Goal 6. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: root-Branch in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 7. Branch org.apache.commons.cli.Option.setArgName(Ljava/lang/String;)V: root-Branch in context: org.apache.commons.cli.Option:setArgName(Ljava/lang/String;)V
   * Goal 8. Branch org.apache.commons.cli.Option.hasArgName()Z: I8 Branch 7 IFLE L329 - true in context: org.apache.commons.cli.Option:hasArgName()Z
   * Goal 9. Branch org.apache.commons.cli.Option.hasArgName()Z: I4 Branch 6 IFNULL L329 - false in context: org.apache.commons.cli.Option:hasArgName()Z
   * Goal 10. [Output]: org.apache.commons.cli.Option.hasArgName()Z:False
   * Goal 11. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: Line 91
   * Goal 12. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 13. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 14. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 15. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 16. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 17. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 18. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 19. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 20. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 21. org.apache.commons.cli.Option.hasArgName()Z: Line 329
   * Goal 22. org.apache.commons.cli.Option.setArgName(Ljava/lang/String;)V: Line 307
   * Goal 23. org.apache.commons.cli.Option.setArgName(Ljava/lang/String;)V: Line 308
   * Goal 24. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 25. [METHOD] org.apache.commons.cli.Option.hasArgName()Z
   * Goal 26. [METHOD] org.apache.commons.cli.Option.setArgName(Ljava/lang/String;)V
   * Goal 27. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 28. [METHODNOEX] org.apache.commons.cli.Option.hasArgName()Z
   * Goal 29. [METHODNOEX] org.apache.commons.cli.Option.setArgName(Ljava/lang/String;)V
   * Goal 30. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 31. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 32. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 33. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 34. Weak Mutation 5: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> longOpt
   * Goal 35. Weak Mutation 7: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> longOpt
   * Goal 36. Weak Mutation 8: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> description
   * Goal 37. Weak Mutation 9: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> opt
   * Goal 38. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 39. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 40. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 41. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 42. Weak Mutation 16: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> longOpt
   * Goal 43. Weak Mutation 52: org.apache.commons.cli.Option.hasArgName()Z:329 - ReplaceComparisonOperator = null -> != null
   * Goal 44. Weak Mutation 55: org.apache.commons.cli.Option.hasArgName()Z:329 - ReplaceComparisonOperator <= -> <
   * Goal 45. Weak Mutation 57: org.apache.commons.cli.Option.hasArgName()Z:329 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Option option0 = new Option("", "");
      assertEquals("arg", option0.getArgName());
      
      option0.setArgName("");
      boolean boolean0 = option0.hasArgName();
      assertFalse(boolean0);
  }

  //Test case number: 61
  /*
   * 37 covered goals:
   * Goal 1. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true
   * Goal 2. org.apache.commons.cli.Option.hasArgName()Z: I4 Branch 6 IFNULL L329 - false
   * Goal 3. org.apache.commons.cli.Option.hasArgName()Z: I8 Branch 7 IFLE L329 - false
   * Goal 4. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 5. Branch org.apache.commons.cli.Option.hasArgName()Z: I8 Branch 7 IFLE L329 - false in context: org.apache.commons.cli.Option:hasArgName()Z
   * Goal 6. Branch org.apache.commons.cli.Option.hasArgName()Z: I4 Branch 6 IFNULL L329 - false in context: org.apache.commons.cli.Option:hasArgName()Z
   * Goal 7. [Output]: org.apache.commons.cli.Option.hasArgName()Z:True
   * Goal 8. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 9. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 10. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 11. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 12. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 13. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 14. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 15. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 16. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 17. org.apache.commons.cli.Option.hasArgName()Z: Line 329
   * Goal 18. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 19. [METHOD] org.apache.commons.cli.Option.hasArgName()Z
   * Goal 20. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 21. [METHODNOEX] org.apache.commons.cli.Option.hasArgName()Z
   * Goal 22. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 23. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 24. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 25. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 26. Weak Mutation 4: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> description
   * Goal 27. Weak Mutation 6: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> description
   * Goal 28. Weak Mutation 8: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> description
   * Goal 29. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 30. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 31. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 32. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 33. Weak Mutation 15: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> opt
   * Goal 34. Weak Mutation 16: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> longOpt
   * Goal 35. Weak Mutation 52: org.apache.commons.cli.Option.hasArgName()Z:329 - ReplaceComparisonOperator = null -> != null
   * Goal 36. Weak Mutation 53: org.apache.commons.cli.Option.hasArgName()Z:329 - ReplaceComparisonOperator <= -> -1
   * Goal 37. Weak Mutation 56: org.apache.commons.cli.Option.hasArgName()Z:329 - ReplaceConstant - 1 -> 0
   */

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Option option0 = new Option("", "", false, "NO_ARGS_ALLOWED");
      boolean boolean0 = option0.hasArgName();
      assertEquals("", option0.getOpt());
      assertEquals(-1, option0.getArgs());
      assertEquals("NO_ARGS_ALLOWED", option0.getDescription());
      assertEquals("", option0.getLongOpt());
      assertTrue(boolean0);
  }

  //Test case number: 62
  /*
   * 37 covered goals:
   * Goal 1. org.apache.commons.cli.Option.setArgName(Ljava/lang/String;)V: root-Branch
   * Goal 2. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - false
   * Goal 3. org.apache.commons.cli.Option.hasArgName()Z: I4 Branch 6 IFNULL L329 - true
   * Goal 4. Branch org.apache.commons.cli.Option.setArgName(Ljava/lang/String;)V: root-Branch in context: org.apache.commons.cli.Option:setArgName(Ljava/lang/String;)V
   * Goal 5. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - false in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 6. Branch org.apache.commons.cli.Option.hasArgName()Z: I4 Branch 6 IFNULL L329 - true in context: org.apache.commons.cli.Option:hasArgName()Z
   * Goal 7. [Output]: org.apache.commons.cli.Option.hasArgName()Z:False
   * Goal 8. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 9. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 10. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 11. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 12. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 13. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 14. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 15. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 131
   * Goal 16. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 17. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 18. org.apache.commons.cli.Option.hasArgName()Z: Line 329
   * Goal 19. org.apache.commons.cli.Option.setArgName(Ljava/lang/String;)V: Line 307
   * Goal 20. org.apache.commons.cli.Option.setArgName(Ljava/lang/String;)V: Line 308
   * Goal 21. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 22. [METHOD] org.apache.commons.cli.Option.hasArgName()Z
   * Goal 23. [METHOD] org.apache.commons.cli.Option.setArgName(Ljava/lang/String;)V
   * Goal 24. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 25. [METHODNOEX] org.apache.commons.cli.Option.hasArgName()Z
   * Goal 26. [METHODNOEX] org.apache.commons.cli.Option.setArgName(Ljava/lang/String;)V
   * Goal 27. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 28. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 29. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 30. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 31. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 32. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 33. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 34. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 35. Weak Mutation 14: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:131 - ReplaceConstant - 1 -> 0
   * Goal 36. Weak Mutation 52: org.apache.commons.cli.Option.hasArgName()Z:329 - ReplaceComparisonOperator = null -> != null
   * Goal 37. Weak Mutation 57: org.apache.commons.cli.Option.hasArgName()Z:329 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Option option0 = new Option((String) null, (String) null, true, (String) null);
      assertTrue(option0.hasArgName());
      
      option0.setArgName((String) null);
      boolean boolean0 = option0.hasArgName();
      assertFalse(boolean0);
  }

  //Test case number: 63
  /*
   * 34 covered goals:
   * Goal 1. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true
   * Goal 2. org.apache.commons.cli.Option.hasLongOpt()Z: I4 Branch 3 IFNULL L246 - false
   * Goal 3. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 4. Branch org.apache.commons.cli.Option.hasLongOpt()Z: I4 Branch 3 IFNULL L246 - false in context: org.apache.commons.cli.Option:hasLongOpt()Z
   * Goal 5. [Output]: org.apache.commons.cli.Option.hasLongOpt()Z:True
   * Goal 6. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 7. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 8. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 9. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 10. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 11. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 12. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 13. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 14. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 15. org.apache.commons.cli.Option.hasLongOpt()Z: Line 246
   * Goal 16. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 17. [METHOD] org.apache.commons.cli.Option.hasLongOpt()Z
   * Goal 18. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 19. [METHODNOEX] org.apache.commons.cli.Option.hasLongOpt()Z
   * Goal 20. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 21. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 22. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 23. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 24. Weak Mutation 4: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> description
   * Goal 25. Weak Mutation 6: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> description
   * Goal 26. Weak Mutation 8: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> description
   * Goal 27. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 28. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 29. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 30. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 31. Weak Mutation 15: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> opt
   * Goal 32. Weak Mutation 16: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> longOpt
   * Goal 33. Weak Mutation 23: org.apache.commons.cli.Option.hasLongOpt()Z:246 - ReplaceComparisonOperator = null -> != null
   * Goal 34. Weak Mutation 24: org.apache.commons.cli.Option.hasLongOpt()Z:246 - ReplaceConstant - 1 -> 0
   */

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Option option0 = new Option("", "", false, "NO_ARGS_ALLOWED");
      boolean boolean0 = option0.hasLongOpt();
      assertEquals("", option0.getLongOpt());
      assertTrue(boolean0);
      assertEquals("arg", option0.getArgName());
      assertEquals(-1, option0.getArgs());
      assertEquals("", option0.getOpt());
      assertEquals("NO_ARGS_ALLOWED", option0.getDescription());
  }

  //Test case number: 64
  /*
   * 36 covered goals:
   * Goal 1. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: root-Branch
   * Goal 2. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true
   * Goal 3. org.apache.commons.cli.Option.hasLongOpt()Z: I4 Branch 3 IFNULL L246 - true
   * Goal 4. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: root-Branch in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 5. Branch org.apache.commons.cli.Option.hasLongOpt()Z: I4 Branch 3 IFNULL L246 - true in context: org.apache.commons.cli.Option:hasLongOpt()Z
   * Goal 6. [Output]: org.apache.commons.cli.Option.hasLongOpt()Z:False
   * Goal 7. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: Line 91
   * Goal 8. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 9. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 10. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 11. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 12. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 13. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 14. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 15. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 16. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 17. org.apache.commons.cli.Option.hasLongOpt()Z: Line 246
   * Goal 18. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 19. [METHOD] org.apache.commons.cli.Option.hasLongOpt()Z
   * Goal 20. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 21. [METHODNOEX] org.apache.commons.cli.Option.hasLongOpt()Z
   * Goal 22. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 23. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 24. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 25. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 26. Weak Mutation 5: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> longOpt
   * Goal 27. Weak Mutation 7: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> longOpt
   * Goal 28. Weak Mutation 8: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> description
   * Goal 29. Weak Mutation 9: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> opt
   * Goal 30. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 31. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 32. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 33. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 34. Weak Mutation 16: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> longOpt
   * Goal 35. Weak Mutation 23: org.apache.commons.cli.Option.hasLongOpt()Z:246 - ReplaceComparisonOperator = null -> != null
   * Goal 36. Weak Mutation 25: org.apache.commons.cli.Option.hasLongOpt()Z:246 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Option option0 = new Option("", "");
      boolean boolean0 = option0.hasLongOpt();
      assertTrue(option0.hasArgName());
      assertFalse(boolean0);
      assertEquals(-1, option0.getArgs());
  }

  //Test case number: 65
  /*
   * 34 covered goals:
   * Goal 1. org.apache.commons.cli.Option.getId()I: root-Branch
   * Goal 2. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - false
   * Goal 3. org.apache.commons.cli.Option.getKey()Ljava/lang/String;: I4 Branch 2 IFNONNULL L157 - false
   * Goal 4. Branch org.apache.commons.cli.Option.getId()I: root-Branch in context: org.apache.commons.cli.Option:getId()I
   * Goal 5. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - false in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 6. Branch org.apache.commons.cli.Option.getKey()Ljava/lang/String;: I4 Branch 2 IFNONNULL L157 - false in context: 
   * Goal 7. getId()I_java.lang.NullPointerException_IMPLICIT
   * Goal 8. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 9. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 10. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 11. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 12. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 13. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 14. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 15. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 131
   * Goal 16. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 17. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 18. org.apache.commons.cli.Option.getId()I: Line 146
   * Goal 19. org.apache.commons.cli.Option.getKey()Ljava/lang/String;: Line 157
   * Goal 20. org.apache.commons.cli.Option.getKey()Ljava/lang/String;: Line 159
   * Goal 21. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 22. [METHOD] org.apache.commons.cli.Option.getId()I
   * Goal 23. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 24. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 25. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 26. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 27. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 28. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 29. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 30. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 31. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 32. Weak Mutation 14: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:131 - ReplaceConstant - 1 -> 0
   * Goal 33. Weak Mutation 17: org.apache.commons.cli.Option.getId()I:146 - ReplaceConstant - 0 -> 1
   * Goal 34. Weak Mutation 18: org.apache.commons.cli.Option.getKey()Ljava/lang/String;:157 - ReplaceComparisonOperator != null -> = null
   */

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Option option0 = new Option((String) null, (String) null, true, (String) null);
      // Undeclared exception!
      try { 
        option0.getId();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.apache.commons.cli.Option", e);
      }
  }

  //Test case number: 66
  /*
   * 39 covered goals:
   * Goal 1. org.apache.commons.cli.Option.<init>(Ljava/lang/String;ZLjava/lang/String;)V: root-Branch
   * Goal 2. org.apache.commons.cli.Option.clearValues()V: root-Branch
   * Goal 3. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - false
   * Goal 4. Branch org.apache.commons.cli.Option.clearValues()V: root-Branch in context: 
   * Goal 5. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;ZLjava/lang/String;)V: root-Branch in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 6. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 7. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 8. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 9. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 10. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 11. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 12. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 13. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 131
   * Goal 14. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 15. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 16. org.apache.commons.cli.Option.<init>(Ljava/lang/String;ZLjava/lang/String;)V: Line 106
   * Goal 17. org.apache.commons.cli.Option.clearValues()V: Line 659
   * Goal 18. org.apache.commons.cli.Option.clearValues()V: Line 660
   * Goal 19. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 20. [METHOD] org.apache.commons.cli.Option.clearValues()V
   * Goal 21. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 22. [METHODNOEX] org.apache.commons.cli.Option.clearValues()V
   * Goal 23. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 24. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 25. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 26. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 27. Weak Mutation 4: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> description
   * Goal 28. Weak Mutation 5: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> longOpt
   * Goal 29. Weak Mutation 6: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> description
   * Goal 30. Weak Mutation 7: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> longOpt
   * Goal 31. Weak Mutation 8: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> description
   * Goal 32. Weak Mutation 9: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> opt
   * Goal 33. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 34. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 35. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 36. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 37. Weak Mutation 14: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:131 - ReplaceConstant - 1 -> 0
   * Goal 38. Weak Mutation 15: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> opt
   * Goal 39. Weak Mutation 16: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> longOpt
   */

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Option option0 = new Option("", true, "9Bi'MxSM.^");
      option0.clearValues();
      assertEquals(1, option0.getArgs());
      assertTrue(option0.hasArgName());
      assertEquals("", option0.getOpt());
      assertFalse(option0.hasLongOpt());
      assertEquals("9Bi'MxSM.^", option0.getDescription());
  }

  //Test case number: 67
  /*
   * 41 covered goals:
   * Goal 1. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: root-Branch
   * Goal 2. org.apache.commons.cli.Option.getArgs()I: root-Branch
   * Goal 3. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true
   * Goal 4. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: root-Branch in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 5. Branch org.apache.commons.cli.Option.getArgs()I: root-Branch in context: org.apache.commons.cli.Option:getArgs()I
   * Goal 6. [Output]: org.apache.commons.cli.Option.getArgs()I:Negative
   * Goal 7. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: Line 91
   * Goal 8. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 9. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 10. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 11. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 12. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 13. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 14. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 15. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 16. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 17. org.apache.commons.cli.Option.getArgs()I: Line 391
   * Goal 18. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 19. [METHOD] org.apache.commons.cli.Option.getArgs()I
   * Goal 20. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 21. [METHODNOEX] org.apache.commons.cli.Option.getArgs()I
   * Goal 22. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 23. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 24. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 25. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 26. Weak Mutation 4: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> description
   * Goal 27. Weak Mutation 5: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> longOpt
   * Goal 28. Weak Mutation 6: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> description
   * Goal 29. Weak Mutation 7: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> longOpt
   * Goal 30. Weak Mutation 8: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> description
   * Goal 31. Weak Mutation 9: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> opt
   * Goal 32. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 33. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 34. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 35. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 36. Weak Mutation 15: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> opt
   * Goal 37. Weak Mutation 16: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> longOpt
   * Goal 38. Weak Mutation 93: org.apache.commons.cli.Option.getArgs()I:391 - ReplaceVariable numberOfArgs -> UNLIMITED_VALUES
   * Goal 39. Weak Mutation 94: org.apache.commons.cli.Option.getArgs()I:391 - InsertUnaryOp Negation
   * Goal 40. Weak Mutation 95: org.apache.commons.cli.Option.getArgs()I:391 - InsertUnaryOp +1
   * Goal 41. Weak Mutation 96: org.apache.commons.cli.Option.getArgs()I:391 - InsertUnaryOp -1
   */

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      Option option0 = new Option("", "");
      int int0 = option0.getArgs();
      assertEquals((-1), int0);
      assertEquals("arg", option0.getArgName());
      assertFalse(option0.hasLongOpt());
  }

  //Test case number: 68
  /*
   * 34 covered goals:
   * Goal 1. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: root-Branch
   * Goal 2. org.apache.commons.cli.Option.getValueSeparator()C: root-Branch
   * Goal 3. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true
   * Goal 4. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: root-Branch in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 5. Branch org.apache.commons.cli.Option.getValueSeparator()C: root-Branch in context: org.apache.commons.cli.Option:getValueSeparator()C
   * Goal 6. [Output]: org.apache.commons.cli.Option.getValueSeparator()C:OtherChar
   * Goal 7. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: Line 91
   * Goal 8. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 9. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 10. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 11. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 12. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 13. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 14. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 15. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 16. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 17. org.apache.commons.cli.Option.getValueSeparator()C: Line 370
   * Goal 18. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 19. [METHOD] org.apache.commons.cli.Option.getValueSeparator()C
   * Goal 20. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 21. [METHODNOEX] org.apache.commons.cli.Option.getValueSeparator()C
   * Goal 22. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 23. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 24. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 25. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 26. Weak Mutation 5: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> longOpt
   * Goal 27. Weak Mutation 7: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> longOpt
   * Goal 28. Weak Mutation 8: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> description
   * Goal 29. Weak Mutation 9: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> opt
   * Goal 30. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 31. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 32. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 33. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 34. Weak Mutation 16: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> longOpt
   */

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Option option0 = new Option("", "");
      option0.getValueSeparator();
      assertEquals("arg", option0.getArgName());
      assertFalse(option0.hasLongOpt());
      assertEquals(-1, option0.getArgs());
  }

  //Test case number: 69
  /*
   * 37 covered goals:
   * Goal 1. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: root-Branch
   * Goal 2. org.apache.commons.cli.Option.getOpt()Ljava/lang/String;: root-Branch
   * Goal 3. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true
   * Goal 4. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: root-Branch in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 5. Branch org.apache.commons.cli.Option.getOpt()Ljava/lang/String;: root-Branch in context: org.apache.commons.cli.Option:getOpt()Ljava/lang/String;
   * Goal 6. [Output]: org.apache.commons.cli.Option.getOpt()Ljava/lang/String;:EmptyString
   * Goal 7. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: Line 91
   * Goal 8. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 9. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 10. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 11. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 12. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 13. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 14. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 15. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 16. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 17. org.apache.commons.cli.Option.getOpt()Ljava/lang/String;: Line 177
   * Goal 18. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 19. [METHOD] org.apache.commons.cli.Option.getOpt()Ljava/lang/String;
   * Goal 20. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 21. [METHODNOEX] org.apache.commons.cli.Option.getOpt()Ljava/lang/String;
   * Goal 22. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 23. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 24. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 25. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 26. Weak Mutation 4: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> description
   * Goal 27. Weak Mutation 5: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> longOpt
   * Goal 28. Weak Mutation 6: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> description
   * Goal 29. Weak Mutation 7: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> longOpt
   * Goal 30. Weak Mutation 8: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> description
   * Goal 31. Weak Mutation 9: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> opt
   * Goal 32. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 33. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 34. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 35. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 36. Weak Mutation 15: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> opt
   * Goal 37. Weak Mutation 16: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> longOpt
   */

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      Option option0 = new Option("", "");
      String string0 = option0.getOpt();
      assertNotNull(string0);
      assertFalse(option0.hasLongOpt());
      assertEquals(-1, option0.getArgs());
      assertTrue(option0.hasArgName());
  }

  //Test case number: 70
  /*
   * 33 covered goals:
   * Goal 1. org.apache.commons.cli.Option.hasOptionalArg()Z: root-Branch
   * Goal 2. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true
   * Goal 3. Branch org.apache.commons.cli.Option.hasOptionalArg()Z: root-Branch in context: org.apache.commons.cli.Option:hasOptionalArg()Z
   * Goal 4. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 5. [Output]: org.apache.commons.cli.Option.hasOptionalArg()Z:False
   * Goal 6. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 7. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 8. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 9. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 10. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 11. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 12. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 13. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 14. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 15. org.apache.commons.cli.Option.hasOptionalArg()Z: Line 236
   * Goal 16. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 17. [METHOD] org.apache.commons.cli.Option.hasOptionalArg()Z
   * Goal 18. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 19. [METHODNOEX] org.apache.commons.cli.Option.hasOptionalArg()Z
   * Goal 20. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 21. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 22. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 23. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 24. Weak Mutation 4: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> description
   * Goal 25. Weak Mutation 6: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> description
   * Goal 26. Weak Mutation 8: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> description
   * Goal 27. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 28. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 29. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 30. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 31. Weak Mutation 15: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> opt
   * Goal 32. Weak Mutation 16: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> longOpt
   * Goal 33. Weak Mutation 22: org.apache.commons.cli.Option.hasOptionalArg()Z:236 - InsertUnaryOp Negation
   */

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      Option option0 = new Option("", "", false, "NO_ARGS_ALLOWED");
      option0.hasOptionalArg();
      assertEquals("NO_ARGS_ALLOWED", option0.getDescription());
      assertTrue(option0.hasArgName());
      assertEquals("", option0.getOpt());
      assertEquals(-1, option0.getArgs());
      assertEquals("", option0.getLongOpt());
  }

  //Test case number: 71
  /*
   * 32 covered goals:
   * Goal 1. org.apache.commons.cli.Option.setDescription(Ljava/lang/String;)V: root-Branch
   * Goal 2. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true
   * Goal 3. Branch org.apache.commons.cli.Option.setDescription(Ljava/lang/String;)V: root-Branch in context: org.apache.commons.cli.Option:setDescription(Ljava/lang/String;)V
   * Goal 4. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 5. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 6. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 7. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 8. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 9. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 10. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 11. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 12. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 13. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 14. org.apache.commons.cli.Option.setDescription(Ljava/lang/String;)V: Line 277
   * Goal 15. org.apache.commons.cli.Option.setDescription(Ljava/lang/String;)V: Line 278
   * Goal 16. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 17. [METHOD] org.apache.commons.cli.Option.setDescription(Ljava/lang/String;)V
   * Goal 18. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 19. [METHODNOEX] org.apache.commons.cli.Option.setDescription(Ljava/lang/String;)V
   * Goal 20. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 21. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 22. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 23. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 24. Weak Mutation 4: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> description
   * Goal 25. Weak Mutation 6: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> description
   * Goal 26. Weak Mutation 8: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> description
   * Goal 27. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 28. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 29. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 30. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 31. Weak Mutation 15: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> opt
   * Goal 32. Weak Mutation 16: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> longOpt
   */

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      Option option0 = new Option("", "", false, "NO_ARGS_ALLOWED");
      assertEquals("NO_ARGS_ALLOWED", option0.getDescription());
      
      option0.setDescription("oB+nL^^2y");
      assertEquals("", option0.getLongOpt());
  }

  //Test case number: 72
  /*
   * 37 covered goals:
   * Goal 1. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: root-Branch
   * Goal 2. org.apache.commons.cli.Option.getType()Ljava/lang/Object;: root-Branch
   * Goal 3. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true
   * Goal 4. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: root-Branch in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 5. Branch org.apache.commons.cli.Option.getType()Ljava/lang/Object;: root-Branch in context: org.apache.commons.cli.Option:getType()Ljava/lang/Object;
   * Goal 6. [Output]: org.apache.commons.cli.Option.getType()Ljava/lang/Object;:Null
   * Goal 7. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: Line 91
   * Goal 8. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 9. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 10. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 11. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 12. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 13. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 14. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 15. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 16. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 17. org.apache.commons.cli.Option.getType()Ljava/lang/Object;: Line 187
   * Goal 18. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 19. [METHOD] org.apache.commons.cli.Option.getType()Ljava/lang/Object;
   * Goal 20. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 21. [METHODNOEX] org.apache.commons.cli.Option.getType()Ljava/lang/Object;
   * Goal 22. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 23. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 24. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 25. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 26. Weak Mutation 4: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> description
   * Goal 27. Weak Mutation 5: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> longOpt
   * Goal 28. Weak Mutation 6: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> description
   * Goal 29. Weak Mutation 7: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> longOpt
   * Goal 30. Weak Mutation 8: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> description
   * Goal 31. Weak Mutation 9: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> opt
   * Goal 32. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 33. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 34. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 35. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 36. Weak Mutation 15: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> opt
   * Goal 37. Weak Mutation 16: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> longOpt
   */

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      Option option0 = new Option("", "");
      option0.getType();
      assertFalse(option0.hasLongOpt());
      assertEquals(-1, option0.getArgs());
      assertTrue(option0.hasArgName());
  }

  //Test case number: 73
  /*
   * 39 covered goals:
   * Goal 1. org.apache.commons.cli.Option.getId()I: root-Branch
   * Goal 2. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - false
   * Goal 3. org.apache.commons.cli.Option.getKey()Ljava/lang/String;: I4 Branch 2 IFNONNULL L157 - true
   * Goal 4. Branch org.apache.commons.cli.Option.getId()I: root-Branch in context: org.apache.commons.cli.Option:getId()I
   * Goal 5. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - false in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 6. Branch org.apache.commons.cli.Option.getKey()Ljava/lang/String;: I4 Branch 2 IFNONNULL L157 - true in context: 
   * Goal 7. getId()I_java.lang.StringIndexOutOfBoundsException_IMPLICIT
   * Goal 8. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 9. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 10. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 11. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 12. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 13. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 14. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 15. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 131
   * Goal 16. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 17. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 18. org.apache.commons.cli.Option.getId()I: Line 146
   * Goal 19. org.apache.commons.cli.Option.getKey()Ljava/lang/String;: Line 157
   * Goal 20. org.apache.commons.cli.Option.getKey()Ljava/lang/String;: Line 162
   * Goal 21. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 22. [METHOD] org.apache.commons.cli.Option.getId()I
   * Goal 23. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 24. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 25. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 26. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 27. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 28. Weak Mutation 4: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> description
   * Goal 29. Weak Mutation 6: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> description
   * Goal 30. Weak Mutation 8: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> description
   * Goal 31. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 32. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 33. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 34. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 35. Weak Mutation 14: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:131 - ReplaceConstant - 1 -> 0
   * Goal 36. Weak Mutation 15: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> opt
   * Goal 37. Weak Mutation 16: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> longOpt
   * Goal 38. Weak Mutation 17: org.apache.commons.cli.Option.getId()I:146 - ReplaceConstant - 0 -> 1
   * Goal 39. Weak Mutation 18: org.apache.commons.cli.Option.getKey()Ljava/lang/String;:157 - ReplaceComparisonOperator != null -> = null
   */

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      Option option0 = new Option("", "", true, "NO_ARGS_ALLOWED");
      // Undeclared exception!
      try { 
        option0.getId();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         assertThrownBy("java.lang.String", e);
      }
  }

  //Test case number: 74
  /*
   * 32 covered goals:
   * Goal 1. org.apache.commons.cli.Option.getLongOpt()Ljava/lang/String;: root-Branch
   * Goal 2. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true
   * Goal 3. Branch org.apache.commons.cli.Option.getLongOpt()Ljava/lang/String;: root-Branch in context: org.apache.commons.cli.Option:getLongOpt()Ljava/lang/String;
   * Goal 4. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 5. [Output]: org.apache.commons.cli.Option.getLongOpt()Ljava/lang/String;:EmptyString
   * Goal 6. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 7. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 8. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 9. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 10. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 11. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 12. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 13. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 14. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 15. org.apache.commons.cli.Option.getLongOpt()Ljava/lang/String;: Line 207
   * Goal 16. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 17. [METHOD] org.apache.commons.cli.Option.getLongOpt()Ljava/lang/String;
   * Goal 18. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 19. [METHODNOEX] org.apache.commons.cli.Option.getLongOpt()Ljava/lang/String;
   * Goal 20. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 21. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 22. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 23. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 24. Weak Mutation 4: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> description
   * Goal 25. Weak Mutation 6: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> description
   * Goal 26. Weak Mutation 8: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> description
   * Goal 27. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 28. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 29. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 30. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 31. Weak Mutation 15: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> opt
   * Goal 32. Weak Mutation 16: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> longOpt
   */

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      Option option0 = new Option("", "", false, "NO_ARGS_ALLOWED");
      String string0 = option0.getLongOpt();
      assertEquals("", option0.getOpt());
      assertEquals("", string0);
      assertTrue(option0.hasArgName());
      assertEquals("NO_ARGS_ALLOWED", option0.getDescription());
      assertEquals(-1, option0.getArgs());
  }

  //Test case number: 75
  /*
   * 33 covered goals:
   * Goal 1. org.apache.commons.cli.Option.isRequired()Z: root-Branch
   * Goal 2. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true
   * Goal 3. Branch org.apache.commons.cli.Option.isRequired()Z: root-Branch in context: org.apache.commons.cli.Option:isRequired()Z
   * Goal 4. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 5. [Output]: org.apache.commons.cli.Option.isRequired()Z:False
   * Goal 6. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 7. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 8. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 9. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 10. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 11. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 12. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 13. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 14. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 15. org.apache.commons.cli.Option.isRequired()Z: Line 287
   * Goal 16. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 17. [METHOD] org.apache.commons.cli.Option.isRequired()Z
   * Goal 18. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 19. [METHODNOEX] org.apache.commons.cli.Option.isRequired()Z
   * Goal 20. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 21. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 22. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 23. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 24. Weak Mutation 4: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> description
   * Goal 25. Weak Mutation 6: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> description
   * Goal 26. Weak Mutation 8: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> description
   * Goal 27. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 28. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 29. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 30. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 31. Weak Mutation 15: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> opt
   * Goal 32. Weak Mutation 16: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> longOpt
   * Goal 33. Weak Mutation 48: org.apache.commons.cli.Option.isRequired()Z:287 - InsertUnaryOp Negation
   */

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      Option option0 = new Option("", "", false, "NO_ARGS_ALLOWED");
      option0.isRequired();
      assertEquals("NO_ARGS_ALLOWED", option0.getDescription());
      assertTrue(option0.hasArgName());
      assertEquals(-1, option0.getArgs());
      assertEquals("", option0.getLongOpt());
      assertEquals("", option0.getOpt());
  }

  //Test case number: 76
  /*
   * 36 covered goals:
   * Goal 1. org.apache.commons.cli.Option.<init>(Ljava/lang/String;ZLjava/lang/String;)V: root-Branch
   * Goal 2. org.apache.commons.cli.Option.addValue(Ljava/lang/String;)Z: root-Branch
   * Goal 3. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - false
   * Goal 4. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;ZLjava/lang/String;)V: root-Branch in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 5. Branch org.apache.commons.cli.Option.addValue(Ljava/lang/String;)Z: root-Branch in context: org.apache.commons.cli.Option:addValue(Ljava/lang/String;)Z
   * Goal 6. addValue(Ljava/lang/String;)Z_java.lang.UnsupportedOperationException_EXPLICIT
   * Goal 7. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 8. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 9. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 10. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 11. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 12. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 13. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 14. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 131
   * Goal 15. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 16. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 17. org.apache.commons.cli.Option.<init>(Ljava/lang/String;ZLjava/lang/String;)V: Line 106
   * Goal 18. org.apache.commons.cli.Option.addValue(Ljava/lang/String;)Z: Line 670
   * Goal 19. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 20. [METHOD] org.apache.commons.cli.Option.addValue(Ljava/lang/String;)Z
   * Goal 21. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 22. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 23. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 24. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 25. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 26. Weak Mutation 5: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> longOpt
   * Goal 27. Weak Mutation 7: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> longOpt
   * Goal 28. Weak Mutation 8: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> description
   * Goal 29. Weak Mutation 9: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> opt
   * Goal 30. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 31. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 32. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 33. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 34. Weak Mutation 14: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:131 - ReplaceConstant - 1 -> 0
   * Goal 35. Weak Mutation 16: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> longOpt
   * Goal 36. Weak Mutation 255: org.apache.commons.cli.Option.addValue(Ljava/lang/String;)Z:670 - ReplaceConstant - The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead.  -> 
   */

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      Option option0 = new Option("", true, "");
      // Undeclared exception!
      try { 
        option0.addValue(")^");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. 
         //
         assertThrownBy("org.apache.commons.cli.Option", e);
      }
  }

  //Test case number: 77
  /*
   * 50 covered goals:
   * Goal 1. org.apache.commons.cli.Option.setArgs(I)V: root-Branch
   * Goal 2. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true
   * Goal 3. org.apache.commons.cli.Option.hasArg()Z: I4 Branch 4 IFGT L256 - true
   * Goal 4. Branch org.apache.commons.cli.Option.setArgs(I)V: root-Branch in context: org.apache.commons.cli.Option:setArgs(I)V
   * Goal 5. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 6. Branch org.apache.commons.cli.Option.hasArg()Z: I4 Branch 4 IFGT L256 - true in context: org.apache.commons.cli.Option:hasArg()Z
   * Goal 7. [Output]: org.apache.commons.cli.Option.hasArg()Z:True
   * Goal 8. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 9. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 10. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 11. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 12. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 13. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 14. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 15. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 16. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 17. org.apache.commons.cli.Option.hasArg()Z: Line 256
   * Goal 18. org.apache.commons.cli.Option.setArgs(I)V: Line 349
   * Goal 19. org.apache.commons.cli.Option.setArgs(I)V: Line 350
   * Goal 20. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 21. [METHOD] org.apache.commons.cli.Option.hasArg()Z
   * Goal 22. [METHOD] org.apache.commons.cli.Option.setArgs(I)V
   * Goal 23. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 24. [METHODNOEX] org.apache.commons.cli.Option.hasArg()Z
   * Goal 25. [METHODNOEX] org.apache.commons.cli.Option.setArgs(I)V
   * Goal 26. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 27. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 28. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 29. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 30. Weak Mutation 4: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> description
   * Goal 31. Weak Mutation 6: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> description
   * Goal 32. Weak Mutation 8: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> description
   * Goal 33. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 34. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 35. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 36. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 37. Weak Mutation 15: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> opt
   * Goal 38. Weak Mutation 16: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> longOpt
   * Goal 39. Weak Mutation 26: org.apache.commons.cli.Option.hasArg()Z:256 - ReplaceVariable numberOfArgs -> UNINITIALIZED
   * Goal 40. Weak Mutation 27: org.apache.commons.cli.Option.hasArg()Z:256 - ReplaceVariable numberOfArgs -> UNLIMITED_VALUES
   * Goal 41. Weak Mutation 28: org.apache.commons.cli.Option.hasArg()Z:256 - InsertUnaryOp Negation
   * Goal 42. Weak Mutation 29: org.apache.commons.cli.Option.hasArg()Z:256 - InsertUnaryOp +1
   * Goal 43. Weak Mutation 30: org.apache.commons.cli.Option.hasArg()Z:256 - InsertUnaryOp -1
   * Goal 44. Weak Mutation 31: org.apache.commons.cli.Option.hasArg()Z:256 - ReplaceComparisonOperator > -> -2
   * Goal 45. Weak Mutation 46: org.apache.commons.cli.Option.hasArg()Z:256 - ReplaceConstant - 1 -> 0
   * Goal 46. Weak Mutation 79: org.apache.commons.cli.Option.setArgs(I)V:349 - ReplaceVariable num -> UNINITIALIZED
   * Goal 47. Weak Mutation 80: org.apache.commons.cli.Option.setArgs(I)V:349 - ReplaceVariable num -> UNLIMITED_VALUES
   * Goal 48. Weak Mutation 81: org.apache.commons.cli.Option.setArgs(I)V:349 - InsertUnaryOp Negation of num
   * Goal 49. Weak Mutation 82: org.apache.commons.cli.Option.setArgs(I)V:349 - InsertUnaryOp IINC 1 num
   * Goal 50. Weak Mutation 83: org.apache.commons.cli.Option.setArgs(I)V:349 - InsertUnaryOp IINC -1 num
   */

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      Option option0 = new Option("", "", false, "NO_ARGS_ALLOWED");
      option0.setArgs(3008);
      boolean boolean0 = option0.hasArg();
      assertEquals(3008, option0.getArgs());
      assertTrue(boolean0);
  }

  //Test case number: 78
  /*
   * 42 covered goals:
   * Goal 1. org.apache.commons.cli.Option.setOptionalArg(Z)V: root-Branch
   * Goal 2. org.apache.commons.cli.Option.hasOptionalArg()Z: root-Branch
   * Goal 3. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true
   * Goal 4. Branch org.apache.commons.cli.Option.hasOptionalArg()Z: root-Branch in context: org.apache.commons.cli.Option:hasOptionalArg()Z
   * Goal 5. Branch org.apache.commons.cli.Option.setOptionalArg(Z)V: root-Branch in context: org.apache.commons.cli.Option:setOptionalArg(Z)V
   * Goal 6. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 7. [Output]: org.apache.commons.cli.Option.hasOptionalArg()Z:True
   * Goal 8. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 9. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 10. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 11. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 12. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 13. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 14. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 15. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 16. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 17. org.apache.commons.cli.Option.hasOptionalArg()Z: Line 236
   * Goal 18. org.apache.commons.cli.Option.setOptionalArg(Z)V: Line 228
   * Goal 19. org.apache.commons.cli.Option.setOptionalArg(Z)V: Line 229
   * Goal 20. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 21. [METHOD] org.apache.commons.cli.Option.hasOptionalArg()Z
   * Goal 22. [METHOD] org.apache.commons.cli.Option.setOptionalArg(Z)V
   * Goal 23. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 24. [METHODNOEX] org.apache.commons.cli.Option.hasOptionalArg()Z
   * Goal 25. [METHODNOEX] org.apache.commons.cli.Option.setOptionalArg(Z)V
   * Goal 26. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 27. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 28. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 29. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 30. Weak Mutation 4: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> description
   * Goal 31. Weak Mutation 6: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> description
   * Goal 32. Weak Mutation 8: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> description
   * Goal 33. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 34. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 35. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 36. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 37. Weak Mutation 15: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> opt
   * Goal 38. Weak Mutation 16: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> longOpt
   * Goal 39. Weak Mutation 19: org.apache.commons.cli.Option.setOptionalArg(Z)V:228 - InsertUnaryOp Negation of optionalArg
   * Goal 40. Weak Mutation 20: org.apache.commons.cli.Option.setOptionalArg(Z)V:228 - InsertUnaryOp IINC 1 optionalArg
   * Goal 41. Weak Mutation 21: org.apache.commons.cli.Option.setOptionalArg(Z)V:228 - InsertUnaryOp IINC -1 optionalArg
   * Goal 42. Weak Mutation 22: org.apache.commons.cli.Option.hasOptionalArg()Z:236 - InsertUnaryOp Negation
   */

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      Option option0 = new Option("", "", false, "NO_ARGS_ALLOWED");
      option0.setOptionalArg(true);
      boolean boolean0 = option0.hasOptionalArg();
      assertTrue(boolean0);
  }

  //Test case number: 79
  /*
   * 32 covered goals:
   * Goal 1. org.apache.commons.cli.Option.getArgName()Ljava/lang/String;: root-Branch
   * Goal 2. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true
   * Goal 3. Branch org.apache.commons.cli.Option.getArgName()Ljava/lang/String;: root-Branch in context: org.apache.commons.cli.Option:getArgName()Ljava/lang/String;
   * Goal 4. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 5. [Output]: org.apache.commons.cli.Option.getArgName()Ljava/lang/String;:NonEmptyString
   * Goal 6. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 7. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 8. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 9. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 10. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 11. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 12. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 13. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 14. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 15. org.apache.commons.cli.Option.getArgName()Ljava/lang/String;: Line 317
   * Goal 16. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 17. [METHOD] org.apache.commons.cli.Option.getArgName()Ljava/lang/String;
   * Goal 18. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 19. [METHODNOEX] org.apache.commons.cli.Option.getArgName()Ljava/lang/String;
   * Goal 20. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 21. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 22. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 23. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 24. Weak Mutation 4: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> description
   * Goal 25. Weak Mutation 6: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> description
   * Goal 26. Weak Mutation 8: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> description
   * Goal 27. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 28. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 29. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 30. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 31. Weak Mutation 15: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> opt
   * Goal 32. Weak Mutation 16: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> longOpt
   */

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      Option option0 = new Option("", "", false, "NO_ARGS_ALLOWED");
      String string0 = option0.getArgName();
      assertEquals("", option0.getLongOpt());
      assertEquals("", option0.getOpt());
      assertEquals(-1, option0.getArgs());
      assertEquals("NO_ARGS_ALLOWED", option0.getDescription());
      assertEquals("arg", string0);
  }

  //Test case number: 80
  /*
   * 34 covered goals:
   * Goal 1. org.apache.commons.cli.Option.getDescription()Ljava/lang/String;: root-Branch
   * Goal 2. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: root-Branch
   * Goal 3. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true
   * Goal 4. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: root-Branch in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 5. Branch org.apache.commons.cli.Option.getDescription()Ljava/lang/String;: root-Branch in context: org.apache.commons.cli.Option:getDescription()Ljava/lang/String;
   * Goal 6. [Output]: org.apache.commons.cli.Option.getDescription()Ljava/lang/String;:EmptyString
   * Goal 7. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V: Line 91
   * Goal 8. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 9. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 10. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 11. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 12. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 13. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 14. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 15. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 16. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 17. org.apache.commons.cli.Option.getDescription()Ljava/lang/String;: Line 266
   * Goal 18. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 19. [METHOD] org.apache.commons.cli.Option.getDescription()Ljava/lang/String;
   * Goal 20. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;)V
   * Goal 21. [METHODNOEX] org.apache.commons.cli.Option.getDescription()Ljava/lang/String;
   * Goal 22. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 23. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 24. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 25. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 26. Weak Mutation 5: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> longOpt
   * Goal 27. Weak Mutation 7: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> longOpt
   * Goal 28. Weak Mutation 8: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> description
   * Goal 29. Weak Mutation 9: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> opt
   * Goal 30. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 31. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 32. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 33. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 34. Weak Mutation 16: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> longOpt
   */

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      Option option0 = new Option("", "");
      String string0 = option0.getDescription();
      assertTrue(option0.hasArgName());
      assertNotNull(string0);
      assertFalse(option0.hasLongOpt());
      assertEquals(-1, option0.getArgs());
  }

  //Test case number: 81
  /*
   * 43 covered goals:
   * Goal 1. org.apache.commons.cli.Option.setValueSeparator(C)V: root-Branch
   * Goal 2. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true
   * Goal 3. org.apache.commons.cli.Option.hasValueSeparator()Z: I4 Branch 10 IFLE L381 - false
   * Goal 4. Branch org.apache.commons.cli.Option.setValueSeparator(C)V: root-Branch in context: org.apache.commons.cli.Option:setValueSeparator(C)V
   * Goal 5. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 6. Branch org.apache.commons.cli.Option.hasValueSeparator()Z: I4 Branch 10 IFLE L381 - false in context: org.apache.commons.cli.Option:hasValueSeparator()Z
   * Goal 7. [Output]: org.apache.commons.cli.Option.hasValueSeparator()Z:True
   * Goal 8. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 9. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 10. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 11. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 12. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 13. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 14. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 15. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 16. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 17. org.apache.commons.cli.Option.hasValueSeparator()Z: Line 381
   * Goal 18. org.apache.commons.cli.Option.setValueSeparator(C)V: Line 360
   * Goal 19. org.apache.commons.cli.Option.setValueSeparator(C)V: Line 361
   * Goal 20. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 21. [METHOD] org.apache.commons.cli.Option.hasValueSeparator()Z
   * Goal 22. [METHOD] org.apache.commons.cli.Option.setValueSeparator(C)V
   * Goal 23. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 24. [METHODNOEX] org.apache.commons.cli.Option.hasValueSeparator()Z
   * Goal 25. [METHODNOEX] org.apache.commons.cli.Option.setValueSeparator(C)V
   * Goal 26. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 27. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 28. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 29. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 30. Weak Mutation 4: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> description
   * Goal 31. Weak Mutation 6: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> description
   * Goal 32. Weak Mutation 8: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> description
   * Goal 33. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 34. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 35. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 36. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 37. Weak Mutation 15: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> opt
   * Goal 38. Weak Mutation 16: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> longOpt
   * Goal 39. Weak Mutation 84: org.apache.commons.cli.Option.setValueSeparator(C)V:360 - InsertUnaryOp Negation of sep
   * Goal 40. Weak Mutation 85: org.apache.commons.cli.Option.setValueSeparator(C)V:360 - InsertUnaryOp IINC 1 sep
   * Goal 41. Weak Mutation 86: org.apache.commons.cli.Option.setValueSeparator(C)V:360 - InsertUnaryOp IINC -1 sep
   * Goal 42. Weak Mutation 87: org.apache.commons.cli.Option.hasValueSeparator()Z:381 - ReplaceComparisonOperator <= -> -1
   * Goal 43. Weak Mutation 90: org.apache.commons.cli.Option.hasValueSeparator()Z:381 - ReplaceConstant - 1 -> 0
   */

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      Option option0 = new Option("", "", false, "NO_ARGS_ALLOWED");
      option0.setValueSeparator('5');
      boolean boolean0 = option0.hasValueSeparator();
      assertEquals('5', option0.getValueSeparator());
      assertTrue(boolean0);
  }

  //Test case number: 82
  /*
   * 101 covered goals:
   * Goal 1. org.apache.commons.cli.Option.setType(Ljava/lang/Object;)V: root-Branch
   * Goal 2. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true
   * Goal 3. org.apache.commons.cli.Option.hasArg()Z: I4 Branch 4 IFGT L256 - false
   * Goal 4. org.apache.commons.cli.Option.hasArg()Z: I8 Branch 5 IF_ICMPNE L256 - true
   * Goal 5. org.apache.commons.cli.Option.hasArgs()Z: I5 Branch 8 IF_ICMPGT L339 - false
   * Goal 6. org.apache.commons.cli.Option.hasArgs()Z: I9 Branch 9 IF_ICMPNE L339 - true
   * Goal 7. org.apache.commons.cli.Option.toString()Ljava/lang/String;: I19 Branch 22 IFNULL L555 - false
   * Goal 8. org.apache.commons.cli.Option.toString()Ljava/lang/String;: I39 Branch 23 IFEQ L562 - true
   * Goal 9. org.apache.commons.cli.Option.toString()Ljava/lang/String;: I51 Branch 24 IFEQ L566 - true
   * Goal 10. org.apache.commons.cli.Option.toString()Ljava/lang/String;: I71 Branch 25 IFNULL L573 - false
   * Goal 11. Branch org.apache.commons.cli.Option.setType(Ljava/lang/Object;)V: root-Branch in context: org.apache.commons.cli.Option:setType(Ljava/lang/Object;)V
   * Goal 12. Branch org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: I38 Branch 1 IFEQ L129 - true in context: org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 13. Branch org.apache.commons.cli.Option.toString()Ljava/lang/String;: I19 Branch 22 IFNULL L555 - false in context: org.apache.commons.cli.Option:toString()Ljava/lang/String;
   * Goal 14. Branch org.apache.commons.cli.Option.toString()Ljava/lang/String;: I39 Branch 23 IFEQ L562 - true in context: org.apache.commons.cli.Option:toString()Ljava/lang/String;
   * Goal 15. Branch org.apache.commons.cli.Option.toString()Ljava/lang/String;: I51 Branch 24 IFEQ L566 - true in context: org.apache.commons.cli.Option:toString()Ljava/lang/String;
   * Goal 16. Branch org.apache.commons.cli.Option.toString()Ljava/lang/String;: I71 Branch 25 IFNULL L573 - false in context: org.apache.commons.cli.Option:toString()Ljava/lang/String;
   * Goal 17. [Output]: org.apache.commons.cli.Option.toString()Ljava/lang/String;:NonEmptyString
   * Goal 18. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 56
   * Goal 19. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 68
   * Goal 20. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 74
   * Goal 21. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 123
   * Goal 22. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 125
   * Goal 23. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 126
   * Goal 24. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 129
   * Goal 25. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 134
   * Goal 26. org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V: Line 135
   * Goal 27. org.apache.commons.cli.Option.hasArg()Z: Line 256
   * Goal 28. org.apache.commons.cli.Option.hasArgs()Z: Line 339
   * Goal 29. org.apache.commons.cli.Option.setType(Ljava/lang/Object;)V: Line 197
   * Goal 30. org.apache.commons.cli.Option.setType(Ljava/lang/Object;)V: Line 198
   * Goal 31. org.apache.commons.cli.Option.toString()Ljava/lang/String;: Line 551
   * Goal 32. org.apache.commons.cli.Option.toString()Ljava/lang/String;: Line 553
   * Goal 33. org.apache.commons.cli.Option.toString()Ljava/lang/String;: Line 555
   * Goal 34. org.apache.commons.cli.Option.toString()Ljava/lang/String;: Line 557
   * Goal 35. org.apache.commons.cli.Option.toString()Ljava/lang/String;: Line 560
   * Goal 36. org.apache.commons.cli.Option.toString()Ljava/lang/String;: Line 562
   * Goal 37. org.apache.commons.cli.Option.toString()Ljava/lang/String;: Line 566
   * Goal 38. org.apache.commons.cli.Option.toString()Ljava/lang/String;: Line 571
   * Goal 39. org.apache.commons.cli.Option.toString()Ljava/lang/String;: Line 573
   * Goal 40. org.apache.commons.cli.Option.toString()Ljava/lang/String;: Line 575
   * Goal 41. org.apache.commons.cli.Option.toString()Ljava/lang/String;: Line 578
   * Goal 42. org.apache.commons.cli.Option.toString()Ljava/lang/String;: Line 580
   * Goal 43. [METHOD] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 44. [METHOD] org.apache.commons.cli.Option.setType(Ljava/lang/Object;)V
   * Goal 45. [METHOD] org.apache.commons.cli.Option.toString()Ljava/lang/String;
   * Goal 46. [METHODNOEX] org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
   * Goal 47. [METHODNOEX] org.apache.commons.cli.Option.setType(Ljava/lang/Object;)V
   * Goal 48. [METHODNOEX] org.apache.commons.cli.Option.toString()Ljava/lang/String;
   * Goal 49. Weak Mutation 0: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:56 - ReplaceConstant - arg -> 
   * Goal 50. Weak Mutation 1: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 0
   * Goal 51. Weak Mutation 2: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> 1
   * Goal 52. Weak Mutation 3: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:68 - ReplaceConstant - -1 -> -2
   * Goal 53. Weak Mutation 4: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:123 - ReplaceVariable opt -> description
   * Goal 54. Weak Mutation 6: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:125 - ReplaceVariable opt -> description
   * Goal 55. Weak Mutation 8: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:126 - ReplaceVariable longOpt -> description
   * Goal 56. Weak Mutation 10: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp Negation of hasArg
   * Goal 57. Weak Mutation 11: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC 1 hasArg
   * Goal 58. Weak Mutation 12: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - InsertUnaryOp IINC -1 hasArg
   * Goal 59. Weak Mutation 13: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:129 - ReplaceComparisonOperator == -> !=
   * Goal 60. Weak Mutation 15: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> opt
   * Goal 61. Weak Mutation 16: org.apache.commons.cli.Option.<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V:134 - ReplaceVariable description -> longOpt
   * Goal 62. Weak Mutation 27: org.apache.commons.cli.Option.hasArg()Z:256 - ReplaceVariable numberOfArgs -> UNLIMITED_VALUES
   * Goal 63. Weak Mutation 28: org.apache.commons.cli.Option.hasArg()Z:256 - InsertUnaryOp Negation
   * Goal 64. Weak Mutation 29: org.apache.commons.cli.Option.hasArg()Z:256 - InsertUnaryOp +1
   * Goal 65. Weak Mutation 30: org.apache.commons.cli.Option.hasArg()Z:256 - InsertUnaryOp -1
   * Goal 66. Weak Mutation 32: org.apache.commons.cli.Option.hasArg()Z:256 - ReplaceComparisonOperator > -> !=
   * Goal 67. Weak Mutation 35: org.apache.commons.cli.Option.hasArg()Z:256 - ReplaceVariable numberOfArgs -> UNLIMITED_VALUES
   * Goal 68. Weak Mutation 36: org.apache.commons.cli.Option.hasArg()Z:256 - InsertUnaryOp Negation
   * Goal 69. Weak Mutation 37: org.apache.commons.cli.Option.hasArg()Z:256 - InsertUnaryOp +1
   * Goal 70. Weak Mutation 38: org.apache.commons.cli.Option.hasArg()Z:256 - InsertUnaryOp -1
   * Goal 71. Weak Mutation 39: org.apache.commons.cli.Option.hasArg()Z:256 - ReplaceConstant - -2 -> 0
   * Goal 72. Weak Mutation 40: org.apache.commons.cli.Option.hasArg()Z:256 - ReplaceConstant - -2 -> 1
   * Goal 73. Weak Mutation 41: org.apache.commons.cli.Option.hasArg()Z:256 - ReplaceConstant - -2 -> -1
   * Goal 74. Weak Mutation 42: org.apache.commons.cli.Option.hasArg()Z:256 - ReplaceConstant - -2 -> -3
   * Goal 75. Weak Mutation 44: org.apache.commons.cli.Option.hasArg()Z:256 - ReplaceComparisonOperator != -> <
   * Goal 76. Weak Mutation 47: org.apache.commons.cli.Option.hasArg()Z:256 - ReplaceConstant - 0 -> 1
   * Goal 77. Weak Mutation 59: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceVariable numberOfArgs -> UNLIMITED_VALUES
   * Goal 78. Weak Mutation 60: org.apache.commons.cli.Option.hasArgs()Z:339 - InsertUnaryOp Negation
   * Goal 79. Weak Mutation 61: org.apache.commons.cli.Option.hasArgs()Z:339 - InsertUnaryOp +1
   * Goal 80. Weak Mutation 62: org.apache.commons.cli.Option.hasArgs()Z:339 - InsertUnaryOp -1
   * Goal 81. Weak Mutation 63: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceConstant - 1 -> 0
   * Goal 82. Weak Mutation 66: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceVariable numberOfArgs -> UNLIMITED_VALUES
   * Goal 83. Weak Mutation 67: org.apache.commons.cli.Option.hasArgs()Z:339 - InsertUnaryOp Negation
   * Goal 84. Weak Mutation 68: org.apache.commons.cli.Option.hasArgs()Z:339 - InsertUnaryOp +1
   * Goal 85. Weak Mutation 69: org.apache.commons.cli.Option.hasArgs()Z:339 - InsertUnaryOp -1
   * Goal 86. Weak Mutation 70: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceConstant - -2 -> 0
   * Goal 87. Weak Mutation 71: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceConstant - -2 -> 1
   * Goal 88. Weak Mutation 72: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceConstant - -2 -> -1
   * Goal 89. Weak Mutation 73: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceConstant - -2 -> -3
   * Goal 90. Weak Mutation 75: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceComparisonOperator != -> <
   * Goal 91. Weak Mutation 78: org.apache.commons.cli.Option.hasArgs()Z:339 - ReplaceConstant - 0 -> 1
   * Goal 92. Weak Mutation 185: org.apache.commons.cli.Option.toString()Ljava/lang/String;:551 - ReplaceConstant - [ option:  -> 
   * Goal 93. Weak Mutation 186: org.apache.commons.cli.Option.toString()Ljava/lang/String;:555 - ReplaceComparisonOperator = null -> != null
   * Goal 94. Weak Mutation 187: org.apache.commons.cli.Option.toString()Ljava/lang/String;:557 - ReplaceConstant -   -> 
   * Goal 95. Weak Mutation 188: org.apache.commons.cli.Option.toString()Ljava/lang/String;:560 - ReplaceConstant -   -> 
   * Goal 96. Weak Mutation 189: org.apache.commons.cli.Option.toString()Ljava/lang/String;:562 - ReplaceComparisonOperator == -> !=
   * Goal 97. Weak Mutation 191: org.apache.commons.cli.Option.toString()Ljava/lang/String;:566 - ReplaceComparisonOperator == -> !=
   * Goal 98. Weak Mutation 193: org.apache.commons.cli.Option.toString()Ljava/lang/String;:571 - ReplaceConstant -  ::  -> 
   * Goal 99. Weak Mutation 194: org.apache.commons.cli.Option.toString()Ljava/lang/String;:573 - ReplaceComparisonOperator = null -> != null
   * Goal 100. Weak Mutation 195: org.apache.commons.cli.Option.toString()Ljava/lang/String;:575 - ReplaceConstant -  ::  -> 
   * Goal 101. Weak Mutation 196: org.apache.commons.cli.Option.toString()Ljava/lang/String;:578 - ReplaceConstant -  ] -> 
   */

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      Option option0 = new Option("", "", false, "NO_ARGS_ALLOWED");
      Integer integer0 = new Integer(0);
      option0.setType(integer0);
      String string0 = option0.toString();
      assertEquals("[ option:    :: NO_ARGS_ALLOWED :: 0 ]", string0);
      assertEquals(-1, option0.getArgs());
      assertEquals("arg", option0.getArgName());
  }
}
