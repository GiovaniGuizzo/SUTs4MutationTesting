/*
 * This file was automatically generated by EvoSuite
 * Wed Jun 01 17:12:11 GMT 2016
 */

package org.apache.commons.cli;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.cli.AlreadySelectedException;
import org.apache.commons.cli.Option;
import org.apache.commons.cli.OptionGroup;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class AlreadySelectedException_ESTest extends AlreadySelectedException_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 11 covered goals:
   * Goal 1. org.apache.commons.cli.AlreadySelectedException.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. org.apache.commons.cli.AlreadySelectedException.getOptionGroup()Lorg/apache/commons/cli/OptionGroup;: root-Branch
   * Goal 3. Branch org.apache.commons.cli.AlreadySelectedException.<init>(Ljava/lang/String;)V: root-Branch in context: org.apache.commons.cli.AlreadySelectedException:<init>(Ljava/lang/String;)V
   * Goal 4. Branch org.apache.commons.cli.AlreadySelectedException.getOptionGroup()Lorg/apache/commons/cli/OptionGroup;: root-Branch in context: org.apache.commons.cli.AlreadySelectedException:getOptionGroup()Lorg/apache/commons/cli/OptionGroup;
   * Goal 5. [Output]: org.apache.commons.cli.AlreadySelectedException.getOptionGroup()Lorg/apache/commons/cli/OptionGroup;:Null
   * Goal 6. org.apache.commons.cli.AlreadySelectedException.<init>(Ljava/lang/String;)V: Line 44
   * Goal 7. org.apache.commons.cli.AlreadySelectedException.getOptionGroup()Lorg/apache/commons/cli/OptionGroup;: Line 70
   * Goal 8. [METHOD] org.apache.commons.cli.AlreadySelectedException.<init>(Ljava/lang/String;)V
   * Goal 9. [METHOD] org.apache.commons.cli.AlreadySelectedException.getOptionGroup()Lorg/apache/commons/cli/OptionGroup;
   * Goal 10. [METHODNOEX] org.apache.commons.cli.AlreadySelectedException.<init>(Ljava/lang/String;)V
   * Goal 11. [METHODNOEX] org.apache.commons.cli.AlreadySelectedException.getOptionGroup()Lorg/apache/commons/cli/OptionGroup;
   */

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AlreadySelectedException alreadySelectedException0 = new AlreadySelectedException("");
      OptionGroup optionGroup0 = alreadySelectedException0.getOptionGroup();
      assertNull(optionGroup0);
  }

  //Test case number: 1
  /*
   * 15 covered goals:
   * Goal 1. org.apache.commons.cli.AlreadySelectedException.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. org.apache.commons.cli.AlreadySelectedException.getOptionGroup()Lorg/apache/commons/cli/OptionGroup;: root-Branch
   * Goal 3. org.apache.commons.cli.AlreadySelectedException.<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V: root-Branch
   * Goal 4. Branch org.apache.commons.cli.AlreadySelectedException.<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V: root-Branch in context: org.apache.commons.cli.AlreadySelectedException:<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V
   * Goal 5. Branch org.apache.commons.cli.AlreadySelectedException.getOptionGroup()Lorg/apache/commons/cli/OptionGroup;: root-Branch in context: org.apache.commons.cli.AlreadySelectedException:getOptionGroup()Lorg/apache/commons/cli/OptionGroup;
   * Goal 6. [Output]: org.apache.commons.cli.AlreadySelectedException.getOptionGroup()Lorg/apache/commons/cli/OptionGroup;:NonNull:org.apache.commons.cli.OptionGroup:isRequired()Z:True
   * Goal 7. org.apache.commons.cli.AlreadySelectedException.<init>(Ljava/lang/String;)V: Line 44
   * Goal 8. org.apache.commons.cli.AlreadySelectedException.<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V: Line 58
   * Goal 9. org.apache.commons.cli.AlreadySelectedException.<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V: Line 59
   * Goal 10. org.apache.commons.cli.AlreadySelectedException.<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V: Line 60
   * Goal 11. org.apache.commons.cli.AlreadySelectedException.getOptionGroup()Lorg/apache/commons/cli/OptionGroup;: Line 70
   * Goal 12. [METHOD] org.apache.commons.cli.AlreadySelectedException.<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V
   * Goal 13. [METHOD] org.apache.commons.cli.AlreadySelectedException.getOptionGroup()Lorg/apache/commons/cli/OptionGroup;
   * Goal 14. [METHODNOEX] org.apache.commons.cli.AlreadySelectedException.<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V
   * Goal 15. [METHODNOEX] org.apache.commons.cli.AlreadySelectedException.getOptionGroup()Lorg/apache/commons/cli/OptionGroup;
   */

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option("Xdri", true, (String) null);
      optionGroup0.setRequired(true);
      AlreadySelectedException alreadySelectedException0 = new AlreadySelectedException(optionGroup0, option0);
      OptionGroup optionGroup1 = alreadySelectedException0.getOptionGroup();
      assertTrue(optionGroup1.isRequired());
  }

  //Test case number: 2
  /*
   * 22 covered goals:
   * Goal 1. org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;: root-Branch
   * Goal 2. org.apache.commons.cli.AlreadySelectedException.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 3. org.apache.commons.cli.AlreadySelectedException.<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V: root-Branch
   * Goal 4. Branch org.apache.commons.cli.AlreadySelectedException.<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V: root-Branch in context: org.apache.commons.cli.AlreadySelectedException:<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V
   * Goal 5. Branch org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;: root-Branch in context: org.apache.commons.cli.AlreadySelectedException:getOption()Lorg/apache/commons/cli/Option;
   * Goal 6. [Output]: org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:getArgs()I:Positive
   * Goal 7. [Output]: org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:hasArg()Z:True
   * Goal 8. [Output]: org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:hasArgName()Z:True
   * Goal 9. [Output]: org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:hasArgs()Z:False
   * Goal 10. [Output]: org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:hasLongOpt()Z:False
   * Goal 11. [Output]: org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:hasOptionalArg()Z:False
   * Goal 12. [Output]: org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:hasValueSeparator()Z:False
   * Goal 13. [Output]: org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:isRequired()Z:True
   * Goal 14. org.apache.commons.cli.AlreadySelectedException.<init>(Ljava/lang/String;)V: Line 44
   * Goal 15. org.apache.commons.cli.AlreadySelectedException.<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V: Line 58
   * Goal 16. org.apache.commons.cli.AlreadySelectedException.<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V: Line 59
   * Goal 17. org.apache.commons.cli.AlreadySelectedException.<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V: Line 60
   * Goal 18. org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;: Line 81
   * Goal 19. [METHOD] org.apache.commons.cli.AlreadySelectedException.<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V
   * Goal 20. [METHOD] org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;
   * Goal 21. [METHODNOEX] org.apache.commons.cli.AlreadySelectedException.<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V
   * Goal 22. [METHODNOEX] org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;
   */

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option("", true, "-");
      option0.setRequired(true);
      AlreadySelectedException alreadySelectedException0 = new AlreadySelectedException(optionGroup0, option0);
      Option option1 = alreadySelectedException0.getOption();
      assertEquals("-", option1.getDescription());
  }

  //Test case number: 3
  /*
   * 23 covered goals:
   * Goal 1. org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;: root-Branch
   * Goal 2. org.apache.commons.cli.AlreadySelectedException.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 3. org.apache.commons.cli.AlreadySelectedException.<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V: root-Branch
   * Goal 4. Branch org.apache.commons.cli.AlreadySelectedException.<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V: root-Branch in context: org.apache.commons.cli.AlreadySelectedException:<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V
   * Goal 5. Branch org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;: root-Branch in context: org.apache.commons.cli.AlreadySelectedException:getOption()Lorg/apache/commons/cli/Option;
   * Goal 6. [Output]: org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:getArgs()I:Positive
   * Goal 7. [Output]: org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:getId()I:Positive
   * Goal 8. [Output]: org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:hasArg()Z:True
   * Goal 9. [Output]: org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:hasArgName()Z:True
   * Goal 10. [Output]: org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:hasArgs()Z:False
   * Goal 11. [Output]: org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:hasLongOpt()Z:False
   * Goal 12. [Output]: org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:hasOptionalArg()Z:False
   * Goal 13. [Output]: org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:hasValueSeparator()Z:True
   * Goal 14. [Output]: org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:isRequired()Z:False
   * Goal 15. org.apache.commons.cli.AlreadySelectedException.<init>(Ljava/lang/String;)V: Line 44
   * Goal 16. org.apache.commons.cli.AlreadySelectedException.<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V: Line 58
   * Goal 17. org.apache.commons.cli.AlreadySelectedException.<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V: Line 59
   * Goal 18. org.apache.commons.cli.AlreadySelectedException.<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V: Line 60
   * Goal 19. org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;: Line 81
   * Goal 20. [METHOD] org.apache.commons.cli.AlreadySelectedException.<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V
   * Goal 21. [METHOD] org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;
   * Goal 22. [METHODNOEX] org.apache.commons.cli.AlreadySelectedException.<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V
   * Goal 23. [METHODNOEX] org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;
   */

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option("Xdri", true, (String) null);
      AlreadySelectedException alreadySelectedException0 = new AlreadySelectedException(optionGroup0, option0);
      option0.setValueSeparator('c');
      Option option1 = alreadySelectedException0.getOption();
      assertEquals((-2), Option.UNLIMITED_VALUES);
  }

  //Test case number: 4
  /*
   * 22 covered goals:
   * Goal 1. org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;: root-Branch
   * Goal 2. org.apache.commons.cli.AlreadySelectedException.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 3. org.apache.commons.cli.AlreadySelectedException.<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V: root-Branch
   * Goal 4. Branch org.apache.commons.cli.AlreadySelectedException.<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V: root-Branch in context: org.apache.commons.cli.AlreadySelectedException:<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V
   * Goal 5. Branch org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;: root-Branch in context: org.apache.commons.cli.AlreadySelectedException:getOption()Lorg/apache/commons/cli/Option;
   * Goal 6. [Output]: org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:getArgs()I:Negative
   * Goal 7. [Output]: org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:hasArg()Z:False
   * Goal 8. [Output]: org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:hasArgName()Z:True
   * Goal 9. [Output]: org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:hasArgs()Z:False
   * Goal 10. [Output]: org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:hasLongOpt()Z:False
   * Goal 11. [Output]: org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:hasOptionalArg()Z:True
   * Goal 12. [Output]: org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:hasValueSeparator()Z:False
   * Goal 13. [Output]: org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:isRequired()Z:False
   * Goal 14. org.apache.commons.cli.AlreadySelectedException.<init>(Ljava/lang/String;)V: Line 44
   * Goal 15. org.apache.commons.cli.AlreadySelectedException.<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V: Line 58
   * Goal 16. org.apache.commons.cli.AlreadySelectedException.<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V: Line 59
   * Goal 17. org.apache.commons.cli.AlreadySelectedException.<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V: Line 60
   * Goal 18. org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;: Line 81
   * Goal 19. [METHOD] org.apache.commons.cli.AlreadySelectedException.<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V
   * Goal 20. [METHOD] org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;
   * Goal 21. [METHODNOEX] org.apache.commons.cli.AlreadySelectedException.<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V
   * Goal 22. [METHODNOEX] org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;
   */

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option("", "");
      AlreadySelectedException alreadySelectedException0 = new AlreadySelectedException(optionGroup0, option0);
      option0.setOptionalArg(true);
      Option option1 = alreadySelectedException0.getOption();
      assertFalse(option1.hasArgs());
  }

  //Test case number: 5
  /*
   * 23 covered goals:
   * Goal 1. org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;: root-Branch
   * Goal 2. org.apache.commons.cli.AlreadySelectedException.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 3. org.apache.commons.cli.AlreadySelectedException.<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V: root-Branch
   * Goal 4. Branch org.apache.commons.cli.AlreadySelectedException.<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V: root-Branch in context: org.apache.commons.cli.AlreadySelectedException:<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V
   * Goal 5. Branch org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;: root-Branch in context: org.apache.commons.cli.AlreadySelectedException:getOption()Lorg/apache/commons/cli/Option;
   * Goal 6. [Output]: org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:getArgs()I:Positive
   * Goal 7. [Output]: org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:getId()I:Positive
   * Goal 8. [Output]: org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:hasArg()Z:True
   * Goal 9. [Output]: org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:hasArgName()Z:True
   * Goal 10. [Output]: org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:hasArgs()Z:False
   * Goal 11. [Output]: org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:hasLongOpt()Z:True
   * Goal 12. [Output]: org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:hasOptionalArg()Z:False
   * Goal 13. [Output]: org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:hasValueSeparator()Z:False
   * Goal 14. [Output]: org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:isRequired()Z:False
   * Goal 15. org.apache.commons.cli.AlreadySelectedException.<init>(Ljava/lang/String;)V: Line 44
   * Goal 16. org.apache.commons.cli.AlreadySelectedException.<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V: Line 58
   * Goal 17. org.apache.commons.cli.AlreadySelectedException.<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V: Line 59
   * Goal 18. org.apache.commons.cli.AlreadySelectedException.<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V: Line 60
   * Goal 19. org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;: Line 81
   * Goal 20. [METHOD] org.apache.commons.cli.AlreadySelectedException.<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V
   * Goal 21. [METHOD] org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;
   * Goal 22. [METHODNOEX] org.apache.commons.cli.AlreadySelectedException.<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V
   * Goal 23. [METHODNOEX] org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;
   */

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option("Xdri", "Xdri", true, "Xdri");
      AlreadySelectedException alreadySelectedException0 = new AlreadySelectedException(optionGroup0, option0);
      Option option1 = alreadySelectedException0.getOption();
      assertEquals(1, option1.getArgs());
  }

  //Test case number: 6
  /*
   * 22 covered goals:
   * Goal 1. org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;: root-Branch
   * Goal 2. org.apache.commons.cli.AlreadySelectedException.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 3. org.apache.commons.cli.AlreadySelectedException.<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V: root-Branch
   * Goal 4. Branch org.apache.commons.cli.AlreadySelectedException.<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V: root-Branch in context: org.apache.commons.cli.AlreadySelectedException:<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V
   * Goal 5. Branch org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;: root-Branch in context: org.apache.commons.cli.AlreadySelectedException:getOption()Lorg/apache/commons/cli/Option;
   * Goal 6. [Output]: org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:getArgs()I:Negative
   * Goal 7. [Output]: org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:hasArg()Z:True
   * Goal 8. [Output]: org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:hasArgName()Z:True
   * Goal 9. [Output]: org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:hasArgs()Z:True
   * Goal 10. [Output]: org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:hasLongOpt()Z:False
   * Goal 11. [Output]: org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:hasOptionalArg()Z:False
   * Goal 12. [Output]: org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:hasValueSeparator()Z:False
   * Goal 13. [Output]: org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:isRequired()Z:False
   * Goal 14. org.apache.commons.cli.AlreadySelectedException.<init>(Ljava/lang/String;)V: Line 44
   * Goal 15. org.apache.commons.cli.AlreadySelectedException.<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V: Line 58
   * Goal 16. org.apache.commons.cli.AlreadySelectedException.<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V: Line 59
   * Goal 17. org.apache.commons.cli.AlreadySelectedException.<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V: Line 60
   * Goal 18. org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;: Line 81
   * Goal 19. [METHOD] org.apache.commons.cli.AlreadySelectedException.<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V
   * Goal 20. [METHOD] org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;
   * Goal 21. [METHODNOEX] org.apache.commons.cli.AlreadySelectedException.<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V
   * Goal 22. [METHODNOEX] org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;
   */

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option("", "");
      AlreadySelectedException alreadySelectedException0 = new AlreadySelectedException(optionGroup0, option0);
      option0.setArgs((-2));
      Option option1 = alreadySelectedException0.getOption();
      assertSame(option0, option1);
  }

  //Test case number: 7
  /*
   * 22 covered goals:
   * Goal 1. org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;: root-Branch
   * Goal 2. org.apache.commons.cli.AlreadySelectedException.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 3. org.apache.commons.cli.AlreadySelectedException.<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V: root-Branch
   * Goal 4. Branch org.apache.commons.cli.AlreadySelectedException.<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V: root-Branch in context: org.apache.commons.cli.AlreadySelectedException:<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V
   * Goal 5. Branch org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;: root-Branch in context: org.apache.commons.cli.AlreadySelectedException:getOption()Lorg/apache/commons/cli/Option;
   * Goal 6. [Output]: org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:getArgs()I:Negative
   * Goal 7. [Output]: org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:hasArg()Z:False
   * Goal 8. [Output]: org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:hasArgName()Z:False
   * Goal 9. [Output]: org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:hasArgs()Z:False
   * Goal 10. [Output]: org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:hasLongOpt()Z:False
   * Goal 11. [Output]: org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:hasOptionalArg()Z:False
   * Goal 12. [Output]: org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:hasValueSeparator()Z:False
   * Goal 13. [Output]: org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:isRequired()Z:False
   * Goal 14. org.apache.commons.cli.AlreadySelectedException.<init>(Ljava/lang/String;)V: Line 44
   * Goal 15. org.apache.commons.cli.AlreadySelectedException.<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V: Line 58
   * Goal 16. org.apache.commons.cli.AlreadySelectedException.<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V: Line 59
   * Goal 17. org.apache.commons.cli.AlreadySelectedException.<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V: Line 60
   * Goal 18. org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;: Line 81
   * Goal 19. [METHOD] org.apache.commons.cli.AlreadySelectedException.<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V
   * Goal 20. [METHOD] org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;
   * Goal 21. [METHODNOEX] org.apache.commons.cli.AlreadySelectedException.<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V
   * Goal 22. [METHODNOEX] org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;
   */

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option((String) null, (String) null, false, (String) null);
      option0.setArgName((String) null);
      AlreadySelectedException alreadySelectedException0 = new AlreadySelectedException(optionGroup0, option0);
      Option option1 = alreadySelectedException0.getOption();
      assertEquals((-1), Option.UNINITIALIZED);
  }

  //Test case number: 8
  /*
   * 22 covered goals:
   * Goal 1. org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;: root-Branch
   * Goal 2. org.apache.commons.cli.AlreadySelectedException.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 3. org.apache.commons.cli.AlreadySelectedException.<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V: root-Branch
   * Goal 4. Branch org.apache.commons.cli.AlreadySelectedException.<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V: root-Branch in context: org.apache.commons.cli.AlreadySelectedException:<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V
   * Goal 5. Branch org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;: root-Branch in context: org.apache.commons.cli.AlreadySelectedException:getOption()Lorg/apache/commons/cli/Option;
   * Goal 6. [Output]: org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:getArgs()I:Zero
   * Goal 7. [Output]: org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:hasArg()Z:False
   * Goal 8. [Output]: org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:hasArgName()Z:True
   * Goal 9. [Output]: org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:hasArgs()Z:False
   * Goal 10. [Output]: org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:hasLongOpt()Z:False
   * Goal 11. [Output]: org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:hasOptionalArg()Z:False
   * Goal 12. [Output]: org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:hasValueSeparator()Z:False
   * Goal 13. [Output]: org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:isRequired()Z:False
   * Goal 14. org.apache.commons.cli.AlreadySelectedException.<init>(Ljava/lang/String;)V: Line 44
   * Goal 15. org.apache.commons.cli.AlreadySelectedException.<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V: Line 58
   * Goal 16. org.apache.commons.cli.AlreadySelectedException.<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V: Line 59
   * Goal 17. org.apache.commons.cli.AlreadySelectedException.<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V: Line 60
   * Goal 18. org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;: Line 81
   * Goal 19. [METHOD] org.apache.commons.cli.AlreadySelectedException.<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V
   * Goal 20. [METHOD] org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;
   * Goal 21. [METHODNOEX] org.apache.commons.cli.AlreadySelectedException.<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V
   * Goal 22. [METHODNOEX] org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;
   */

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option((String) null, (String) null);
      option0.setArgs(0);
      AlreadySelectedException alreadySelectedException0 = new AlreadySelectedException(optionGroup0, option0);
      Option option1 = alreadySelectedException0.getOption();
      assertFalse(option1.isRequired());
  }

  //Test case number: 9
  /*
   * 3 covered goals:
   * Goal 1. org.apache.commons.cli.AlreadySelectedException.<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V: root-Branch
   * Goal 2. <init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V_java.lang.NullPointerException_IMPLICIT
   * Goal 3. [METHOD] org.apache.commons.cli.AlreadySelectedException.<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V
   */

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AlreadySelectedException alreadySelectedException0 = null;
      try {
        alreadySelectedException0 = new AlreadySelectedException((OptionGroup) null, (Option) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.apache.commons.cli.AlreadySelectedException", e);
      }
  }

  //Test case number: 10
  /*
   * 15 covered goals:
   * Goal 1. org.apache.commons.cli.AlreadySelectedException.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. org.apache.commons.cli.AlreadySelectedException.getOptionGroup()Lorg/apache/commons/cli/OptionGroup;: root-Branch
   * Goal 3. org.apache.commons.cli.AlreadySelectedException.<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V: root-Branch
   * Goal 4. Branch org.apache.commons.cli.AlreadySelectedException.<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V: root-Branch in context: org.apache.commons.cli.AlreadySelectedException:<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V
   * Goal 5. Branch org.apache.commons.cli.AlreadySelectedException.getOptionGroup()Lorg/apache/commons/cli/OptionGroup;: root-Branch in context: org.apache.commons.cli.AlreadySelectedException:getOptionGroup()Lorg/apache/commons/cli/OptionGroup;
   * Goal 6. [Output]: org.apache.commons.cli.AlreadySelectedException.getOptionGroup()Lorg/apache/commons/cli/OptionGroup;:NonNull:org.apache.commons.cli.OptionGroup:isRequired()Z:False
   * Goal 7. org.apache.commons.cli.AlreadySelectedException.<init>(Ljava/lang/String;)V: Line 44
   * Goal 8. org.apache.commons.cli.AlreadySelectedException.<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V: Line 58
   * Goal 9. org.apache.commons.cli.AlreadySelectedException.<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V: Line 59
   * Goal 10. org.apache.commons.cli.AlreadySelectedException.<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V: Line 60
   * Goal 11. org.apache.commons.cli.AlreadySelectedException.getOptionGroup()Lorg/apache/commons/cli/OptionGroup;: Line 70
   * Goal 12. [METHOD] org.apache.commons.cli.AlreadySelectedException.<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V
   * Goal 13. [METHOD] org.apache.commons.cli.AlreadySelectedException.getOptionGroup()Lorg/apache/commons/cli/OptionGroup;
   * Goal 14. [METHODNOEX] org.apache.commons.cli.AlreadySelectedException.<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V
   * Goal 15. [METHODNOEX] org.apache.commons.cli.AlreadySelectedException.getOptionGroup()Lorg/apache/commons/cli/OptionGroup;
   */

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option("", true, "-");
      AlreadySelectedException alreadySelectedException0 = new AlreadySelectedException(optionGroup0, option0);
      OptionGroup optionGroup1 = alreadySelectedException0.getOptionGroup();
      assertSame(optionGroup1, optionGroup0);
  }

  //Test case number: 11
  /*
   * 11 covered goals:
   * Goal 1. org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;: root-Branch
   * Goal 2. org.apache.commons.cli.AlreadySelectedException.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 3. Branch org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;: root-Branch in context: org.apache.commons.cli.AlreadySelectedException:getOption()Lorg/apache/commons/cli/Option;
   * Goal 4. Branch org.apache.commons.cli.AlreadySelectedException.<init>(Ljava/lang/String;)V: root-Branch in context: org.apache.commons.cli.AlreadySelectedException:<init>(Ljava/lang/String;)V
   * Goal 5. [Output]: org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;:Null
   * Goal 6. org.apache.commons.cli.AlreadySelectedException.<init>(Ljava/lang/String;)V: Line 44
   * Goal 7. org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;: Line 81
   * Goal 8. [METHOD] org.apache.commons.cli.AlreadySelectedException.<init>(Ljava/lang/String;)V
   * Goal 9. [METHOD] org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;
   * Goal 10. [METHODNOEX] org.apache.commons.cli.AlreadySelectedException.<init>(Ljava/lang/String;)V
   * Goal 11. [METHODNOEX] org.apache.commons.cli.AlreadySelectedException.getOption()Lorg/apache/commons/cli/Option;
   */

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AlreadySelectedException alreadySelectedException0 = new AlreadySelectedException((String) null);
      Option option0 = alreadySelectedException0.getOption();
      assertNull(option0);
  }
}
