/*
 * This file was automatically generated by EvoSuite
 * Wed Jun 01 17:25:16 GMT 2016
 */

package org.apache.commons.cli;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.List;
import org.apache.commons.cli.Option;
import org.apache.commons.cli.OptionGroup;
import org.apache.commons.cli.Options;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Options_ESTest extends Options_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 15 covered goals:
   * Goal 1. org.apache.commons.cli.Options.<init>()V: root-Branch
   * Goal 2. org.apache.commons.cli.Options.helpOptions()Ljava/util/List;: root-Branch
   * Goal 3. Branch org.apache.commons.cli.Options.helpOptions()Ljava/util/List;: root-Branch in context: 
   * Goal 4. Branch org.apache.commons.cli.Options.<init>()V: root-Branch in context: org.apache.commons.cli.Options:<init>()V
   * Goal 5. [Output]: org.apache.commons.cli.Options.helpOptions()Ljava/util/List;:NonNull:java.util.List:isEmpty()Z:True
   * Goal 6. [Output]: org.apache.commons.cli.Options.helpOptions()Ljava/util/List;:NonNull:java.util.List:size()I:Zero
   * Goal 7. org.apache.commons.cli.Options.<init>()V: Line 51
   * Goal 8. org.apache.commons.cli.Options.<init>()V: Line 54
   * Goal 9. org.apache.commons.cli.Options.<init>()V: Line 57
   * Goal 10. org.apache.commons.cli.Options.<init>()V: Line 60
   * Goal 11. org.apache.commons.cli.Options.helpOptions()Ljava/util/List;: Line 184
   * Goal 12. [METHOD] org.apache.commons.cli.Options.<init>()V
   * Goal 13. [METHOD] org.apache.commons.cli.Options.helpOptions()Ljava/util/List;
   * Goal 14. [METHODNOEX] org.apache.commons.cli.Options.<init>()V
   * Goal 15. [METHODNOEX] org.apache.commons.cli.Options.helpOptions()Ljava/util/List;
   */

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Options options0 = new Options();
      List list0 = options0.helpOptions();
      assertEquals(0, list0.size());
  }

  //Test case number: 1
  /*
   * 30 covered goals:
   * Goal 1. org.apache.commons.cli.Options.<init>()V: root-Branch
   * Goal 2. org.apache.commons.cli.Options.helpOptions()Ljava/util/List;: root-Branch
   * Goal 3. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: I9 Branch 3 IFEQ L147 - false
   * Goal 4. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: I23 Branch 4 IFEQ L153 - true
   * Goal 5. Branch org.apache.commons.cli.Options.helpOptions()Ljava/util/List;: root-Branch in context: 
   * Goal 6. Branch org.apache.commons.cli.Options.<init>()V: root-Branch in context: org.apache.commons.cli.Options:<init>()V
   * Goal 7. Branch org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: I9 Branch 3 IFEQ L147 - false in context: org.apache.commons.cli.Options:addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;
   * Goal 8. Branch org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: I23 Branch 4 IFEQ L153 - true in context: org.apache.commons.cli.Options:addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;
   * Goal 9. [Output]: org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;:NonNull
   * Goal 10. [Output]: org.apache.commons.cli.Options.helpOptions()Ljava/util/List;:NonNull:java.util.List:isEmpty()Z:False
   * Goal 11. [Output]: org.apache.commons.cli.Options.helpOptions()Ljava/util/List;:NonNull:java.util.List:size()I:Positive
   * Goal 12. org.apache.commons.cli.Options.<init>()V: Line 51
   * Goal 13. org.apache.commons.cli.Options.<init>()V: Line 54
   * Goal 14. org.apache.commons.cli.Options.<init>()V: Line 57
   * Goal 15. org.apache.commons.cli.Options.<init>()V: Line 60
   * Goal 16. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 144
   * Goal 17. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 147
   * Goal 18. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 149
   * Goal 19. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 153
   * Goal 20. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 162
   * Goal 21. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 164
   * Goal 22. org.apache.commons.cli.Options.helpOptions()Ljava/util/List;: Line 184
   * Goal 23. [METHOD] org.apache.commons.cli.Options.<init>()V
   * Goal 24. [METHOD] org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;
   * Goal 25. [METHOD] org.apache.commons.cli.Options.helpOptions()Ljava/util/List;
   * Goal 26. [METHODNOEX] org.apache.commons.cli.Options.<init>()V
   * Goal 27. [METHODNOEX] org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;
   * Goal 28. [METHODNOEX] org.apache.commons.cli.Options.helpOptions()Ljava/util/List;
   * Goal 29. Weak Mutation 17: org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;:147 - ReplaceComparisonOperator == -> !=
   * Goal 30. Weak Mutation 18: org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;:153 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Options options0 = new Options();
      Option option0 = new Option("", "", false, "");
      Options options1 = options0.addOption(option0);
      List list0 = options1.helpOptions();
      assertEquals(1, list0.size());
  }

  //Test case number: 2
  /*
   * 38 covered goals:
   * Goal 1. org.apache.commons.cli.Options.<init>()V: root-Branch
   * Goal 2. org.apache.commons.cli.Options.getRequiredOptions()Ljava/util/List;: root-Branch
   * Goal 3. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: I9 Branch 3 IFEQ L147 - true
   * Goal 4. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: I23 Branch 4 IFEQ L153 - false
   * Goal 5. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: I30 Branch 5 IFLE L155 - true
   * Goal 6. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: I36 Branch 6 IFEQ L155 - true
   * Goal 7. Branch org.apache.commons.cli.Options.getRequiredOptions()Ljava/util/List;: root-Branch in context: org.apache.commons.cli.Options:getRequiredOptions()Ljava/util/List;
   * Goal 8. Branch org.apache.commons.cli.Options.<init>()V: root-Branch in context: org.apache.commons.cli.Options:<init>()V
   * Goal 9. Branch org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: I9 Branch 3 IFEQ L147 - true in context: org.apache.commons.cli.Options:addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;
   * Goal 10. Branch org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: I23 Branch 4 IFEQ L153 - false in context: org.apache.commons.cli.Options:addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;
   * Goal 11. Branch org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: I30 Branch 5 IFLE L155 - true in context: org.apache.commons.cli.Options:addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;
   * Goal 12. Branch org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: I36 Branch 6 IFEQ L155 - true in context: org.apache.commons.cli.Options:addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;
   * Goal 13. [Output]: org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;:NonNull
   * Goal 14. [Output]: org.apache.commons.cli.Options.getRequiredOptions()Ljava/util/List;:NonNull:java.util.List:isEmpty()Z:False
   * Goal 15. [Output]: org.apache.commons.cli.Options.getRequiredOptions()Ljava/util/List;:NonNull:java.util.List:size()I:Positive
   * Goal 16. org.apache.commons.cli.Options.<init>()V: Line 51
   * Goal 17. org.apache.commons.cli.Options.<init>()V: Line 54
   * Goal 18. org.apache.commons.cli.Options.<init>()V: Line 57
   * Goal 19. org.apache.commons.cli.Options.<init>()V: Line 60
   * Goal 20. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 144
   * Goal 21. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 147
   * Goal 22. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 153
   * Goal 23. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 155
   * Goal 24. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 159
   * Goal 25. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 162
   * Goal 26. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 164
   * Goal 27. org.apache.commons.cli.Options.getRequiredOptions()Ljava/util/List;: Line 194
   * Goal 28. [METHOD] org.apache.commons.cli.Options.<init>()V
   * Goal 29. [METHOD] org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;
   * Goal 30. [METHOD] org.apache.commons.cli.Options.getRequiredOptions()Ljava/util/List;
   * Goal 31. [METHODNOEX] org.apache.commons.cli.Options.<init>()V
   * Goal 32. [METHODNOEX] org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;
   * Goal 33. [METHODNOEX] org.apache.commons.cli.Options.getRequiredOptions()Ljava/util/List;
   * Goal 34. Weak Mutation 17: org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;:147 - ReplaceComparisonOperator == -> !=
   * Goal 35. Weak Mutation 18: org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;:153 - ReplaceComparisonOperator == -> !=
   * Goal 36. Weak Mutation 20: org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;:155 - ReplaceComparisonOperator <= -> ==
   * Goal 37. Weak Mutation 23: org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;:155 - ReplaceConstant - 0 -> 1
   * Goal 38. Weak Mutation 24: org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;:155 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Options options0 = new Options();
      Option option0 = new Option("", "Wm`#k\"QwT1IVz&@~-7");
      option0.setRequired(true);
      Options options1 = options0.addOption(option0);
      List list0 = options1.getRequiredOptions();
      assertEquals(1, list0.size());
  }

  //Test case number: 3
  /*
   * 46 covered goals:
   * Goal 1. org.apache.commons.cli.Options.<init>()V: root-Branch
   * Goal 2. org.apache.commons.cli.Options.getOptionGroup(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/OptionGroup;: root-Branch
   * Goal 3. org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;: I10 Branch 1 IFEQ L72 - false
   * Goal 4. org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;: I22 Branch 2 IFEQ L77 - true
   * Goal 5. org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;: I22 Branch 2 IFEQ L77 - false
   * Goal 6. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: I9 Branch 3 IFEQ L147 - false
   * Goal 7. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: I23 Branch 4 IFEQ L153 - true
   * Goal 8. Branch org.apache.commons.cli.Options.getOptionGroup(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/OptionGroup;: root-Branch in context: org.apache.commons.cli.Options:getOptionGroup(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/OptionGroup;
   * Goal 9. Branch org.apache.commons.cli.Options.<init>()V: root-Branch in context: org.apache.commons.cli.Options:<init>()V
   * Goal 10. Branch org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;: I10 Branch 1 IFEQ L72 - false in context: org.apache.commons.cli.Options:addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;
   * Goal 11. Branch org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;: I22 Branch 2 IFEQ L77 - false in context: org.apache.commons.cli.Options:addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;
   * Goal 12. Branch org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;: I22 Branch 2 IFEQ L77 - true in context: org.apache.commons.cli.Options:addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;
   * Goal 13. [Output]: org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;:NonNull
   * Goal 14. [Output]: org.apache.commons.cli.Options.getOptionGroup(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/OptionGroup;:NonNull:org.apache.commons.cli.OptionGroup:isRequired()Z:True
   * Goal 15. org.apache.commons.cli.Options.<init>()V: Line 51
   * Goal 16. org.apache.commons.cli.Options.<init>()V: Line 54
   * Goal 17. org.apache.commons.cli.Options.<init>()V: Line 57
   * Goal 18. org.apache.commons.cli.Options.<init>()V: Line 60
   * Goal 19. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 144
   * Goal 20. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 147
   * Goal 21. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 149
   * Goal 22. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 153
   * Goal 23. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 162
   * Goal 24. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 164
   * Goal 25. org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;: Line 70
   * Goal 26. org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;: Line 72
   * Goal 27. org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;: Line 74
   * Goal 28. org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;: Line 77
   * Goal 29. org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;: Line 79
   * Goal 30. org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;: Line 84
   * Goal 31. org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;: Line 85
   * Goal 32. org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;: Line 87
   * Goal 33. org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;: Line 88
   * Goal 34. org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;: Line 90
   * Goal 35. org.apache.commons.cli.Options.getOptionGroup(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/OptionGroup;: Line 239
   * Goal 36. [METHOD] org.apache.commons.cli.Options.<init>()V
   * Goal 37. [METHOD] org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;
   * Goal 38. [METHOD] org.apache.commons.cli.Options.getOptionGroup(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/OptionGroup;
   * Goal 39. [METHODNOEX] org.apache.commons.cli.Options.<init>()V
   * Goal 40. [METHODNOEX] org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;
   * Goal 41. [METHODNOEX] org.apache.commons.cli.Options.getOptionGroup(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/OptionGroup;
   * Goal 42. Weak Mutation 0: org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;:72 - ReplaceComparisonOperator == -> !=
   * Goal 43. Weak Mutation 1: org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;:77 - ReplaceComparisonOperator == -> !=
   * Goal 44. Weak Mutation 2: org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;:84 - ReplaceConstant - 0 -> 1
   * Goal 45. Weak Mutation 17: org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;:147 - ReplaceComparisonOperator == -> !=
   * Goal 46. Weak Mutation 18: org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;:153 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option("8", "8", true, "8");
      optionGroup0.addOption(option0);
      optionGroup0.setRequired(true);
      Options options1 = options0.addOptionGroup(optionGroup0);
      OptionGroup optionGroup1 = options1.getOptionGroup(option0);
      assertFalse(option0.isRequired());
      assertNotNull(optionGroup1);
  }

  //Test case number: 4
  /*
   * 45 covered goals:
   * Goal 1. org.apache.commons.cli.Options.<init>()V: root-Branch
   * Goal 2. org.apache.commons.cli.Options.getOptionGroup(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/OptionGroup;: root-Branch
   * Goal 3. org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;: I10 Branch 1 IFEQ L72 - true
   * Goal 4. org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;: I22 Branch 2 IFEQ L77 - true
   * Goal 5. org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;: I22 Branch 2 IFEQ L77 - false
   * Goal 6. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: I9 Branch 3 IFEQ L147 - false
   * Goal 7. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: I23 Branch 4 IFEQ L153 - true
   * Goal 8. Branch org.apache.commons.cli.Options.getOptionGroup(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/OptionGroup;: root-Branch in context: org.apache.commons.cli.Options:getOptionGroup(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/OptionGroup;
   * Goal 9. Branch org.apache.commons.cli.Options.<init>()V: root-Branch in context: org.apache.commons.cli.Options:<init>()V
   * Goal 10. Branch org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;: I10 Branch 1 IFEQ L72 - true in context: org.apache.commons.cli.Options:addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;
   * Goal 11. Branch org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;: I22 Branch 2 IFEQ L77 - false in context: org.apache.commons.cli.Options:addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;
   * Goal 12. Branch org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;: I22 Branch 2 IFEQ L77 - true in context: org.apache.commons.cli.Options:addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;
   * Goal 13. [Output]: org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;:NonNull
   * Goal 14. [Output]: org.apache.commons.cli.Options.getOptionGroup(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/OptionGroup;:NonNull:org.apache.commons.cli.OptionGroup:isRequired()Z:False
   * Goal 15. org.apache.commons.cli.Options.<init>()V: Line 51
   * Goal 16. org.apache.commons.cli.Options.<init>()V: Line 54
   * Goal 17. org.apache.commons.cli.Options.<init>()V: Line 57
   * Goal 18. org.apache.commons.cli.Options.<init>()V: Line 60
   * Goal 19. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 144
   * Goal 20. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 147
   * Goal 21. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 149
   * Goal 22. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 153
   * Goal 23. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 162
   * Goal 24. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 164
   * Goal 25. org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;: Line 70
   * Goal 26. org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;: Line 72
   * Goal 27. org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;: Line 77
   * Goal 28. org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;: Line 79
   * Goal 29. org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;: Line 84
   * Goal 30. org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;: Line 85
   * Goal 31. org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;: Line 87
   * Goal 32. org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;: Line 88
   * Goal 33. org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;: Line 90
   * Goal 34. org.apache.commons.cli.Options.getOptionGroup(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/OptionGroup;: Line 239
   * Goal 35. [METHOD] org.apache.commons.cli.Options.<init>()V
   * Goal 36. [METHOD] org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;
   * Goal 37. [METHOD] org.apache.commons.cli.Options.getOptionGroup(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/OptionGroup;
   * Goal 38. [METHODNOEX] org.apache.commons.cli.Options.<init>()V
   * Goal 39. [METHODNOEX] org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;
   * Goal 40. [METHODNOEX] org.apache.commons.cli.Options.getOptionGroup(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/OptionGroup;
   * Goal 41. Weak Mutation 0: org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;:72 - ReplaceComparisonOperator == -> !=
   * Goal 42. Weak Mutation 1: org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;:77 - ReplaceComparisonOperator == -> !=
   * Goal 43. Weak Mutation 2: org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;:84 - ReplaceConstant - 0 -> 1
   * Goal 44. Weak Mutation 17: org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;:147 - ReplaceComparisonOperator == -> !=
   * Goal 45. Weak Mutation 18: org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;:153 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option("", "", true, "");
      optionGroup0.addOption(option0);
      Options options1 = options0.addOptionGroup(optionGroup0);
      OptionGroup optionGroup1 = options1.getOptionGroup(option0);
      assertNotNull(optionGroup1);
      assertFalse(option0.isRequired());
  }

  //Test case number: 5
  /*
   * 42 covered goals:
   * Goal 1. org.apache.commons.cli.Options.<init>()V: root-Branch
   * Goal 2. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: I9 Branch 3 IFEQ L147 - true
   * Goal 3. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: I23 Branch 4 IFEQ L153 - true
   * Goal 4. org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;: I11 Branch 7 IFLE L208 - false
   * Goal 5. org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;: I17 Branch 8 IFEQ L208 - false
   * Goal 6. Branch org.apache.commons.cli.Options.<init>()V: root-Branch in context: org.apache.commons.cli.Options:<init>()V
   * Goal 7. Branch org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: I9 Branch 3 IFEQ L147 - true in context: org.apache.commons.cli.Options:addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;
   * Goal 8. Branch org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: I23 Branch 4 IFEQ L153 - true in context: org.apache.commons.cli.Options:addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;
   * Goal 9. Branch org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;: I17 Branch 8 IFEQ L208 - false in context: org.apache.commons.cli.Options:getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;
   * Goal 10. Branch org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;: I11 Branch 7 IFLE L208 - false in context: org.apache.commons.cli.Options:getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;
   * Goal 11. [Output]: org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;:NonNull
   * Goal 12. [Output]: org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:getArgs()I:Negative
   * Goal 13. [Output]: org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:hasArg()Z:False
   * Goal 14. [Output]: org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:hasArgName()Z:True
   * Goal 15. [Output]: org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:hasArgs()Z:False
   * Goal 16. [Output]: org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:hasLongOpt()Z:False
   * Goal 17. [Output]: org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:hasOptionalArg()Z:False
   * Goal 18. [Output]: org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:hasValueSeparator()Z:False
   * Goal 19. [Output]: org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:isRequired()Z:True
   * Goal 20. org.apache.commons.cli.Options.<init>()V: Line 51
   * Goal 21. org.apache.commons.cli.Options.<init>()V: Line 54
   * Goal 22. org.apache.commons.cli.Options.<init>()V: Line 57
   * Goal 23. org.apache.commons.cli.Options.<init>()V: Line 60
   * Goal 24. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 144
   * Goal 25. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 147
   * Goal 26. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 153
   * Goal 27. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 162
   * Goal 28. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 164
   * Goal 29. org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;: Line 206
   * Goal 30. org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;: Line 208
   * Goal 31. org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;: Line 210
   * Goal 32. [METHOD] org.apache.commons.cli.Options.<init>()V
   * Goal 33. [METHOD] org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;
   * Goal 34. [METHOD] org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;
   * Goal 35. [METHODNOEX] org.apache.commons.cli.Options.<init>()V
   * Goal 36. [METHODNOEX] org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;
   * Goal 37. [METHODNOEX] org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;
   * Goal 38. Weak Mutation 17: org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;:147 - ReplaceComparisonOperator == -> !=
   * Goal 39. Weak Mutation 18: org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;:153 - ReplaceComparisonOperator == -> !=
   * Goal 40. Weak Mutation 25: org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;:208 - ReplaceComparisonOperator <= -> -1
   * Goal 41. Weak Mutation 28: org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;:208 - ReplaceConstant - 1 -> 0
   * Goal 42. Weak Mutation 30: org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;:208 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Options options0 = new Options();
      Option option0 = new Option("", "Wm`#k\"QwT1IVz&@~-7");
      options0.addOption(option0);
      option0.setRequired(true);
      Option option1 = options0.getOption("");
      assertEquals((-2), Option.UNLIMITED_VALUES);
  }

  //Test case number: 6
  /*
   * 56 covered goals:
   * Goal 1. org.apache.commons.cli.Options.addOption(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;: root-Branch
   * Goal 2. org.apache.commons.cli.Options.<init>()V: root-Branch
   * Goal 3. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: I9 Branch 3 IFEQ L147 - false
   * Goal 4. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: I23 Branch 4 IFEQ L153 - true
   * Goal 5. org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;: I11 Branch 7 IFLE L208 - false
   * Goal 6. org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;: I17 Branch 8 IFEQ L208 - false
   * Goal 7. Branch org.apache.commons.cli.Options.addOption(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;: root-Branch in context: org.apache.commons.cli.Options:addOption(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;
   * Goal 8. Branch org.apache.commons.cli.Options.<init>()V: root-Branch in context: org.apache.commons.cli.Options:<init>()V
   * Goal 9. Branch org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;: I17 Branch 8 IFEQ L208 - false in context: org.apache.commons.cli.Options:getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;
   * Goal 10. Branch org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;: I11 Branch 7 IFLE L208 - false in context: org.apache.commons.cli.Options:getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;
   * Goal 11. [Output]: org.apache.commons.cli.Options.addOption(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;:NonNull
   * Goal 12. [Output]: org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:getArgs()I:Positive
   * Goal 13. [Output]: org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:getId()I:Positive
   * Goal 14. [Output]: org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:hasArg()Z:True
   * Goal 15. [Output]: org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:hasArgName()Z:True
   * Goal 16. [Output]: org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:hasArgs()Z:False
   * Goal 17. [Output]: org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:hasArgs()Z:True
   * Goal 18. [Output]: org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:hasLongOpt()Z:True
   * Goal 19. [Output]: org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:hasOptionalArg()Z:False
   * Goal 20. [Output]: org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:hasValueSeparator()Z:False
   * Goal 21. [Output]: org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:isRequired()Z:False
   * Goal 22. org.apache.commons.cli.Options.<init>()V: Line 51
   * Goal 23. org.apache.commons.cli.Options.<init>()V: Line 54
   * Goal 24. org.apache.commons.cli.Options.<init>()V: Line 57
   * Goal 25. org.apache.commons.cli.Options.<init>()V: Line 60
   * Goal 26. org.apache.commons.cli.Options.addOption(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;: Line 131
   * Goal 27. org.apache.commons.cli.Options.addOption(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;: Line 133
   * Goal 28. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 144
   * Goal 29. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 147
   * Goal 30. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 149
   * Goal 31. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 153
   * Goal 32. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 162
   * Goal 33. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 164
   * Goal 34. org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;: Line 206
   * Goal 35. org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;: Line 208
   * Goal 36. org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;: Line 210
   * Goal 37. [METHOD] org.apache.commons.cli.Options.<init>()V
   * Goal 38. [METHOD] org.apache.commons.cli.Options.addOption(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;
   * Goal 39. [METHOD] org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;
   * Goal 40. [METHODNOEX] org.apache.commons.cli.Options.<init>()V
   * Goal 41. [METHODNOEX] org.apache.commons.cli.Options.addOption(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;
   * Goal 42. [METHODNOEX] org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;
   * Goal 43. Weak Mutation 8: org.apache.commons.cli.Options.addOption(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;:131 - ReplaceVariable opt -> description
   * Goal 44. Weak Mutation 9: org.apache.commons.cli.Options.addOption(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;:131 - ReplaceVariable opt -> longOpt
   * Goal 45. Weak Mutation 10: org.apache.commons.cli.Options.addOption(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;:131 - ReplaceVariable longOpt -> description
   * Goal 46. Weak Mutation 11: org.apache.commons.cli.Options.addOption(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;:131 - ReplaceVariable longOpt -> opt
   * Goal 47. Weak Mutation 12: org.apache.commons.cli.Options.addOption(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;:131 - InsertUnaryOp Negation of hasArg
   * Goal 48. Weak Mutation 13: org.apache.commons.cli.Options.addOption(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;:131 - InsertUnaryOp IINC 1 hasArg
   * Goal 49. Weak Mutation 14: org.apache.commons.cli.Options.addOption(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;:131 - InsertUnaryOp IINC -1 hasArg
   * Goal 50. Weak Mutation 15: org.apache.commons.cli.Options.addOption(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;:131 - ReplaceVariable description -> opt
   * Goal 51. Weak Mutation 16: org.apache.commons.cli.Options.addOption(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;:131 - ReplaceVariable description -> longOpt
   * Goal 52. Weak Mutation 17: org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;:147 - ReplaceComparisonOperator == -> !=
   * Goal 53. Weak Mutation 18: org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;:153 - ReplaceComparisonOperator == -> !=
   * Goal 54. Weak Mutation 25: org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;:208 - ReplaceComparisonOperator <= -> -1
   * Goal 55. Weak Mutation 28: org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;:208 - ReplaceConstant - 1 -> 0
   * Goal 56. Weak Mutation 30: org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;:208 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Options options0 = new Options();
      Options options1 = options0.addOption("Dk4NQ5n7X", "~;yXgj", true, "MW0qv+)ij;+");
      Option option0 = options1.getOption("Dk4NQ5n7X");
      assertNotNull(option0);
      assertEquals(1, option0.getArgs());
      
      option0.setArgs(321);
      Option option1 = options0.getOption("Dk4NQ5n7X");
      assertEquals("MW0qv+)ij;+", option1.getDescription());
  }

  //Test case number: 7
  /*
   * 61 covered goals:
   * Goal 1. org.apache.commons.cli.Options.addOption(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;: root-Branch
   * Goal 2. org.apache.commons.cli.Options.<init>()V: root-Branch
   * Goal 3. org.apache.commons.cli.Options.toString()Ljava/lang/String;: root-Branch
   * Goal 4. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: I9 Branch 3 IFEQ L147 - false
   * Goal 5. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: I23 Branch 4 IFEQ L153 - true
   * Goal 6. org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;: I11 Branch 7 IFLE L208 - false
   * Goal 7. org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;: I17 Branch 8 IFEQ L208 - false
   * Goal 8. Branch org.apache.commons.cli.Options.addOption(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;: root-Branch in context: org.apache.commons.cli.Options:addOption(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;
   * Goal 9. Branch org.apache.commons.cli.Options.toString()Ljava/lang/String;: root-Branch in context: org.apache.commons.cli.Options:toString()Ljava/lang/String;
   * Goal 10. Branch org.apache.commons.cli.Options.<init>()V: root-Branch in context: org.apache.commons.cli.Options:<init>()V
   * Goal 11. Branch org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;: I17 Branch 8 IFEQ L208 - false in context: org.apache.commons.cli.Options:getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;
   * Goal 12. Branch org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;: I11 Branch 7 IFLE L208 - false in context: org.apache.commons.cli.Options:getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;
   * Goal 13. toString()Ljava/lang/String;_java.lang.StackOverflowError_IMPLICIT
   * Goal 14. [Output]: org.apache.commons.cli.Options.addOption(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;:NonNull
   * Goal 15. [Output]: org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:getArgs()I:Positive
   * Goal 16. [Output]: org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:getId()I:Positive
   * Goal 17. [Output]: org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:hasArg()Z:True
   * Goal 18. [Output]: org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:hasArgName()Z:True
   * Goal 19. [Output]: org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:hasArgs()Z:False
   * Goal 20. [Output]: org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:hasLongOpt()Z:True
   * Goal 21. [Output]: org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:hasOptionalArg()Z:False
   * Goal 22. [Output]: org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:hasValueSeparator()Z:False
   * Goal 23. [Output]: org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:isRequired()Z:False
   * Goal 24. org.apache.commons.cli.Options.<init>()V: Line 51
   * Goal 25. org.apache.commons.cli.Options.<init>()V: Line 54
   * Goal 26. org.apache.commons.cli.Options.<init>()V: Line 57
   * Goal 27. org.apache.commons.cli.Options.<init>()V: Line 60
   * Goal 28. org.apache.commons.cli.Options.addOption(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;: Line 131
   * Goal 29. org.apache.commons.cli.Options.addOption(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;: Line 133
   * Goal 30. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 144
   * Goal 31. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 147
   * Goal 32. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 149
   * Goal 33. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 153
   * Goal 34. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 162
   * Goal 35. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 164
   * Goal 36. org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;: Line 206
   * Goal 37. org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;: Line 208
   * Goal 38. org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;: Line 210
   * Goal 39. org.apache.commons.cli.Options.toString()Ljava/lang/String;: Line 249
   * Goal 40. org.apache.commons.cli.Options.toString()Ljava/lang/String;: Line 251
   * Goal 41. org.apache.commons.cli.Options.toString()Ljava/lang/String;: Line 252
   * Goal 42. org.apache.commons.cli.Options.toString()Ljava/lang/String;: Line 253
   * Goal 43. org.apache.commons.cli.Options.toString()Ljava/lang/String;: Line 254
   * Goal 44. [METHOD] org.apache.commons.cli.Options.<init>()V
   * Goal 45. [METHOD] org.apache.commons.cli.Options.addOption(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;
   * Goal 46. [METHOD] org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;
   * Goal 47. [METHOD] org.apache.commons.cli.Options.toString()Ljava/lang/String;
   * Goal 48. [METHODNOEX] org.apache.commons.cli.Options.<init>()V
   * Goal 49. [METHODNOEX] org.apache.commons.cli.Options.addOption(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;
   * Goal 50. [METHODNOEX] org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;
   * Goal 51. Weak Mutation 12: org.apache.commons.cli.Options.addOption(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;:131 - InsertUnaryOp Negation of hasArg
   * Goal 52. Weak Mutation 13: org.apache.commons.cli.Options.addOption(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;:131 - InsertUnaryOp IINC 1 hasArg
   * Goal 53. Weak Mutation 14: org.apache.commons.cli.Options.addOption(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;:131 - InsertUnaryOp IINC -1 hasArg
   * Goal 54. Weak Mutation 17: org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;:147 - ReplaceComparisonOperator == -> !=
   * Goal 55. Weak Mutation 18: org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;:153 - ReplaceComparisonOperator == -> !=
   * Goal 56. Weak Mutation 25: org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;:208 - ReplaceComparisonOperator <= -> -1
   * Goal 57. Weak Mutation 28: org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;:208 - ReplaceConstant - 1 -> 0
   * Goal 58. Weak Mutation 30: org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;:208 - ReplaceComparisonOperator == -> !=
   * Goal 59. Weak Mutation 45: org.apache.commons.cli.Options.toString()Ljava/lang/String;:251 - ReplaceConstant - [ Options: [ short  -> 
   * Goal 60. Weak Mutation 46: org.apache.commons.cli.Options.toString()Ljava/lang/String;:252 - ReplaceComparisonOperator == -> !=
   * Goal 61. Weak Mutation 47: org.apache.commons.cli.Options.toString()Ljava/lang/String;:253 - ReplaceConstant -  ] [ long  -> 
   */

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Options options0 = new Options();
      Options options1 = options0.addOption("Dk4NQ5n7X", "Dk4NQ5n7X", true, "Dk4NQ5n7X");
      Option option0 = options1.getOption("Dk4NQ5n7X");
      option0.setType(option0);
      // Undeclared exception!
      try { 
        options0.toString();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 8
  /*
   * 43 covered goals:
   * Goal 1. org.apache.commons.cli.Options.addOption(Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;: root-Branch
   * Goal 2. org.apache.commons.cli.Options.addOption(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;: root-Branch
   * Goal 3. org.apache.commons.cli.Options.<init>()V: root-Branch
   * Goal 4. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: I9 Branch 3 IFEQ L147 - true
   * Goal 5. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: I23 Branch 4 IFEQ L153 - true
   * Goal 6. Branch org.apache.commons.cli.Options.addOption(Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;: root-Branch in context: org.apache.commons.cli.Options:addOption(Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;
   * Goal 7. Branch org.apache.commons.cli.Options.<init>()V: root-Branch in context: org.apache.commons.cli.Options:<init>()V
   * Goal 8. hasOption(Ljava/lang/String;)Z_java.lang.NullPointerException_IMPLICIT
   * Goal 9. [Output]: org.apache.commons.cli.Options.addOption(Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;:NonNull
   * Goal 10. org.apache.commons.cli.Options.<init>()V: Line 51
   * Goal 11. org.apache.commons.cli.Options.<init>()V: Line 54
   * Goal 12. org.apache.commons.cli.Options.<init>()V: Line 57
   * Goal 13. org.apache.commons.cli.Options.<init>()V: Line 60
   * Goal 14. org.apache.commons.cli.Options.addOption(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;: Line 131
   * Goal 15. org.apache.commons.cli.Options.addOption(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;: Line 133
   * Goal 16. org.apache.commons.cli.Options.addOption(Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;: Line 114
   * Goal 17. org.apache.commons.cli.Options.addOption(Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;: Line 116
   * Goal 18. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 144
   * Goal 19. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 147
   * Goal 20. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 153
   * Goal 21. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 162
   * Goal 22. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 164
   * Goal 23. org.apache.commons.cli.Options.hasOption(Ljava/lang/String;)Z: Line 225
   * Goal 24. org.apache.commons.cli.Options.hasOption(Ljava/lang/String;)Z: Line 227
   * Goal 25. [METHOD] org.apache.commons.cli.Options.<init>()V
   * Goal 26. [METHOD] org.apache.commons.cli.Options.addOption(Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;
   * Goal 27. [METHOD] org.apache.commons.cli.Options.hasOption(Ljava/lang/String;)Z
   * Goal 28. [METHODNOEX] org.apache.commons.cli.Options.<init>()V
   * Goal 29. [METHODNOEX] org.apache.commons.cli.Options.addOption(Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;
   * Goal 30. Weak Mutation 3: org.apache.commons.cli.Options.addOption(Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;:114 - ReplaceVariable opt -> description
   * Goal 31. Weak Mutation 4: org.apache.commons.cli.Options.addOption(Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;:114 - InsertUnaryOp Negation of hasArg
   * Goal 32. Weak Mutation 5: org.apache.commons.cli.Options.addOption(Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;:114 - InsertUnaryOp IINC 1 hasArg
   * Goal 33. Weak Mutation 6: org.apache.commons.cli.Options.addOption(Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;:114 - InsertUnaryOp IINC -1 hasArg
   * Goal 34. Weak Mutation 7: org.apache.commons.cli.Options.addOption(Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;:114 - ReplaceVariable description -> opt
   * Goal 35. Weak Mutation 8: org.apache.commons.cli.Options.addOption(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;:131 - ReplaceVariable opt -> description
   * Goal 36. Weak Mutation 10: org.apache.commons.cli.Options.addOption(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;:131 - ReplaceVariable longOpt -> description
   * Goal 37. Weak Mutation 12: org.apache.commons.cli.Options.addOption(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;:131 - InsertUnaryOp Negation of hasArg
   * Goal 38. Weak Mutation 13: org.apache.commons.cli.Options.addOption(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;:131 - InsertUnaryOp IINC 1 hasArg
   * Goal 39. Weak Mutation 14: org.apache.commons.cli.Options.addOption(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;:131 - InsertUnaryOp IINC -1 hasArg
   * Goal 40. Weak Mutation 15: org.apache.commons.cli.Options.addOption(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;:131 - ReplaceVariable description -> opt
   * Goal 41. Weak Mutation 16: org.apache.commons.cli.Options.addOption(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;:131 - ReplaceVariable description -> longOpt
   * Goal 42. Weak Mutation 17: org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;:147 - ReplaceComparisonOperator == -> !=
   * Goal 43. Weak Mutation 18: org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;:153 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Options options0 = new Options();
      Options options1 = options0.addOption((String) null, false, "\"Xr");
      // Undeclared exception!
      try { 
        options1.hasOption("-");
       //  fail("Expecting exception: NullPointerException");
       // Unstable assertion
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 9
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.cli.Options.<init>()V: root-Branch
   * Goal 2. org.apache.commons.cli.Options.getOptionGroup(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/OptionGroup;: root-Branch
   * Goal 3. Branch org.apache.commons.cli.Options.getOptionGroup(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/OptionGroup;: root-Branch in context: org.apache.commons.cli.Options:getOptionGroup(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/OptionGroup;
   * Goal 4. Branch org.apache.commons.cli.Options.<init>()V: root-Branch in context: org.apache.commons.cli.Options:<init>()V
   * Goal 5. getOptionGroup(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/OptionGroup;_java.lang.NullPointerException_IMPLICIT
   * Goal 6. org.apache.commons.cli.Options.<init>()V: Line 51
   * Goal 7. org.apache.commons.cli.Options.<init>()V: Line 54
   * Goal 8. org.apache.commons.cli.Options.<init>()V: Line 57
   * Goal 9. org.apache.commons.cli.Options.<init>()V: Line 60
   * Goal 10. org.apache.commons.cli.Options.getOptionGroup(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/OptionGroup;: Line 239
   * Goal 11. [METHOD] org.apache.commons.cli.Options.<init>()V
   * Goal 12. [METHOD] org.apache.commons.cli.Options.getOptionGroup(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/OptionGroup;
   * Goal 13. [METHODNOEX] org.apache.commons.cli.Options.<init>()V
   */

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        options0.getOptionGroup((Option) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.apache.commons.cli.Options", e);
      }
  }

  //Test case number: 10
  /*
   * 26 covered goals:
   * Goal 1. org.apache.commons.cli.Options.<init>()V: root-Branch
   * Goal 2. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: I9 Branch 3 IFEQ L147 - true
   * Goal 3. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: I23 Branch 4 IFEQ L153 - true
   * Goal 4. Branch org.apache.commons.cli.Options.<init>()V: root-Branch in context: org.apache.commons.cli.Options:<init>()V
   * Goal 5. Branch org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: I9 Branch 3 IFEQ L147 - true in context: org.apache.commons.cli.Options:addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;
   * Goal 6. Branch org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: I23 Branch 4 IFEQ L153 - true in context: org.apache.commons.cli.Options:addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;
   * Goal 7. getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;_java.lang.NullPointerException_IMPLICIT
   * Goal 8. [Output]: org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;:NonNull
   * Goal 9. org.apache.commons.cli.Options.<init>()V: Line 51
   * Goal 10. org.apache.commons.cli.Options.<init>()V: Line 54
   * Goal 11. org.apache.commons.cli.Options.<init>()V: Line 57
   * Goal 12. org.apache.commons.cli.Options.<init>()V: Line 60
   * Goal 13. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 144
   * Goal 14. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 147
   * Goal 15. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 153
   * Goal 16. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 162
   * Goal 17. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 164
   * Goal 18. org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;: Line 206
   * Goal 19. org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;: Line 208
   * Goal 20. [METHOD] org.apache.commons.cli.Options.<init>()V
   * Goal 21. [METHOD] org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;
   * Goal 22. [METHOD] org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;
   * Goal 23. [METHODNOEX] org.apache.commons.cli.Options.<init>()V
   * Goal 24. [METHODNOEX] org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;
   * Goal 25. Weak Mutation 17: org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;:147 - ReplaceComparisonOperator == -> !=
   * Goal 26. Weak Mutation 18: org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;:153 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Options options0 = new Options();
      Option option0 = new Option((String) null, (String) null);
      options0.addOption(option0);
      // Undeclared exception!
      try { 
        options0.getOption("");
       //  fail("Expecting exception: NullPointerException");
       // Unstable assertion
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 11
  /*
   * 11 covered goals:
   * Goal 1. org.apache.commons.cli.Options.<init>()V: root-Branch
   * Goal 2. Branch org.apache.commons.cli.Options.<init>()V: root-Branch in context: org.apache.commons.cli.Options:<init>()V
   * Goal 3. addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;_java.lang.NullPointerException_IMPLICIT
   * Goal 4. org.apache.commons.cli.Options.<init>()V: Line 51
   * Goal 5. org.apache.commons.cli.Options.<init>()V: Line 54
   * Goal 6. org.apache.commons.cli.Options.<init>()V: Line 57
   * Goal 7. org.apache.commons.cli.Options.<init>()V: Line 60
   * Goal 8. org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;: Line 70
   * Goal 9. [METHOD] org.apache.commons.cli.Options.<init>()V
   * Goal 10. [METHOD] org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;
   * Goal 11. [METHODNOEX] org.apache.commons.cli.Options.<init>()V
   */

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        options0.addOptionGroup((OptionGroup) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.apache.commons.cli.Options", e);
      }
  }

  //Test case number: 12
  /*
   * 22 covered goals:
   * Goal 1. org.apache.commons.cli.Options.addOption(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;: root-Branch
   * Goal 2. org.apache.commons.cli.Options.<init>()V: root-Branch
   * Goal 3. Branch org.apache.commons.cli.Options.addOption(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;: root-Branch in context: org.apache.commons.cli.Options:addOption(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;
   * Goal 4. Branch org.apache.commons.cli.Options.<init>()V: root-Branch in context: org.apache.commons.cli.Options:<init>()V
   * Goal 5. addOption(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 6. org.apache.commons.cli.Options.<init>()V: Line 51
   * Goal 7. org.apache.commons.cli.Options.<init>()V: Line 54
   * Goal 8. org.apache.commons.cli.Options.<init>()V: Line 57
   * Goal 9. org.apache.commons.cli.Options.<init>()V: Line 60
   * Goal 10. org.apache.commons.cli.Options.addOption(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;: Line 131
   * Goal 11. [METHOD] org.apache.commons.cli.Options.<init>()V
   * Goal 12. [METHOD] org.apache.commons.cli.Options.addOption(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;
   * Goal 13. [METHODNOEX] org.apache.commons.cli.Options.<init>()V
   * Goal 14. Weak Mutation 8: org.apache.commons.cli.Options.addOption(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;:131 - ReplaceVariable opt -> description
   * Goal 15. Weak Mutation 9: org.apache.commons.cli.Options.addOption(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;:131 - ReplaceVariable opt -> longOpt
   * Goal 16. Weak Mutation 10: org.apache.commons.cli.Options.addOption(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;:131 - ReplaceVariable longOpt -> description
   * Goal 17. Weak Mutation 11: org.apache.commons.cli.Options.addOption(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;:131 - ReplaceVariable longOpt -> opt
   * Goal 18. Weak Mutation 12: org.apache.commons.cli.Options.addOption(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;:131 - InsertUnaryOp Negation of hasArg
   * Goal 19. Weak Mutation 13: org.apache.commons.cli.Options.addOption(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;:131 - InsertUnaryOp IINC 1 hasArg
   * Goal 20. Weak Mutation 14: org.apache.commons.cli.Options.addOption(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;:131 - InsertUnaryOp IINC -1 hasArg
   * Goal 21. Weak Mutation 15: org.apache.commons.cli.Options.addOption(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;:131 - ReplaceVariable description -> opt
   * Goal 22. Weak Mutation 16: org.apache.commons.cli.Options.addOption(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;:131 - ReplaceVariable description -> longOpt
   */

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        options0.addOption("J1<*ssS-q", "2$0V70O}+C6*?]i_w", true, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // opt contains illegal character value '<'
         //
         assertThrownBy("org.apache.commons.cli.OptionValidator", e);
      }
  }

  //Test case number: 13
  /*
   * 43 covered goals:
   * Goal 1. org.apache.commons.cli.Options.<init>()V: root-Branch
   * Goal 2. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: I9 Branch 3 IFEQ L147 - false
   * Goal 3. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: I23 Branch 4 IFEQ L153 - true
   * Goal 4. org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;: I11 Branch 7 IFLE L208 - false
   * Goal 5. org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;: I17 Branch 8 IFEQ L208 - false
   * Goal 6. Branch org.apache.commons.cli.Options.<init>()V: root-Branch in context: org.apache.commons.cli.Options:<init>()V
   * Goal 7. Branch org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: I9 Branch 3 IFEQ L147 - false in context: org.apache.commons.cli.Options:addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;
   * Goal 8. Branch org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: I23 Branch 4 IFEQ L153 - true in context: org.apache.commons.cli.Options:addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;
   * Goal 9. Branch org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;: I17 Branch 8 IFEQ L208 - false in context: org.apache.commons.cli.Options:getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;
   * Goal 10. Branch org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;: I11 Branch 7 IFLE L208 - false in context: org.apache.commons.cli.Options:getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;
   * Goal 11. [Output]: org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;:NonNull
   * Goal 12. [Output]: org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:getArgs()I:Negative
   * Goal 13. [Output]: org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:hasArg()Z:False
   * Goal 14. [Output]: org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:hasArgName()Z:True
   * Goal 15. [Output]: org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:hasArgs()Z:False
   * Goal 16. [Output]: org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:hasLongOpt()Z:True
   * Goal 17. [Output]: org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:hasOptionalArg()Z:False
   * Goal 18. [Output]: org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:hasValueSeparator()Z:True
   * Goal 19. [Output]: org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;:NonNull:org.apache.commons.cli.Option:isRequired()Z:False
   * Goal 20. org.apache.commons.cli.Options.<init>()V: Line 51
   * Goal 21. org.apache.commons.cli.Options.<init>()V: Line 54
   * Goal 22. org.apache.commons.cli.Options.<init>()V: Line 57
   * Goal 23. org.apache.commons.cli.Options.<init>()V: Line 60
   * Goal 24. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 144
   * Goal 25. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 147
   * Goal 26. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 149
   * Goal 27. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 153
   * Goal 28. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 162
   * Goal 29. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 164
   * Goal 30. org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;: Line 206
   * Goal 31. org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;: Line 208
   * Goal 32. org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;: Line 210
   * Goal 33. [METHOD] org.apache.commons.cli.Options.<init>()V
   * Goal 34. [METHOD] org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;
   * Goal 35. [METHOD] org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;
   * Goal 36. [METHODNOEX] org.apache.commons.cli.Options.<init>()V
   * Goal 37. [METHODNOEX] org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;
   * Goal 38. [METHODNOEX] org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;
   * Goal 39. Weak Mutation 17: org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;:147 - ReplaceComparisonOperator == -> !=
   * Goal 40. Weak Mutation 18: org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;:153 - ReplaceComparisonOperator == -> !=
   * Goal 41. Weak Mutation 25: org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;:208 - ReplaceComparisonOperator <= -> -1
   * Goal 42. Weak Mutation 28: org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;:208 - ReplaceConstant - 1 -> 0
   * Goal 43. Weak Mutation 30: org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;:208 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Options options0 = new Options();
      Option option0 = new Option("", "", false, "");
      Options options1 = options0.addOption(option0);
      option0.setValueSeparator('.');
      Option option1 = options1.getOption("");
      assertNull(option1.getValue());
  }

  //Test case number: 14
  /*
   * 59 covered goals:
   * Goal 1. org.apache.commons.cli.Options.<init>()V: root-Branch
   * Goal 2. org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;: I10 Branch 1 IFEQ L72 - true
   * Goal 3. org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;: I22 Branch 2 IFEQ L77 - true
   * Goal 4. org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;: I22 Branch 2 IFEQ L77 - false
   * Goal 5. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: I9 Branch 3 IFEQ L147 - false
   * Goal 6. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: I23 Branch 4 IFEQ L153 - true
   * Goal 7. org.apache.commons.cli.Options.hasOption(Ljava/lang/String;)Z: I11 Branch 9 IFLE L227 - true
   * Goal 8. org.apache.commons.cli.Options.hasOption(Ljava/lang/String;)Z: I17 Branch 10 IFNE L227 - false
   * Goal 9. org.apache.commons.cli.Options.hasOption(Ljava/lang/String;)Z: I22 Branch 11 IFLE L227 - false
   * Goal 10. org.apache.commons.cli.Options.hasOption(Ljava/lang/String;)Z: I28 Branch 12 IFEQ L227 - false
   * Goal 11. Branch org.apache.commons.cli.Options.<init>()V: root-Branch in context: org.apache.commons.cli.Options:<init>()V
   * Goal 12. Branch org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;: I10 Branch 1 IFEQ L72 - true in context: org.apache.commons.cli.Options:addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;
   * Goal 13. Branch org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;: I22 Branch 2 IFEQ L77 - false in context: org.apache.commons.cli.Options:addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;
   * Goal 14. Branch org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;: I22 Branch 2 IFEQ L77 - true in context: org.apache.commons.cli.Options:addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;
   * Goal 15. Branch org.apache.commons.cli.Options.hasOption(Ljava/lang/String;)Z: I22 Branch 11 IFLE L227 - false in context: org.apache.commons.cli.Options:hasOption(Ljava/lang/String;)Z
   * Goal 16. Branch org.apache.commons.cli.Options.hasOption(Ljava/lang/String;)Z: I11 Branch 9 IFLE L227 - true in context: org.apache.commons.cli.Options:hasOption(Ljava/lang/String;)Z
   * Goal 17. Branch org.apache.commons.cli.Options.hasOption(Ljava/lang/String;)Z: I17 Branch 10 IFNE L227 - false in context: org.apache.commons.cli.Options:hasOption(Ljava/lang/String;)Z
   * Goal 18. Branch org.apache.commons.cli.Options.hasOption(Ljava/lang/String;)Z: I28 Branch 12 IFEQ L227 - false in context: org.apache.commons.cli.Options:hasOption(Ljava/lang/String;)Z
   * Goal 19. [Output]: org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;:NonNull
   * Goal 20. [Output]: org.apache.commons.cli.Options.hasOption(Ljava/lang/String;)Z:True
   * Goal 21. org.apache.commons.cli.Options.<init>()V: Line 51
   * Goal 22. org.apache.commons.cli.Options.<init>()V: Line 54
   * Goal 23. org.apache.commons.cli.Options.<init>()V: Line 57
   * Goal 24. org.apache.commons.cli.Options.<init>()V: Line 60
   * Goal 25. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 144
   * Goal 26. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 147
   * Goal 27. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 149
   * Goal 28. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 153
   * Goal 29. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 162
   * Goal 30. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 164
   * Goal 31. org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;: Line 70
   * Goal 32. org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;: Line 72
   * Goal 33. org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;: Line 77
   * Goal 34. org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;: Line 79
   * Goal 35. org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;: Line 84
   * Goal 36. org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;: Line 85
   * Goal 37. org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;: Line 87
   * Goal 38. org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;: Line 88
   * Goal 39. org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;: Line 90
   * Goal 40. org.apache.commons.cli.Options.hasOption(Ljava/lang/String;)Z: Line 225
   * Goal 41. org.apache.commons.cli.Options.hasOption(Ljava/lang/String;)Z: Line 227
   * Goal 42. [METHOD] org.apache.commons.cli.Options.<init>()V
   * Goal 43. [METHOD] org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;
   * Goal 44. [METHOD] org.apache.commons.cli.Options.hasOption(Ljava/lang/String;)Z
   * Goal 45. [METHODNOEX] org.apache.commons.cli.Options.<init>()V
   * Goal 46. [METHODNOEX] org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;
   * Goal 47. [METHODNOEX] org.apache.commons.cli.Options.hasOption(Ljava/lang/String;)Z
   * Goal 48. Weak Mutation 0: org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;:72 - ReplaceComparisonOperator == -> !=
   * Goal 49. Weak Mutation 1: org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;:77 - ReplaceComparisonOperator == -> !=
   * Goal 50. Weak Mutation 2: org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;:84 - ReplaceConstant - 0 -> 1
   * Goal 51. Weak Mutation 17: org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;:147 - ReplaceComparisonOperator == -> !=
   * Goal 52. Weak Mutation 18: org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;:153 - ReplaceComparisonOperator == -> !=
   * Goal 53. Weak Mutation 32: org.apache.commons.cli.Options.hasOption(Ljava/lang/String;)Z:227 - ReplaceComparisonOperator <= -> ==
   * Goal 54. Weak Mutation 35: org.apache.commons.cli.Options.hasOption(Ljava/lang/String;)Z:227 - ReplaceConstant - 0 -> 1
   * Goal 55. Weak Mutation 36: org.apache.commons.cli.Options.hasOption(Ljava/lang/String;)Z:227 - ReplaceComparisonOperator != -> ==
   * Goal 56. Weak Mutation 37: org.apache.commons.cli.Options.hasOption(Ljava/lang/String;)Z:227 - ReplaceComparisonOperator <= -> -1
   * Goal 57. Weak Mutation 40: org.apache.commons.cli.Options.hasOption(Ljava/lang/String;)Z:227 - ReplaceConstant - 1 -> 0
   * Goal 58. Weak Mutation 42: org.apache.commons.cli.Options.hasOption(Ljava/lang/String;)Z:227 - ReplaceComparisonOperator == -> !=
   * Goal 59. Weak Mutation 43: org.apache.commons.cli.Options.hasOption(Ljava/lang/String;)Z:227 - ReplaceConstant - 1 -> 0
   */

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option("8", "8", true, "8");
      option0.setLongOpt(":?Q/(6v.CZHYsW\"/");
      optionGroup0.addOption(option0);
      Options options1 = options0.addOptionGroup(optionGroup0);
      boolean boolean0 = options1.hasOption(":?Q/(6v.CZHYsW\"/");
      assertTrue(boolean0);
  }

  //Test case number: 15
  /*
   * 52 covered goals:
   * Goal 1. org.apache.commons.cli.Options.<init>()V: root-Branch
   * Goal 2. org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;: I10 Branch 1 IFEQ L72 - true
   * Goal 3. org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;: I22 Branch 2 IFEQ L77 - true
   * Goal 4. org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;: I22 Branch 2 IFEQ L77 - false
   * Goal 5. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: I9 Branch 3 IFEQ L147 - false
   * Goal 6. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: I23 Branch 4 IFEQ L153 - true
   * Goal 7. org.apache.commons.cli.Options.hasOption(Ljava/lang/String;)Z: I11 Branch 9 IFLE L227 - false
   * Goal 8. org.apache.commons.cli.Options.hasOption(Ljava/lang/String;)Z: I17 Branch 10 IFNE L227 - true
   * Goal 9. Branch org.apache.commons.cli.Options.<init>()V: root-Branch in context: org.apache.commons.cli.Options:<init>()V
   * Goal 10. Branch org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;: I10 Branch 1 IFEQ L72 - true in context: org.apache.commons.cli.Options:addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;
   * Goal 11. Branch org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;: I22 Branch 2 IFEQ L77 - false in context: org.apache.commons.cli.Options:addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;
   * Goal 12. Branch org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;: I22 Branch 2 IFEQ L77 - true in context: org.apache.commons.cli.Options:addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;
   * Goal 13. Branch org.apache.commons.cli.Options.hasOption(Ljava/lang/String;)Z: I11 Branch 9 IFLE L227 - false in context: org.apache.commons.cli.Options:hasOption(Ljava/lang/String;)Z
   * Goal 14. Branch org.apache.commons.cli.Options.hasOption(Ljava/lang/String;)Z: I17 Branch 10 IFNE L227 - true in context: org.apache.commons.cli.Options:hasOption(Ljava/lang/String;)Z
   * Goal 15. [Output]: org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;:NonNull
   * Goal 16. [Output]: org.apache.commons.cli.Options.hasOption(Ljava/lang/String;)Z:True
   * Goal 17. org.apache.commons.cli.Options.<init>()V: Line 51
   * Goal 18. org.apache.commons.cli.Options.<init>()V: Line 54
   * Goal 19. org.apache.commons.cli.Options.<init>()V: Line 57
   * Goal 20. org.apache.commons.cli.Options.<init>()V: Line 60
   * Goal 21. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 144
   * Goal 22. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 147
   * Goal 23. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 149
   * Goal 24. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 153
   * Goal 25. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 162
   * Goal 26. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 164
   * Goal 27. org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;: Line 70
   * Goal 28. org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;: Line 72
   * Goal 29. org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;: Line 77
   * Goal 30. org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;: Line 79
   * Goal 31. org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;: Line 84
   * Goal 32. org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;: Line 85
   * Goal 33. org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;: Line 87
   * Goal 34. org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;: Line 88
   * Goal 35. org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;: Line 90
   * Goal 36. org.apache.commons.cli.Options.hasOption(Ljava/lang/String;)Z: Line 225
   * Goal 37. org.apache.commons.cli.Options.hasOption(Ljava/lang/String;)Z: Line 227
   * Goal 38. [METHOD] org.apache.commons.cli.Options.<init>()V
   * Goal 39. [METHOD] org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;
   * Goal 40. [METHOD] org.apache.commons.cli.Options.hasOption(Ljava/lang/String;)Z
   * Goal 41. [METHODNOEX] org.apache.commons.cli.Options.<init>()V
   * Goal 42. [METHODNOEX] org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;
   * Goal 43. [METHODNOEX] org.apache.commons.cli.Options.hasOption(Ljava/lang/String;)Z
   * Goal 44. Weak Mutation 0: org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;:72 - ReplaceComparisonOperator == -> !=
   * Goal 45. Weak Mutation 1: org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;:77 - ReplaceComparisonOperator == -> !=
   * Goal 46. Weak Mutation 2: org.apache.commons.cli.Options.addOptionGroup(Lorg/apache/commons/cli/OptionGroup;)Lorg/apache/commons/cli/Options;:84 - ReplaceConstant - 0 -> 1
   * Goal 47. Weak Mutation 17: org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;:147 - ReplaceComparisonOperator == -> !=
   * Goal 48. Weak Mutation 18: org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;:153 - ReplaceComparisonOperator == -> !=
   * Goal 49. Weak Mutation 31: org.apache.commons.cli.Options.hasOption(Ljava/lang/String;)Z:227 - ReplaceComparisonOperator <= -> -1
   * Goal 50. Weak Mutation 34: org.apache.commons.cli.Options.hasOption(Ljava/lang/String;)Z:227 - ReplaceConstant - 1 -> 0
   * Goal 51. Weak Mutation 36: org.apache.commons.cli.Options.hasOption(Ljava/lang/String;)Z:227 - ReplaceComparisonOperator != -> ==
   * Goal 52. Weak Mutation 43: org.apache.commons.cli.Options.hasOption(Ljava/lang/String;)Z:227 - ReplaceConstant - 1 -> 0
   */

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option("8", "8", true, "8");
      optionGroup0.addOption(option0);
      Options options1 = options0.addOptionGroup(optionGroup0);
      boolean boolean0 = options1.hasOption("8");
      assertTrue(boolean0);
  }

  //Test case number: 16
  /*
   * 28 covered goals:
   * Goal 1. org.apache.commons.cli.Options.<init>()V: root-Branch
   * Goal 2. org.apache.commons.cli.Options.hasOption(Ljava/lang/String;)Z: I11 Branch 9 IFLE L227 - true
   * Goal 3. org.apache.commons.cli.Options.hasOption(Ljava/lang/String;)Z: I17 Branch 10 IFNE L227 - false
   * Goal 4. org.apache.commons.cli.Options.hasOption(Ljava/lang/String;)Z: I22 Branch 11 IFLE L227 - true
   * Goal 5. org.apache.commons.cli.Options.hasOption(Ljava/lang/String;)Z: I28 Branch 12 IFEQ L227 - true
   * Goal 6. Branch org.apache.commons.cli.Options.<init>()V: root-Branch in context: org.apache.commons.cli.Options:<init>()V
   * Goal 7. Branch org.apache.commons.cli.Options.hasOption(Ljava/lang/String;)Z: I22 Branch 11 IFLE L227 - true in context: org.apache.commons.cli.Options:hasOption(Ljava/lang/String;)Z
   * Goal 8. Branch org.apache.commons.cli.Options.hasOption(Ljava/lang/String;)Z: I11 Branch 9 IFLE L227 - true in context: org.apache.commons.cli.Options:hasOption(Ljava/lang/String;)Z
   * Goal 9. Branch org.apache.commons.cli.Options.hasOption(Ljava/lang/String;)Z: I17 Branch 10 IFNE L227 - false in context: org.apache.commons.cli.Options:hasOption(Ljava/lang/String;)Z
   * Goal 10. Branch org.apache.commons.cli.Options.hasOption(Ljava/lang/String;)Z: I28 Branch 12 IFEQ L227 - true in context: org.apache.commons.cli.Options:hasOption(Ljava/lang/String;)Z
   * Goal 11. [Output]: org.apache.commons.cli.Options.hasOption(Ljava/lang/String;)Z:False
   * Goal 12. org.apache.commons.cli.Options.<init>()V: Line 51
   * Goal 13. org.apache.commons.cli.Options.<init>()V: Line 54
   * Goal 14. org.apache.commons.cli.Options.<init>()V: Line 57
   * Goal 15. org.apache.commons.cli.Options.<init>()V: Line 60
   * Goal 16. org.apache.commons.cli.Options.hasOption(Ljava/lang/String;)Z: Line 225
   * Goal 17. org.apache.commons.cli.Options.hasOption(Ljava/lang/String;)Z: Line 227
   * Goal 18. [METHOD] org.apache.commons.cli.Options.<init>()V
   * Goal 19. [METHOD] org.apache.commons.cli.Options.hasOption(Ljava/lang/String;)Z
   * Goal 20. [METHODNOEX] org.apache.commons.cli.Options.<init>()V
   * Goal 21. [METHODNOEX] org.apache.commons.cli.Options.hasOption(Ljava/lang/String;)Z
   * Goal 22. Weak Mutation 32: org.apache.commons.cli.Options.hasOption(Ljava/lang/String;)Z:227 - ReplaceComparisonOperator <= -> ==
   * Goal 23. Weak Mutation 35: org.apache.commons.cli.Options.hasOption(Ljava/lang/String;)Z:227 - ReplaceConstant - 0 -> 1
   * Goal 24. Weak Mutation 36: org.apache.commons.cli.Options.hasOption(Ljava/lang/String;)Z:227 - ReplaceComparisonOperator != -> ==
   * Goal 25. Weak Mutation 38: org.apache.commons.cli.Options.hasOption(Ljava/lang/String;)Z:227 - ReplaceComparisonOperator <= -> ==
   * Goal 26. Weak Mutation 41: org.apache.commons.cli.Options.hasOption(Ljava/lang/String;)Z:227 - ReplaceConstant - 0 -> 1
   * Goal 27. Weak Mutation 42: org.apache.commons.cli.Options.hasOption(Ljava/lang/String;)Z:227 - ReplaceComparisonOperator == -> !=
   * Goal 28. Weak Mutation 44: org.apache.commons.cli.Options.hasOption(Ljava/lang/String;)Z:227 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Options options0 = new Options();
      boolean boolean0 = options0.hasOption(":?Q/(6v.CZHYsW\"/");
      assertFalse(boolean0);
  }

  //Test case number: 17
  /*
   * 21 covered goals:
   * Goal 1. org.apache.commons.cli.Options.<init>()V: root-Branch
   * Goal 2. org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;: I11 Branch 7 IFLE L208 - true
   * Goal 3. org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;: I17 Branch 8 IFEQ L208 - true
   * Goal 4. Branch org.apache.commons.cli.Options.<init>()V: root-Branch in context: org.apache.commons.cli.Options:<init>()V
   * Goal 5. Branch org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;: I17 Branch 8 IFEQ L208 - true in context: org.apache.commons.cli.Options:getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;
   * Goal 6. Branch org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;: I11 Branch 7 IFLE L208 - true in context: org.apache.commons.cli.Options:getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;
   * Goal 7. [Output]: org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;:Null
   * Goal 8. org.apache.commons.cli.Options.<init>()V: Line 51
   * Goal 9. org.apache.commons.cli.Options.<init>()V: Line 54
   * Goal 10. org.apache.commons.cli.Options.<init>()V: Line 57
   * Goal 11. org.apache.commons.cli.Options.<init>()V: Line 60
   * Goal 12. org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;: Line 206
   * Goal 13. org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;: Line 208
   * Goal 14. org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;: Line 213
   * Goal 15. [METHOD] org.apache.commons.cli.Options.<init>()V
   * Goal 16. [METHOD] org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;
   * Goal 17. [METHODNOEX] org.apache.commons.cli.Options.<init>()V
   * Goal 18. [METHODNOEX] org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;
   * Goal 19. Weak Mutation 26: org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;:208 - ReplaceComparisonOperator <= -> ==
   * Goal 20. Weak Mutation 29: org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;:208 - ReplaceConstant - 0 -> 1
   * Goal 21. Weak Mutation 30: org.apache.commons.cli.Options.getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;:208 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Options options0 = new Options();
      Option option0 = options0.getOption("c.dK6~P8x?Z ~%a");
      assertNull(option0);
  }

  //Test case number: 18
  /*
   * 38 covered goals:
   * Goal 1. org.apache.commons.cli.Options.<init>()V: root-Branch
   * Goal 2. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: I9 Branch 3 IFEQ L147 - true
   * Goal 3. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: I23 Branch 4 IFEQ L153 - false
   * Goal 4. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: I30 Branch 5 IFLE L155 - true
   * Goal 5. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: I30 Branch 5 IFLE L155 - false
   * Goal 6. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: I36 Branch 6 IFEQ L155 - true
   * Goal 7. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: I36 Branch 6 IFEQ L155 - false
   * Goal 8. Branch org.apache.commons.cli.Options.<init>()V: root-Branch in context: org.apache.commons.cli.Options:<init>()V
   * Goal 9. Branch org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: I9 Branch 3 IFEQ L147 - true in context: org.apache.commons.cli.Options:addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;
   * Goal 10. Branch org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: I23 Branch 4 IFEQ L153 - false in context: org.apache.commons.cli.Options:addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;
   * Goal 11. Branch org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: I36 Branch 6 IFEQ L155 - false in context: org.apache.commons.cli.Options:addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;
   * Goal 12. Branch org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: I30 Branch 5 IFLE L155 - true in context: org.apache.commons.cli.Options:addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;
   * Goal 13. Branch org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: I36 Branch 6 IFEQ L155 - true in context: org.apache.commons.cli.Options:addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;
   * Goal 14. Branch org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: I30 Branch 5 IFLE L155 - false in context: org.apache.commons.cli.Options:addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;
   * Goal 15. [Output]: org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;:NonNull
   * Goal 16. org.apache.commons.cli.Options.<init>()V: Line 51
   * Goal 17. org.apache.commons.cli.Options.<init>()V: Line 54
   * Goal 18. org.apache.commons.cli.Options.<init>()V: Line 57
   * Goal 19. org.apache.commons.cli.Options.<init>()V: Line 60
   * Goal 20. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 144
   * Goal 21. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 147
   * Goal 22. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 153
   * Goal 23. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 155
   * Goal 24. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 157
   * Goal 25. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 159
   * Goal 26. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 162
   * Goal 27. org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;: Line 164
   * Goal 28. [METHOD] org.apache.commons.cli.Options.<init>()V
   * Goal 29. [METHOD] org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;
   * Goal 30. [METHODNOEX] org.apache.commons.cli.Options.<init>()V
   * Goal 31. [METHODNOEX] org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;
   * Goal 32. Weak Mutation 17: org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;:147 - ReplaceComparisonOperator == -> !=
   * Goal 33. Weak Mutation 18: org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;:153 - ReplaceComparisonOperator == -> !=
   * Goal 34. Weak Mutation 19: org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;:155 - ReplaceComparisonOperator <= -> -1
   * Goal 35. Weak Mutation 20: org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;:155 - ReplaceComparisonOperator <= -> ==
   * Goal 36. Weak Mutation 22: org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;:155 - ReplaceConstant - 1 -> 0
   * Goal 37. Weak Mutation 23: org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;:155 - ReplaceConstant - 0 -> 1
   * Goal 38. Weak Mutation 24: org.apache.commons.cli.Options.addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;:155 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Options options0 = new Options();
      Option option0 = new Option("", "Wm`#k\"QwT1IVz&@~-7");
      option0.setRequired(true);
      options0.addOption(option0);
      Options options1 = options0.addOption(option0);
      assertSame(options0, options1);
  }

  //Test case number: 19
  /*
   * 14 covered goals:
   * Goal 1. org.apache.commons.cli.Options.<init>()V: root-Branch
   * Goal 2. org.apache.commons.cli.Options.getOptionGroups()Ljava/util/Collection;: root-Branch
   * Goal 3. Branch org.apache.commons.cli.Options.<init>()V: root-Branch in context: org.apache.commons.cli.Options:<init>()V
   * Goal 4. Branch org.apache.commons.cli.Options.getOptionGroups()Ljava/util/Collection;: root-Branch in context: 
   * Goal 5. [Output]: org.apache.commons.cli.Options.getOptionGroups()Ljava/util/Collection;:NonNull
   * Goal 6. org.apache.commons.cli.Options.<init>()V: Line 51
   * Goal 7. org.apache.commons.cli.Options.<init>()V: Line 54
   * Goal 8. org.apache.commons.cli.Options.<init>()V: Line 57
   * Goal 9. org.apache.commons.cli.Options.<init>()V: Line 60
   * Goal 10. org.apache.commons.cli.Options.getOptionGroups()Ljava/util/Collection;: Line 100
   * Goal 11. [METHOD] org.apache.commons.cli.Options.<init>()V
   * Goal 12. [METHOD] org.apache.commons.cli.Options.getOptionGroups()Ljava/util/Collection;
   * Goal 13. [METHODNOEX] org.apache.commons.cli.Options.<init>()V
   * Goal 14. [METHODNOEX] org.apache.commons.cli.Options.getOptionGroups()Ljava/util/Collection;
   */

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Options options0 = new Options();
      Collection collection0 = options0.getOptionGroups();
      assertNotNull(collection0);
  }

  //Test case number: 20
  /*
   * 14 covered goals:
   * Goal 1. org.apache.commons.cli.Options.<init>()V: root-Branch
   * Goal 2. org.apache.commons.cli.Options.getOptionGroup(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/OptionGroup;: root-Branch
   * Goal 3. Branch org.apache.commons.cli.Options.getOptionGroup(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/OptionGroup;: root-Branch in context: org.apache.commons.cli.Options:getOptionGroup(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/OptionGroup;
   * Goal 4. Branch org.apache.commons.cli.Options.<init>()V: root-Branch in context: org.apache.commons.cli.Options:<init>()V
   * Goal 5. [Output]: org.apache.commons.cli.Options.getOptionGroup(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/OptionGroup;:Null
   * Goal 6. org.apache.commons.cli.Options.<init>()V: Line 51
   * Goal 7. org.apache.commons.cli.Options.<init>()V: Line 54
   * Goal 8. org.apache.commons.cli.Options.<init>()V: Line 57
   * Goal 9. org.apache.commons.cli.Options.<init>()V: Line 60
   * Goal 10. org.apache.commons.cli.Options.getOptionGroup(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/OptionGroup;: Line 239
   * Goal 11. [METHOD] org.apache.commons.cli.Options.<init>()V
   * Goal 12. [METHOD] org.apache.commons.cli.Options.getOptionGroup(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/OptionGroup;
   * Goal 13. [METHODNOEX] org.apache.commons.cli.Options.<init>()V
   * Goal 14. [METHODNOEX] org.apache.commons.cli.Options.getOptionGroup(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/OptionGroup;
   */

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Options options0 = new Options();
      Option option0 = new Option("", "", false, "");
      OptionGroup optionGroup0 = options0.getOptionGroup(option0);
      assertNull(optionGroup0);
  }

  //Test case number: 21
  /*
   * 24 covered goals:
   * Goal 1. org.apache.commons.cli.Options.<init>()V: root-Branch
   * Goal 2. org.apache.commons.cli.Options.toString()Ljava/lang/String;: root-Branch
   * Goal 3. Branch org.apache.commons.cli.Options.toString()Ljava/lang/String;: root-Branch in context: org.apache.commons.cli.Options:toString()Ljava/lang/String;
   * Goal 4. Branch org.apache.commons.cli.Options.<init>()V: root-Branch in context: org.apache.commons.cli.Options:<init>()V
   * Goal 5. [Output]: org.apache.commons.cli.Options.toString()Ljava/lang/String;:NonEmptyString
   * Goal 6. org.apache.commons.cli.Options.<init>()V: Line 51
   * Goal 7. org.apache.commons.cli.Options.<init>()V: Line 54
   * Goal 8. org.apache.commons.cli.Options.<init>()V: Line 57
   * Goal 9. org.apache.commons.cli.Options.<init>()V: Line 60
   * Goal 10. org.apache.commons.cli.Options.toString()Ljava/lang/String;: Line 249
   * Goal 11. org.apache.commons.cli.Options.toString()Ljava/lang/String;: Line 251
   * Goal 12. org.apache.commons.cli.Options.toString()Ljava/lang/String;: Line 252
   * Goal 13. org.apache.commons.cli.Options.toString()Ljava/lang/String;: Line 253
   * Goal 14. org.apache.commons.cli.Options.toString()Ljava/lang/String;: Line 254
   * Goal 15. org.apache.commons.cli.Options.toString()Ljava/lang/String;: Line 255
   * Goal 16. org.apache.commons.cli.Options.toString()Ljava/lang/String;: Line 257
   * Goal 17. [METHOD] org.apache.commons.cli.Options.<init>()V
   * Goal 18. [METHOD] org.apache.commons.cli.Options.toString()Ljava/lang/String;
   * Goal 19. [METHODNOEX] org.apache.commons.cli.Options.<init>()V
   * Goal 20. [METHODNOEX] org.apache.commons.cli.Options.toString()Ljava/lang/String;
   * Goal 21. Weak Mutation 45: org.apache.commons.cli.Options.toString()Ljava/lang/String;:251 - ReplaceConstant - [ Options: [ short  -> 
   * Goal 22. Weak Mutation 46: org.apache.commons.cli.Options.toString()Ljava/lang/String;:252 - ReplaceComparisonOperator == -> !=
   * Goal 23. Weak Mutation 47: org.apache.commons.cli.Options.toString()Ljava/lang/String;:253 - ReplaceConstant -  ] [ long  -> 
   * Goal 24. Weak Mutation 48: org.apache.commons.cli.Options.toString()Ljava/lang/String;:255 - ReplaceConstant -  ] -> 
   */

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Options options0 = new Options();
      String string0 = options0.toString();
      assertNotNull(string0);
  }

  //Test case number: 22
  /*
   * 15 covered goals:
   * Goal 1. org.apache.commons.cli.Options.<init>()V: root-Branch
   * Goal 2. org.apache.commons.cli.Options.getRequiredOptions()Ljava/util/List;: root-Branch
   * Goal 3. Branch org.apache.commons.cli.Options.getRequiredOptions()Ljava/util/List;: root-Branch in context: org.apache.commons.cli.Options:getRequiredOptions()Ljava/util/List;
   * Goal 4. Branch org.apache.commons.cli.Options.<init>()V: root-Branch in context: org.apache.commons.cli.Options:<init>()V
   * Goal 5. [Output]: org.apache.commons.cli.Options.getRequiredOptions()Ljava/util/List;:NonNull:java.util.List:isEmpty()Z:True
   * Goal 6. [Output]: org.apache.commons.cli.Options.getRequiredOptions()Ljava/util/List;:NonNull:java.util.List:size()I:Zero
   * Goal 7. org.apache.commons.cli.Options.<init>()V: Line 51
   * Goal 8. org.apache.commons.cli.Options.<init>()V: Line 54
   * Goal 9. org.apache.commons.cli.Options.<init>()V: Line 57
   * Goal 10. org.apache.commons.cli.Options.<init>()V: Line 60
   * Goal 11. org.apache.commons.cli.Options.getRequiredOptions()Ljava/util/List;: Line 194
   * Goal 12. [METHOD] org.apache.commons.cli.Options.<init>()V
   * Goal 13. [METHOD] org.apache.commons.cli.Options.getRequiredOptions()Ljava/util/List;
   * Goal 14. [METHODNOEX] org.apache.commons.cli.Options.<init>()V
   * Goal 15. [METHODNOEX] org.apache.commons.cli.Options.getRequiredOptions()Ljava/util/List;
   */

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Options options0 = new Options();
      List list0 = options0.getRequiredOptions();
      assertEquals(0, list0.size());
  }

  //Test case number: 23
  /*
   * 17 covered goals:
   * Goal 1. org.apache.commons.cli.Options.getOptions()Ljava/util/Collection;: root-Branch
   * Goal 2. org.apache.commons.cli.Options.<init>()V: root-Branch
   * Goal 3. org.apache.commons.cli.Options.helpOptions()Ljava/util/List;: root-Branch
   * Goal 4. Branch org.apache.commons.cli.Options.helpOptions()Ljava/util/List;: root-Branch in context: 
   * Goal 5. Branch org.apache.commons.cli.Options.getOptions()Ljava/util/Collection;: root-Branch in context: org.apache.commons.cli.Options:getOptions()Ljava/util/Collection;
   * Goal 6. Branch org.apache.commons.cli.Options.<init>()V: root-Branch in context: org.apache.commons.cli.Options:<init>()V
   * Goal 7. [Output]: org.apache.commons.cli.Options.getOptions()Ljava/util/Collection;:NonNull
   * Goal 8. org.apache.commons.cli.Options.<init>()V: Line 51
   * Goal 9. org.apache.commons.cli.Options.<init>()V: Line 54
   * Goal 10. org.apache.commons.cli.Options.<init>()V: Line 57
   * Goal 11. org.apache.commons.cli.Options.<init>()V: Line 60
   * Goal 12. org.apache.commons.cli.Options.getOptions()Ljava/util/Collection;: Line 174
   * Goal 13. org.apache.commons.cli.Options.helpOptions()Ljava/util/List;: Line 184
   * Goal 14. [METHOD] org.apache.commons.cli.Options.<init>()V
   * Goal 15. [METHOD] org.apache.commons.cli.Options.getOptions()Ljava/util/Collection;
   * Goal 16. [METHODNOEX] org.apache.commons.cli.Options.<init>()V
   * Goal 17. [METHODNOEX] org.apache.commons.cli.Options.getOptions()Ljava/util/Collection;
   */

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Options options0 = new Options();
      Collection collection0 = options0.getOptions();
      assertNotNull(collection0);
  }

  //Test case number: 24
  /*
   * 25 covered goals:
   * Goal 1. org.apache.commons.cli.Options.addOption(Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;: root-Branch
   * Goal 2. org.apache.commons.cli.Options.addOption(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;: root-Branch
   * Goal 3. org.apache.commons.cli.Options.<init>()V: root-Branch
   * Goal 4. Branch org.apache.commons.cli.Options.addOption(Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;: root-Branch in context: org.apache.commons.cli.Options:addOption(Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;
   * Goal 5. Branch org.apache.commons.cli.Options.<init>()V: root-Branch in context: org.apache.commons.cli.Options:<init>()V
   * Goal 6. addOption(Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 7. org.apache.commons.cli.Options.<init>()V: Line 51
   * Goal 8. org.apache.commons.cli.Options.<init>()V: Line 54
   * Goal 9. org.apache.commons.cli.Options.<init>()V: Line 57
   * Goal 10. org.apache.commons.cli.Options.<init>()V: Line 60
   * Goal 11. org.apache.commons.cli.Options.addOption(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;: Line 131
   * Goal 12. org.apache.commons.cli.Options.addOption(Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;: Line 114
   * Goal 13. [METHOD] org.apache.commons.cli.Options.<init>()V
   * Goal 14. [METHOD] org.apache.commons.cli.Options.addOption(Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;
   * Goal 15. [METHODNOEX] org.apache.commons.cli.Options.<init>()V
   * Goal 16. Weak Mutation 4: org.apache.commons.cli.Options.addOption(Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;:114 - InsertUnaryOp Negation of hasArg
   * Goal 17. Weak Mutation 5: org.apache.commons.cli.Options.addOption(Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;:114 - InsertUnaryOp IINC 1 hasArg
   * Goal 18. Weak Mutation 6: org.apache.commons.cli.Options.addOption(Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;:114 - InsertUnaryOp IINC -1 hasArg
   * Goal 19. Weak Mutation 9: org.apache.commons.cli.Options.addOption(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;:131 - ReplaceVariable opt -> longOpt
   * Goal 20. Weak Mutation 10: org.apache.commons.cli.Options.addOption(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;:131 - ReplaceVariable longOpt -> description
   * Goal 21. Weak Mutation 11: org.apache.commons.cli.Options.addOption(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;:131 - ReplaceVariable longOpt -> opt
   * Goal 22. Weak Mutation 12: org.apache.commons.cli.Options.addOption(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;:131 - InsertUnaryOp Negation of hasArg
   * Goal 23. Weak Mutation 13: org.apache.commons.cli.Options.addOption(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;:131 - InsertUnaryOp IINC 1 hasArg
   * Goal 24. Weak Mutation 14: org.apache.commons.cli.Options.addOption(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;:131 - InsertUnaryOp IINC -1 hasArg
   * Goal 25. Weak Mutation 16: org.apache.commons.cli.Options.addOption(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/commons/cli/Options;:131 - ReplaceVariable description -> longOpt
   */

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        options0.addOption("[ Options: [ short java.util.HashMap@0000000003 ] [ long {~;yXgj=[ option: Dk4NQ5n7X ~;yXgj [ARG...] :: MW0qv+)ij;+ ]} ]", false, "[ Options: [ short java.util.HashMap@0000000003 ] [ long {~;yXgj=[ option: Dk4NQ5n7X ~;yXgj [ARG...] :: MW0qv+)ij;+ ]} ]");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // opt contains illegal character value '['
         //
         assertThrownBy("org.apache.commons.cli.OptionValidator", e);
      }
  }
}
