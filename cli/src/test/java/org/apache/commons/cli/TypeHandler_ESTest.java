/*
 * This file was automatically generated by EvoSuite
 * Wed Jun 01 17:31:34 GMT 2016
 */

package org.apache.commons.cli;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.cli.PatternOptionBuilder;
import org.apache.commons.cli.TypeHandler;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TypeHandler_ESTest extends TypeHandler_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 6 covered goals:
   * Goal 1. org.apache.commons.cli.TypeHandler.createDate(Ljava/lang/String;)Ljava/util/Date;: root-Branch
   * Goal 2. Branch org.apache.commons.cli.TypeHandler.createDate(Ljava/lang/String;)Ljava/util/Date;: root-Branch in context: org.apache.commons.cli.TypeHandler:createDate(Ljava/lang/String;)Ljava/util/Date;
   * Goal 3. createDate(Ljava/lang/String;)Ljava/util/Date;_java.lang.UnsupportedOperationException_EXPLICIT
   * Goal 4. org.apache.commons.cli.TypeHandler.createDate(Ljava/lang/String;)Ljava/util/Date;: Line 198
   * Goal 5. [METHOD] org.apache.commons.cli.TypeHandler.createDate(Ljava/lang/String;)Ljava/util/Date;
   * Goal 6. Weak Mutation 23: org.apache.commons.cli.TypeHandler.createDate(Ljava/lang/String;)Ljava/util/Date;:198 - ReplaceConstant - Not yet implemented -> 
   */

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      // Undeclared exception!
      try { 
        TypeHandler.createDate("N+V S9r3E]&]h~~JD\"");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not yet implemented
         //
         assertThrownBy("org.apache.commons.cli.TypeHandler", e);
      }
  }

  //Test case number: 1
  /*
   * 12 covered goals:
   * Goal 1. org.apache.commons.cli.TypeHandler.createObject(Ljava/lang/String;)Ljava/lang/Object;: root-Branch
   * Goal 2. Branch org.apache.commons.cli.TypeHandler.createObject(Ljava/lang/String;)Ljava/lang/Object;: root-Branch in context: org.apache.commons.cli.TypeHandler:createObject(Ljava/lang/String;)Ljava/lang/Object;
   * Goal 3. [Output]: org.apache.commons.cli.TypeHandler.createObject(Ljava/lang/String;)Ljava/lang/Object;:NonNull
   * Goal 4. org.apache.commons.cli.TypeHandler.createObject(Ljava/lang/String;)Ljava/lang/Object;: Line 116
   * Goal 5. org.apache.commons.cli.TypeHandler.createObject(Ljava/lang/String;)Ljava/lang/Object;: Line 120
   * Goal 6. org.apache.commons.cli.TypeHandler.createObject(Ljava/lang/String;)Ljava/lang/Object;: Line 125
   * Goal 7. org.apache.commons.cli.TypeHandler.createObject(Ljava/lang/String;)Ljava/lang/Object;: Line 127
   * Goal 8. org.apache.commons.cli.TypeHandler.createObject(Ljava/lang/String;)Ljava/lang/Object;: Line 131
   * Goal 9. org.apache.commons.cli.TypeHandler.createObject(Ljava/lang/String;)Ljava/lang/Object;: Line 136
   * Goal 10. org.apache.commons.cli.TypeHandler.createObject(Ljava/lang/String;)Ljava/lang/Object;: Line 138
   * Goal 11. [METHOD] org.apache.commons.cli.TypeHandler.createObject(Ljava/lang/String;)Ljava/lang/Object;
   * Goal 12. [METHODNOEX] org.apache.commons.cli.TypeHandler.createObject(Ljava/lang/String;)Ljava/lang/Object;
   */

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PatternOptionBuilder patternOptionBuilder0 = (PatternOptionBuilder)TypeHandler.createObject("org.apache.commons.cli.PatternOptionBuilder");
      assertNotNull(patternOptionBuilder0);
  }

  //Test case number: 2
  /*
   * 21 covered goals:
   * Goal 1. org.apache.commons.cli.TypeHandler.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I6 Branch 10 IF_ICMPEQ L154 - true
   * Goal 2. Branch org.apache.commons.cli.TypeHandler.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I6 Branch 10 IF_ICMPEQ L154 - true in context: org.apache.commons.cli.TypeHandler:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 3. [Output]: org.apache.commons.cli.TypeHandler.createNumber(Ljava/lang/String;)Ljava/lang/Number;:NonNull:java.lang.Number:byteValue()B:Positive
   * Goal 4. [Output]: org.apache.commons.cli.TypeHandler.createNumber(Ljava/lang/String;)Ljava/lang/Number;:NonNull:java.lang.Number:doubleValue()D:Positive
   * Goal 5. [Output]: org.apache.commons.cli.TypeHandler.createNumber(Ljava/lang/String;)Ljava/lang/Number;:NonNull:java.lang.Number:floatValue()F:Positive
   * Goal 6. [Output]: org.apache.commons.cli.TypeHandler.createNumber(Ljava/lang/String;)Ljava/lang/Number;:NonNull:java.lang.Number:intValue()I:Positive
   * Goal 7. [Output]: org.apache.commons.cli.TypeHandler.createNumber(Ljava/lang/String;)Ljava/lang/Number;:NonNull:java.lang.Number:longValue()J:Positive
   * Goal 8. [Output]: org.apache.commons.cli.TypeHandler.createNumber(Ljava/lang/String;)Ljava/lang/Number;:NonNull:java.lang.Number:shortValue()S:Positive
   * Goal 9. org.apache.commons.cli.TypeHandler.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 154
   * Goal 10. org.apache.commons.cli.TypeHandler.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 160
   * Goal 11. [METHOD] org.apache.commons.cli.TypeHandler.createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 12. [METHODNOEX] org.apache.commons.cli.TypeHandler.createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 13. Weak Mutation 11: org.apache.commons.cli.TypeHandler.createNumber(Ljava/lang/String;)Ljava/lang/Number;:154 - ReplaceConstant - 46 -> 0
   * Goal 14. Weak Mutation 12: org.apache.commons.cli.TypeHandler.createNumber(Ljava/lang/String;)Ljava/lang/Number;:154 - ReplaceConstant - 46 -> 1
   * Goal 15. Weak Mutation 13: org.apache.commons.cli.TypeHandler.createNumber(Ljava/lang/String;)Ljava/lang/Number;:154 - ReplaceConstant - 46 -> -1
   * Goal 16. Weak Mutation 14: org.apache.commons.cli.TypeHandler.createNumber(Ljava/lang/String;)Ljava/lang/Number;:154 - ReplaceConstant - 46 -> 45
   * Goal 17. Weak Mutation 15: org.apache.commons.cli.TypeHandler.createNumber(Ljava/lang/String;)Ljava/lang/Number;:154 - ReplaceConstant - 46 -> 47
   * Goal 18. Weak Mutation 16: org.apache.commons.cli.TypeHandler.createNumber(Ljava/lang/String;)Ljava/lang/Number;:154 - ReplaceConstant - -1 -> 0
   * Goal 19. Weak Mutation 17: org.apache.commons.cli.TypeHandler.createNumber(Ljava/lang/String;)Ljava/lang/Number;:154 - ReplaceConstant - -1 -> 1
   * Goal 20. Weak Mutation 18: org.apache.commons.cli.TypeHandler.createNumber(Ljava/lang/String;)Ljava/lang/Number;:154 - ReplaceConstant - -1 -> -2
   * Goal 21. Weak Mutation 19: org.apache.commons.cli.TypeHandler.createNumber(Ljava/lang/String;)Ljava/lang/Number;:154 - ReplaceComparisonOperator == -> -2
   */

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Long long0 = (Long)TypeHandler.createNumber("1");
      assertEquals(1L, (long)long0);
  }

  //Test case number: 3
  /*
   * 19 covered goals:
   * Goal 1. org.apache.commons.cli.TypeHandler.createFile(Ljava/lang/String;)Ljava/io/File;: root-Branch
   * Goal 2. Branch org.apache.commons.cli.TypeHandler.createFile(Ljava/lang/String;)Ljava/io/File;: root-Branch in context: org.apache.commons.cli.TypeHandler:createFile(Ljava/lang/String;)Ljava/io/File;
   * Goal 3. [Output]: org.apache.commons.cli.TypeHandler.createFile(Ljava/lang/String;)Ljava/io/File;:NonNull:java.io.File:canExecute()Z:True
   * Goal 4. [Output]: org.apache.commons.cli.TypeHandler.createFile(Ljava/lang/String;)Ljava/io/File;:NonNull:java.io.File:canRead()Z:True
   * Goal 5. [Output]: org.apache.commons.cli.TypeHandler.createFile(Ljava/lang/String;)Ljava/io/File;:NonNull:java.io.File:canWrite()Z:True
   * Goal 6. [Output]: org.apache.commons.cli.TypeHandler.createFile(Ljava/lang/String;)Ljava/io/File;:NonNull:java.io.File:exists()Z:True
   * Goal 7. [Output]: org.apache.commons.cli.TypeHandler.createFile(Ljava/lang/String;)Ljava/io/File;:NonNull:java.io.File:getFreeSpace()J:Zero
   * Goal 8. [Output]: org.apache.commons.cli.TypeHandler.createFile(Ljava/lang/String;)Ljava/io/File;:NonNull:java.io.File:getTotalSpace()J:Zero
   * Goal 9. [Output]: org.apache.commons.cli.TypeHandler.createFile(Ljava/lang/String;)Ljava/io/File;:NonNull:java.io.File:getUsableSpace()J:Zero
   * Goal 10. [Output]: org.apache.commons.cli.TypeHandler.createFile(Ljava/lang/String;)Ljava/io/File;:NonNull:java.io.File:isAbsolute()Z:False
   * Goal 11. [Output]: org.apache.commons.cli.TypeHandler.createFile(Ljava/lang/String;)Ljava/io/File;:NonNull:java.io.File:isDirectory()Z:True
   * Goal 12. [Output]: org.apache.commons.cli.TypeHandler.createFile(Ljava/lang/String;)Ljava/io/File;:NonNull:java.io.File:isFile()Z:False
   * Goal 13. [Output]: org.apache.commons.cli.TypeHandler.createFile(Ljava/lang/String;)Ljava/io/File;:NonNull:java.io.File:isHidden()Z:False
   * Goal 14. [Output]: org.apache.commons.cli.TypeHandler.createFile(Ljava/lang/String;)Ljava/io/File;:NonNull:java.io.File:lastModified()J:Positive
   * Goal 15. [Output]: org.apache.commons.cli.TypeHandler.createFile(Ljava/lang/String;)Ljava/io/File;:NonNull:java.io.File:length()J:Zero
   * Goal 16. org.apache.commons.cli.TypeHandler.createFile(Ljava/lang/String;)Ljava/io/File;: Line 230
   * Goal 17. [METHOD] org.apache.commons.cli.TypeHandler.createFile(Ljava/lang/String;)Ljava/io/File;
   * Goal 18. [METHODNOEX] org.apache.commons.cli.TypeHandler.createFile(Ljava/lang/String;)Ljava/io/File;
   * Goal 19. Weak Mutation 26: org.apache.commons.cli.TypeHandler.createFile(Ljava/lang/String;)Ljava/io/File;:230 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MockFile mockFile0 = (MockFile)TypeHandler.createFile("");
      assertEquals(0L, mockFile0.length());
  }

  //Test case number: 4
  /*
   * 19 covered goals:
   * Goal 1. org.apache.commons.cli.TypeHandler.createFile(Ljava/lang/String;)Ljava/io/File;: root-Branch
   * Goal 2. Branch org.apache.commons.cli.TypeHandler.createFile(Ljava/lang/String;)Ljava/io/File;: root-Branch in context: org.apache.commons.cli.TypeHandler:createFile(Ljava/lang/String;)Ljava/io/File;
   * Goal 3. [Output]: org.apache.commons.cli.TypeHandler.createFile(Ljava/lang/String;)Ljava/io/File;:NonNull:java.io.File:canExecute()Z:True
   * Goal 4. [Output]: org.apache.commons.cli.TypeHandler.createFile(Ljava/lang/String;)Ljava/io/File;:NonNull:java.io.File:canRead()Z:True
   * Goal 5. [Output]: org.apache.commons.cli.TypeHandler.createFile(Ljava/lang/String;)Ljava/io/File;:NonNull:java.io.File:canWrite()Z:True
   * Goal 6. [Output]: org.apache.commons.cli.TypeHandler.createFile(Ljava/lang/String;)Ljava/io/File;:NonNull:java.io.File:exists()Z:True
   * Goal 7. [Output]: org.apache.commons.cli.TypeHandler.createFile(Ljava/lang/String;)Ljava/io/File;:NonNull:java.io.File:getFreeSpace()J:Zero
   * Goal 8. [Output]: org.apache.commons.cli.TypeHandler.createFile(Ljava/lang/String;)Ljava/io/File;:NonNull:java.io.File:getTotalSpace()J:Zero
   * Goal 9. [Output]: org.apache.commons.cli.TypeHandler.createFile(Ljava/lang/String;)Ljava/io/File;:NonNull:java.io.File:getUsableSpace()J:Zero
   * Goal 10. [Output]: org.apache.commons.cli.TypeHandler.createFile(Ljava/lang/String;)Ljava/io/File;:NonNull:java.io.File:isAbsolute()Z:False
   * Goal 11. [Output]: org.apache.commons.cli.TypeHandler.createFile(Ljava/lang/String;)Ljava/io/File;:NonNull:java.io.File:isDirectory()Z:False
   * Goal 12. [Output]: org.apache.commons.cli.TypeHandler.createFile(Ljava/lang/String;)Ljava/io/File;:NonNull:java.io.File:isFile()Z:True
   * Goal 13. [Output]: org.apache.commons.cli.TypeHandler.createFile(Ljava/lang/String;)Ljava/io/File;:NonNull:java.io.File:isHidden()Z:False
   * Goal 14. [Output]: org.apache.commons.cli.TypeHandler.createFile(Ljava/lang/String;)Ljava/io/File;:NonNull:java.io.File:lastModified()J:Positive
   * Goal 15. [Output]: org.apache.commons.cli.TypeHandler.createFile(Ljava/lang/String;)Ljava/io/File;:NonNull:java.io.File:length()J:Positive
   * Goal 16. org.apache.commons.cli.TypeHandler.createFile(Ljava/lang/String;)Ljava/io/File;: Line 230
   * Goal 17. [METHOD] org.apache.commons.cli.TypeHandler.createFile(Ljava/lang/String;)Ljava/io/File;
   * Goal 18. [METHODNOEX] org.apache.commons.cli.TypeHandler.createFile(Ljava/lang/String;)Ljava/io/File;
   * Goal 19. Weak Mutation 26: org.apache.commons.cli.TypeHandler.createFile(Ljava/lang/String;)Ljava/io/File;:230 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("C:\\Users\\Giovani\\Downloads\\EvoSuite\\d");
      byte[] byteArray0 = new byte[5];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      MockFile mockFile0 = (MockFile)TypeHandler.createFile("d");
      assertNull(mockFile0.getParent());
  }

  //Test case number: 5
  /*
   * 5 covered goals:
   * Goal 1. org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;: root-Branch
   * Goal 2. Branch org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;: root-Branch in context: org.apache.commons.cli.TypeHandler:createValue(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 3. createValue(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;_java.lang.ClassCastException_IMPLICIT
   * Goal 4. org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;: Line 49
   * Goal 5. [METHOD] org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
   */

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        TypeHandler.createValue("qxFRn8*U", (Object) "qxFRn8*U");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to java.lang.Class
         //
         assertThrownBy("org.apache.commons.cli.TypeHandler", e);
      }
  }

  //Test case number: 6
  /*
   * 14 covered goals:
   * Goal 1. org.apache.commons.cli.TypeHandler.createObject(Ljava/lang/String;)Ljava/lang/Object;: root-Branch
   * Goal 2. org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;: I4 Branch 1 IF_ACMPNE L64 - true
   * Goal 3. org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;: I13 Branch 2 IF_ACMPNE L68 - false
   * Goal 4. Branch org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;: I4 Branch 1 IF_ACMPNE L64 - true in context: org.apache.commons.cli.TypeHandler:createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
   * Goal 5. Branch org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;: I13 Branch 2 IF_ACMPNE L68 - false in context: org.apache.commons.cli.TypeHandler:createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
   * Goal 6. createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;_java.lang.NullPointerException_IMPLICIT
   * Goal 7. org.apache.commons.cli.TypeHandler.createObject(Ljava/lang/String;)Ljava/lang/Object;: Line 116
   * Goal 8. org.apache.commons.cli.TypeHandler.createObject(Ljava/lang/String;)Ljava/lang/Object;: Line 120
   * Goal 9. org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;: Line 64
   * Goal 10. org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;: Line 68
   * Goal 11. org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;: Line 70
   * Goal 12. [METHOD] org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
   * Goal 13. Weak Mutation 0: org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;:64 - ReplaceComparisonOperator != -> ==
   * Goal 14. Weak Mutation 1: org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;:68 - ReplaceComparisonOperator != -> ==
   */

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Class<Object> class0 = Object.class;
      // Undeclared exception!
      try { 
        TypeHandler.createValue((String) null, class0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.lang.Class", e);
      }
  }

  //Test case number: 7
  /*
   * 6 covered goals:
   * Goal 1. org.apache.commons.cli.TypeHandler.createObject(Ljava/lang/String;)Ljava/lang/Object;: root-Branch
   * Goal 2. Branch org.apache.commons.cli.TypeHandler.createObject(Ljava/lang/String;)Ljava/lang/Object;: root-Branch in context: org.apache.commons.cli.TypeHandler:createObject(Ljava/lang/String;)Ljava/lang/Object;
   * Goal 3. createObject(Ljava/lang/String;)Ljava/lang/Object;_java.lang.NullPointerException_IMPLICIT
   * Goal 4. org.apache.commons.cli.TypeHandler.createObject(Ljava/lang/String;)Ljava/lang/Object;: Line 116
   * Goal 5. org.apache.commons.cli.TypeHandler.createObject(Ljava/lang/String;)Ljava/lang/Object;: Line 120
   * Goal 6. [METHOD] org.apache.commons.cli.TypeHandler.createObject(Ljava/lang/String;)Ljava/lang/Object;
   */

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        TypeHandler.createObject((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.lang.Class", e);
      }
  }

  //Test case number: 8
  /*
   * 8 covered goals:
   * Goal 1. createNumber(Ljava/lang/String;)Ljava/lang/Number;_java.lang.NullPointerException_IMPLICIT
   * Goal 2. org.apache.commons.cli.TypeHandler.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 154
   * Goal 3. [METHOD] org.apache.commons.cli.TypeHandler.createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 4. Weak Mutation 11: org.apache.commons.cli.TypeHandler.createNumber(Ljava/lang/String;)Ljava/lang/Number;:154 - ReplaceConstant - 46 -> 0
   * Goal 5. Weak Mutation 12: org.apache.commons.cli.TypeHandler.createNumber(Ljava/lang/String;)Ljava/lang/Number;:154 - ReplaceConstant - 46 -> 1
   * Goal 6. Weak Mutation 13: org.apache.commons.cli.TypeHandler.createNumber(Ljava/lang/String;)Ljava/lang/Number;:154 - ReplaceConstant - 46 -> -1
   * Goal 7. Weak Mutation 14: org.apache.commons.cli.TypeHandler.createNumber(Ljava/lang/String;)Ljava/lang/Number;:154 - ReplaceConstant - 46 -> 45
   * Goal 8. Weak Mutation 15: org.apache.commons.cli.TypeHandler.createNumber(Ljava/lang/String;)Ljava/lang/Number;:154 - ReplaceConstant - 46 -> 47
   */

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        TypeHandler.createNumber((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.apache.commons.cli.TypeHandler", e);
      }
  }

  //Test case number: 9
  /*
   * 6 covered goals:
   * Goal 1. org.apache.commons.cli.TypeHandler.createFile(Ljava/lang/String;)Ljava/io/File;: root-Branch
   * Goal 2. Branch org.apache.commons.cli.TypeHandler.createFile(Ljava/lang/String;)Ljava/io/File;: root-Branch in context: org.apache.commons.cli.TypeHandler:createFile(Ljava/lang/String;)Ljava/io/File;
   * Goal 3. createFile(Ljava/lang/String;)Ljava/io/File;_java.lang.NullPointerException_IMPLICIT
   * Goal 4. org.apache.commons.cli.TypeHandler.createFile(Ljava/lang/String;)Ljava/io/File;: Line 230
   * Goal 5. [METHOD] org.apache.commons.cli.TypeHandler.createFile(Ljava/lang/String;)Ljava/io/File;
   * Goal 6. Weak Mutation 26: org.apache.commons.cli.TypeHandler.createFile(Ljava/lang/String;)Ljava/io/File;:230 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      try { 
        TypeHandler.createFile((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.io.File", e);
      }
  }

  //Test case number: 10
  /*
   * 5 covered goals:
   * Goal 1. org.apache.commons.cli.TypeHandler.createClass(Ljava/lang/String;)Ljava/lang/Class;: root-Branch
   * Goal 2. Branch org.apache.commons.cli.TypeHandler.createClass(Ljava/lang/String;)Ljava/lang/Class;: root-Branch in context: org.apache.commons.cli.TypeHandler:createClass(Ljava/lang/String;)Ljava/lang/Class;
   * Goal 3. createClass(Ljava/lang/String;)Ljava/lang/Class;_java.lang.NullPointerException_IMPLICIT
   * Goal 4. org.apache.commons.cli.TypeHandler.createClass(Ljava/lang/String;)Ljava/lang/Class;: Line 180
   * Goal 5. [METHOD] org.apache.commons.cli.TypeHandler.createClass(Ljava/lang/String;)Ljava/lang/Class;
   */

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try { 
        TypeHandler.createClass((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.lang.Class", e);
      }
  }

  //Test case number: 11
  /*
   * 52 covered goals:
   * Goal 1. org.apache.commons.cli.TypeHandler.createClass(Ljava/lang/String;)Ljava/lang/Class;: root-Branch
   * Goal 2. org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;: I4 Branch 1 IF_ACMPNE L64 - true
   * Goal 3. org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;: I13 Branch 2 IF_ACMPNE L68 - true
   * Goal 4. org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;: I23 Branch 3 IF_ACMPNE L72 - true
   * Goal 5. org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;: I33 Branch 4 IF_ACMPNE L76 - true
   * Goal 6. org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;: I43 Branch 5 IF_ACMPNE L80 - true
   * Goal 7. org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;: I53 Branch 6 IF_ACMPNE L84 - true
   * Goal 8. org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;: I63 Branch 7 IF_ACMPNE L88 - true
   * Goal 9. org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;: I73 Branch 8 IF_ACMPNE L92 - true
   * Goal 10. org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;: I83 Branch 9 IF_ACMPNE L96 - true
   * Goal 11. Branch org.apache.commons.cli.TypeHandler.createClass(Ljava/lang/String;)Ljava/lang/Class;: root-Branch in context: org.apache.commons.cli.TypeHandler:createClass(Ljava/lang/String;)Ljava/lang/Class;
   * Goal 12. Branch org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;: I4 Branch 1 IF_ACMPNE L64 - true in context: org.apache.commons.cli.TypeHandler:createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
   * Goal 13. Branch org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;: I13 Branch 2 IF_ACMPNE L68 - true in context: org.apache.commons.cli.TypeHandler:createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
   * Goal 14. Branch org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;: I23 Branch 3 IF_ACMPNE L72 - true in context: org.apache.commons.cli.TypeHandler:createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
   * Goal 15. Branch org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;: I33 Branch 4 IF_ACMPNE L76 - true in context: org.apache.commons.cli.TypeHandler:createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
   * Goal 16. Branch org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;: I43 Branch 5 IF_ACMPNE L80 - true in context: org.apache.commons.cli.TypeHandler:createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
   * Goal 17. Branch org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;: I53 Branch 6 IF_ACMPNE L84 - true in context: org.apache.commons.cli.TypeHandler:createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
   * Goal 18. Branch org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;: I63 Branch 7 IF_ACMPNE L88 - true in context: org.apache.commons.cli.TypeHandler:createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
   * Goal 19. Branch org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;: I73 Branch 8 IF_ACMPNE L92 - true in context: org.apache.commons.cli.TypeHandler:createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
   * Goal 20. Branch org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;: I83 Branch 9 IF_ACMPNE L96 - true in context: org.apache.commons.cli.TypeHandler:createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
   * Goal 21. [Output]: org.apache.commons.cli.TypeHandler.createClass(Ljava/lang/String;)Ljava/lang/Class;:NonNull:java.lang.Class:getModifiers()I:Positive
   * Goal 22. [Output]: org.apache.commons.cli.TypeHandler.createClass(Ljava/lang/String;)Ljava/lang/Class;:NonNull:java.lang.Class:isAnnotation()Z:False
   * Goal 23. [Output]: org.apache.commons.cli.TypeHandler.createClass(Ljava/lang/String;)Ljava/lang/Class;:NonNull:java.lang.Class:isArray()Z:False
   * Goal 24. [Output]: org.apache.commons.cli.TypeHandler.createClass(Ljava/lang/String;)Ljava/lang/Class;:NonNull:java.lang.Class:isEnum()Z:False
   * Goal 25. [Output]: org.apache.commons.cli.TypeHandler.createClass(Ljava/lang/String;)Ljava/lang/Class;:NonNull:java.lang.Class:isInterface()Z:False
   * Goal 26. [Output]: org.apache.commons.cli.TypeHandler.createClass(Ljava/lang/String;)Ljava/lang/Class;:NonNull:java.lang.Class:isPrimitive()Z:False
   * Goal 27. [Output]: org.apache.commons.cli.TypeHandler.createClass(Ljava/lang/String;)Ljava/lang/Class;:NonNull:java.lang.Class:isSynthetic()Z:False
   * Goal 28. [Output]: org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;:Null
   * Goal 29. org.apache.commons.cli.TypeHandler.createClass(Ljava/lang/String;)Ljava/lang/Class;: Line 180
   * Goal 30. org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;: Line 64
   * Goal 31. org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;: Line 68
   * Goal 32. org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;: Line 72
   * Goal 33. org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;: Line 76
   * Goal 34. org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;: Line 80
   * Goal 35. org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;: Line 84
   * Goal 36. org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;: Line 88
   * Goal 37. org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;: Line 92
   * Goal 38. org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;: Line 96
   * Goal 39. org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;: Line 102
   * Goal 40. [METHOD] org.apache.commons.cli.TypeHandler.createClass(Ljava/lang/String;)Ljava/lang/Class;
   * Goal 41. [METHOD] org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
   * Goal 42. [METHODNOEX] org.apache.commons.cli.TypeHandler.createClass(Ljava/lang/String;)Ljava/lang/Class;
   * Goal 43. [METHODNOEX] org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
   * Goal 44. Weak Mutation 0: org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;:64 - ReplaceComparisonOperator != -> ==
   * Goal 45. Weak Mutation 1: org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;:68 - ReplaceComparisonOperator != -> ==
   * Goal 46. Weak Mutation 2: org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;:72 - ReplaceComparisonOperator != -> ==
   * Goal 47. Weak Mutation 3: org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;:76 - ReplaceComparisonOperator != -> ==
   * Goal 48. Weak Mutation 4: org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;:80 - ReplaceComparisonOperator != -> ==
   * Goal 49. Weak Mutation 5: org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;:84 - ReplaceComparisonOperator != -> ==
   * Goal 50. Weak Mutation 6: org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;:88 - ReplaceComparisonOperator != -> ==
   * Goal 51. Weak Mutation 7: org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;:92 - ReplaceComparisonOperator != -> ==
   * Goal 52. Weak Mutation 8: org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;:96 - ReplaceComparisonOperator != -> ==
   */

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Class class0 = TypeHandler.createClass("org.apache.commons.cli.PatternOptionBuilder");
      Object object0 = TypeHandler.createValue((String) null, class0);
      assertNull(object0);
  }

  //Test case number: 12
  /*
   * 8 covered goals:
   * Goal 1. org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;: I4 Branch 1 IF_ACMPNE L64 - false
   * Goal 2. Branch org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;: I4 Branch 1 IF_ACMPNE L64 - false in context: org.apache.commons.cli.TypeHandler:createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
   * Goal 3. [Output]: org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;:NonNull
   * Goal 4. org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;: Line 64
   * Goal 5. org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;: Line 66
   * Goal 6. [METHOD] org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
   * Goal 7. [METHODNOEX] org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
   * Goal 8. Weak Mutation 0: org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;:64 - ReplaceComparisonOperator != -> ==
   */

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Class<String> class0 = String.class;
      String string0 = (String)TypeHandler.createValue("", class0);
      assertEquals("", string0);
  }

  //Test case number: 13
  /*
   * 12 covered goals:
   * Goal 1. org.apache.commons.cli.TypeHandler.createObject(Ljava/lang/String;)Ljava/lang/Object;: root-Branch
   * Goal 2. Branch org.apache.commons.cli.TypeHandler.createObject(Ljava/lang/String;)Ljava/lang/Object;: root-Branch in context: org.apache.commons.cli.TypeHandler:createObject(Ljava/lang/String;)Ljava/lang/Object;
   * Goal 3. createObject(Ljava/lang/String;)Ljava/lang/Object;_org.evosuite.runtime.mock.java.lang.MockException_DECLARED
   * Goal 4. org.apache.commons.cli.TypeHandler.createObject(Ljava/lang/String;)Ljava/lang/Object;: Line 116
   * Goal 5. org.apache.commons.cli.TypeHandler.createObject(Ljava/lang/String;)Ljava/lang/Object;: Line 120
   * Goal 6. org.apache.commons.cli.TypeHandler.createObject(Ljava/lang/String;)Ljava/lang/Object;: Line 125
   * Goal 7. org.apache.commons.cli.TypeHandler.createObject(Ljava/lang/String;)Ljava/lang/Object;: Line 127
   * Goal 8. org.apache.commons.cli.TypeHandler.createObject(Ljava/lang/String;)Ljava/lang/Object;: Line 131
   * Goal 9. org.apache.commons.cli.TypeHandler.createObject(Ljava/lang/String;)Ljava/lang/Object;: Line 133
   * Goal 10. org.apache.commons.cli.TypeHandler.createObject(Ljava/lang/String;)Ljava/lang/Object;: Line 135
   * Goal 11. [METHOD] org.apache.commons.cli.TypeHandler.createObject(Ljava/lang/String;)Ljava/lang/Object;
   * Goal 12. Weak Mutation 10: org.apache.commons.cli.TypeHandler.createObject(Ljava/lang/String;)Ljava/lang/Object;:135 - ReplaceConstant - ; Unable to create an instance of:  -> 
   */

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      try { 
        TypeHandler.createObject("org.apache.commons.cli.ParseException");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // java.lang.InstantiationException; Unable to create an instance of: org.apache.commons.cli.ParseException
         //
         assertThrownBy("org.apache.commons.cli.TypeHandler", e);
      }
  }

  //Test case number: 14
  /*
   * 17 covered goals:
   * Goal 1. org.apache.commons.cli.TypeHandler.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I6 Branch 10 IF_ICMPEQ L154 - false
   * Goal 2. Branch org.apache.commons.cli.TypeHandler.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I6 Branch 10 IF_ICMPEQ L154 - false in context: org.apache.commons.cli.TypeHandler:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 3. createNumber(Ljava/lang/String;)Ljava/lang/Number;_org.evosuite.runtime.mock.java.lang.MockException_DECLARED
   * Goal 4. org.apache.commons.cli.TypeHandler.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 154
   * Goal 5. org.apache.commons.cli.TypeHandler.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 156
   * Goal 6. org.apache.commons.cli.TypeHandler.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 163
   * Goal 7. org.apache.commons.cli.TypeHandler.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 165
   * Goal 8. [METHOD] org.apache.commons.cli.TypeHandler.createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 9. Weak Mutation 11: org.apache.commons.cli.TypeHandler.createNumber(Ljava/lang/String;)Ljava/lang/Number;:154 - ReplaceConstant - 46 -> 0
   * Goal 10. Weak Mutation 12: org.apache.commons.cli.TypeHandler.createNumber(Ljava/lang/String;)Ljava/lang/Number;:154 - ReplaceConstant - 46 -> 1
   * Goal 11. Weak Mutation 13: org.apache.commons.cli.TypeHandler.createNumber(Ljava/lang/String;)Ljava/lang/Number;:154 - ReplaceConstant - 46 -> -1
   * Goal 12. Weak Mutation 14: org.apache.commons.cli.TypeHandler.createNumber(Ljava/lang/String;)Ljava/lang/Number;:154 - ReplaceConstant - 46 -> 45
   * Goal 13. Weak Mutation 15: org.apache.commons.cli.TypeHandler.createNumber(Ljava/lang/String;)Ljava/lang/Number;:154 - ReplaceConstant - 46 -> 47
   * Goal 14. Weak Mutation 16: org.apache.commons.cli.TypeHandler.createNumber(Ljava/lang/String;)Ljava/lang/Number;:154 - ReplaceConstant - -1 -> 0
   * Goal 15. Weak Mutation 17: org.apache.commons.cli.TypeHandler.createNumber(Ljava/lang/String;)Ljava/lang/Number;:154 - ReplaceConstant - -1 -> 1
   * Goal 16. Weak Mutation 18: org.apache.commons.cli.TypeHandler.createNumber(Ljava/lang/String;)Ljava/lang/Number;:154 - ReplaceConstant - -1 -> -2
   * Goal 17. Weak Mutation 20: org.apache.commons.cli.TypeHandler.createNumber(Ljava/lang/String;)Ljava/lang/Number;:154 - ReplaceComparisonOperator == -> >=
   */

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      try { 
        TypeHandler.createNumber("org.apache.commons.cli.PatternOptionBuilder");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // For input string: \"org.apache.commons.cli.PatternOptionBuilder\"
         //
         assertThrownBy("org.apache.commons.cli.TypeHandler", e);
      }
  }

  //Test case number: 15
  /*
   * 34 covered goals:
   * Goal 1. org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;: root-Branch
   * Goal 2. org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;: I4 Branch 1 IF_ACMPNE L64 - true
   * Goal 3. org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;: I13 Branch 2 IF_ACMPNE L68 - true
   * Goal 4. org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;: I23 Branch 3 IF_ACMPNE L72 - true
   * Goal 5. org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;: I33 Branch 4 IF_ACMPNE L76 - true
   * Goal 6. org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;: I43 Branch 5 IF_ACMPNE L80 - true
   * Goal 7. org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;: I53 Branch 6 IF_ACMPNE L84 - true
   * Goal 8. org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;: I63 Branch 7 IF_ACMPNE L88 - true
   * Goal 9. org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;: I73 Branch 8 IF_ACMPNE L92 - true
   * Goal 10. org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;: I83 Branch 9 IF_ACMPNE L96 - true
   * Goal 11. Branch org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;: root-Branch in context: org.apache.commons.cli.TypeHandler:createValue(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 12. [Output]: org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;:Null
   * Goal 13. org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;: Line 64
   * Goal 14. org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;: Line 68
   * Goal 15. org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;: Line 72
   * Goal 16. org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;: Line 76
   * Goal 17. org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;: Line 80
   * Goal 18. org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;: Line 84
   * Goal 19. org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;: Line 88
   * Goal 20. org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;: Line 92
   * Goal 21. org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;: Line 96
   * Goal 22. org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;: Line 102
   * Goal 23. org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;: Line 49
   * Goal 24. [METHOD] org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 25. [METHODNOEX] org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 26. Weak Mutation 0: org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;:64 - ReplaceComparisonOperator != -> ==
   * Goal 27. Weak Mutation 1: org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;:68 - ReplaceComparisonOperator != -> ==
   * Goal 28. Weak Mutation 2: org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;:72 - ReplaceComparisonOperator != -> ==
   * Goal 29. Weak Mutation 3: org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;:76 - ReplaceComparisonOperator != -> ==
   * Goal 30. Weak Mutation 4: org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;:80 - ReplaceComparisonOperator != -> ==
   * Goal 31. Weak Mutation 5: org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;:84 - ReplaceComparisonOperator != -> ==
   * Goal 32. Weak Mutation 6: org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;:88 - ReplaceComparisonOperator != -> ==
   * Goal 33. Weak Mutation 7: org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;:92 - ReplaceComparisonOperator != -> ==
   * Goal 34. Weak Mutation 8: org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;:96 - ReplaceComparisonOperator != -> ==
   */

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String string0 = (String)TypeHandler.createValue("", (Object) null);
      assertNull(string0);
  }

  //Test case number: 16
  /*
   * 17 covered goals:
   * Goal 1. org.apache.commons.cli.TypeHandler.createObject(Ljava/lang/String;)Ljava/lang/Object;: root-Branch
   * Goal 2. org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;: I4 Branch 1 IF_ACMPNE L64 - true
   * Goal 3. org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;: I13 Branch 2 IF_ACMPNE L68 - false
   * Goal 4. Branch org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;: I4 Branch 1 IF_ACMPNE L64 - true in context: org.apache.commons.cli.TypeHandler:createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
   * Goal 5. Branch org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;: I13 Branch 2 IF_ACMPNE L68 - false in context: org.apache.commons.cli.TypeHandler:createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
   * Goal 6. createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;_org.evosuite.runtime.mock.java.lang.MockException_DECLARED
   * Goal 7. org.apache.commons.cli.TypeHandler.createObject(Ljava/lang/String;)Ljava/lang/Object;: Line 116
   * Goal 8. org.apache.commons.cli.TypeHandler.createObject(Ljava/lang/String;)Ljava/lang/Object;: Line 120
   * Goal 9. org.apache.commons.cli.TypeHandler.createObject(Ljava/lang/String;)Ljava/lang/Object;: Line 122
   * Goal 10. org.apache.commons.cli.TypeHandler.createObject(Ljava/lang/String;)Ljava/lang/Object;: Line 124
   * Goal 11. org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;: Line 64
   * Goal 12. org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;: Line 68
   * Goal 13. org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;: Line 70
   * Goal 14. [METHOD] org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
   * Goal 15. Weak Mutation 0: org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;:64 - ReplaceComparisonOperator != -> ==
   * Goal 16. Weak Mutation 1: org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;:68 - ReplaceComparisonOperator != -> ==
   * Goal 17. Weak Mutation 9: org.apache.commons.cli.TypeHandler.createObject(Ljava/lang/String;)Ljava/lang/Object;:124 - ReplaceConstant - Unable to find the class:  -> 
   */

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Class<Object> class0 = Object.class;
      try { 
        TypeHandler.createValue("g", class0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unable to find the class: g
         //
         assertThrownBy("org.apache.commons.cli.TypeHandler", e);
      }
  }

  //Test case number: 17
  /*
   * 19 covered goals:
   * Goal 1. org.apache.commons.cli.TypeHandler.createFile(Ljava/lang/String;)Ljava/io/File;: root-Branch
   * Goal 2. Branch org.apache.commons.cli.TypeHandler.createFile(Ljava/lang/String;)Ljava/io/File;: root-Branch in context: org.apache.commons.cli.TypeHandler:createFile(Ljava/lang/String;)Ljava/io/File;
   * Goal 3. [Output]: org.apache.commons.cli.TypeHandler.createFile(Ljava/lang/String;)Ljava/io/File;:NonNull:java.io.File:canExecute()Z:False
   * Goal 4. [Output]: org.apache.commons.cli.TypeHandler.createFile(Ljava/lang/String;)Ljava/io/File;:NonNull:java.io.File:canRead()Z:False
   * Goal 5. [Output]: org.apache.commons.cli.TypeHandler.createFile(Ljava/lang/String;)Ljava/io/File;:NonNull:java.io.File:canWrite()Z:False
   * Goal 6. [Output]: org.apache.commons.cli.TypeHandler.createFile(Ljava/lang/String;)Ljava/io/File;:NonNull:java.io.File:exists()Z:False
   * Goal 7. [Output]: org.apache.commons.cli.TypeHandler.createFile(Ljava/lang/String;)Ljava/io/File;:NonNull:java.io.File:getFreeSpace()J:Zero
   * Goal 8. [Output]: org.apache.commons.cli.TypeHandler.createFile(Ljava/lang/String;)Ljava/io/File;:NonNull:java.io.File:getTotalSpace()J:Zero
   * Goal 9. [Output]: org.apache.commons.cli.TypeHandler.createFile(Ljava/lang/String;)Ljava/io/File;:NonNull:java.io.File:getUsableSpace()J:Zero
   * Goal 10. [Output]: org.apache.commons.cli.TypeHandler.createFile(Ljava/lang/String;)Ljava/io/File;:NonNull:java.io.File:isAbsolute()Z:False
   * Goal 11. [Output]: org.apache.commons.cli.TypeHandler.createFile(Ljava/lang/String;)Ljava/io/File;:NonNull:java.io.File:isDirectory()Z:False
   * Goal 12. [Output]: org.apache.commons.cli.TypeHandler.createFile(Ljava/lang/String;)Ljava/io/File;:NonNull:java.io.File:isFile()Z:True
   * Goal 13. [Output]: org.apache.commons.cli.TypeHandler.createFile(Ljava/lang/String;)Ljava/io/File;:NonNull:java.io.File:isHidden()Z:True
   * Goal 14. [Output]: org.apache.commons.cli.TypeHandler.createFile(Ljava/lang/String;)Ljava/io/File;:NonNull:java.io.File:lastModified()J:Zero
   * Goal 15. [Output]: org.apache.commons.cli.TypeHandler.createFile(Ljava/lang/String;)Ljava/io/File;:NonNull:java.io.File:length()J:Zero
   * Goal 16. org.apache.commons.cli.TypeHandler.createFile(Ljava/lang/String;)Ljava/io/File;: Line 230
   * Goal 17. [METHOD] org.apache.commons.cli.TypeHandler.createFile(Ljava/lang/String;)Ljava/io/File;
   * Goal 18. [METHODNOEX] org.apache.commons.cli.TypeHandler.createFile(Ljava/lang/String;)Ljava/io/File;
   * Goal 19. Weak Mutation 26: org.apache.commons.cli.TypeHandler.createFile(Ljava/lang/String;)Ljava/io/File;:230 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MockFile mockFile0 = (MockFile)TypeHandler.createFile(".vk%");
      assertTrue(mockFile0.isFile());
  }

  //Test case number: 18
  /*
   * 9 covered goals:
   * Goal 1. org.apache.commons.cli.TypeHandler.createURL(Ljava/lang/String;)Ljava/net/URL;: root-Branch
   * Goal 2. Branch org.apache.commons.cli.TypeHandler.createURL(Ljava/lang/String;)Ljava/net/URL;: root-Branch in context: org.apache.commons.cli.TypeHandler:createURL(Ljava/lang/String;)Ljava/net/URL;
   * Goal 3. createURL(Ljava/lang/String;)Ljava/net/URL;_org.evosuite.runtime.mock.java.lang.MockException_DECLARED
   * Goal 4. org.apache.commons.cli.TypeHandler.createURL(Ljava/lang/String;)Ljava/net/URL;: Line 213
   * Goal 5. org.apache.commons.cli.TypeHandler.createURL(Ljava/lang/String;)Ljava/net/URL;: Line 215
   * Goal 6. org.apache.commons.cli.TypeHandler.createURL(Ljava/lang/String;)Ljava/net/URL;: Line 217
   * Goal 7. [METHOD] org.apache.commons.cli.TypeHandler.createURL(Ljava/lang/String;)Ljava/net/URL;
   * Goal 8. Weak Mutation 24: org.apache.commons.cli.TypeHandler.createURL(Ljava/lang/String;)Ljava/net/URL;:213 - ReplaceComparisonOperator == -> !=
   * Goal 9. Weak Mutation 25: org.apache.commons.cli.TypeHandler.createURL(Ljava/lang/String;)Ljava/net/URL;:217 - ReplaceConstant - Unable to parse the URL:  -> 
   */

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      try { 
        TypeHandler.createURL("UHable to pare the UR: ");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unable to parse the URL: UHable to pare the UR: 
         //
         assertThrownBy("org.apache.commons.cli.TypeHandler", e);
      }
  }

  //Test case number: 19
  /*
   * 4 covered goals:
   * Goal 1. org.apache.commons.cli.TypeHandler.<init>()V: root-Branch
   * Goal 2. Branch org.apache.commons.cli.TypeHandler.<init>()V: root-Branch in context: org.apache.commons.cli.TypeHandler:<init>()V
   * Goal 3. [METHOD] org.apache.commons.cli.TypeHandler.<init>()V
   * Goal 4. [METHODNOEX] org.apache.commons.cli.TypeHandler.<init>()V
   */

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TypeHandler typeHandler0 = new TypeHandler();
  }

  //Test case number: 20
  /*
   * 6 covered goals:
   * Goal 1. org.apache.commons.cli.TypeHandler.createFiles(Ljava/lang/String;)[Ljava/io/File;: root-Branch
   * Goal 2. Branch org.apache.commons.cli.TypeHandler.createFiles(Ljava/lang/String;)[Ljava/io/File;: root-Branch in context: org.apache.commons.cli.TypeHandler:createFiles(Ljava/lang/String;)[Ljava/io/File;
   * Goal 3. createFiles(Ljava/lang/String;)[Ljava/io/File;_java.lang.UnsupportedOperationException_EXPLICIT
   * Goal 4. org.apache.commons.cli.TypeHandler.createFiles(Ljava/lang/String;)[Ljava/io/File;: Line 244
   * Goal 5. [METHOD] org.apache.commons.cli.TypeHandler.createFiles(Ljava/lang/String;)[Ljava/io/File;
   * Goal 6. Weak Mutation 27: org.apache.commons.cli.TypeHandler.createFiles(Ljava/lang/String;)[Ljava/io/File;:244 - ReplaceConstant - Not yet implemented -> 
   */

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      // Undeclared exception!
      try { 
        TypeHandler.createFiles("hYe>i|nby");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not yet implemented
         //
         assertThrownBy("org.apache.commons.cli.TypeHandler", e);
      }
  }

  //Test case number: 21
  /*
   * 8 covered goals:
   * Goal 1. org.apache.commons.cli.TypeHandler.createClass(Ljava/lang/String;)Ljava/lang/Class;: root-Branch
   * Goal 2. Branch org.apache.commons.cli.TypeHandler.createClass(Ljava/lang/String;)Ljava/lang/Class;: root-Branch in context: org.apache.commons.cli.TypeHandler:createClass(Ljava/lang/String;)Ljava/lang/Class;
   * Goal 3. createClass(Ljava/lang/String;)Ljava/lang/Class;_org.evosuite.runtime.mock.java.lang.MockException_DECLARED
   * Goal 4. org.apache.commons.cli.TypeHandler.createClass(Ljava/lang/String;)Ljava/lang/Class;: Line 180
   * Goal 5. org.apache.commons.cli.TypeHandler.createClass(Ljava/lang/String;)Ljava/lang/Class;: Line 182
   * Goal 6. org.apache.commons.cli.TypeHandler.createClass(Ljava/lang/String;)Ljava/lang/Class;: Line 184
   * Goal 7. [METHOD] org.apache.commons.cli.TypeHandler.createClass(Ljava/lang/String;)Ljava/lang/Class;
   * Goal 8. Weak Mutation 22: org.apache.commons.cli.TypeHandler.createClass(Ljava/lang/String;)Ljava/lang/Class;:184 - ReplaceConstant - Unable to find the class:  -> 
   */

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      try { 
        TypeHandler.createClass("M55Nxx'$!P+m5#1zOti");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unable to find the class: M55Nxx'$!P+m5#1zOti
         //
         assertThrownBy("org.apache.commons.cli.TypeHandler", e);
      }
  }

  //Test case number: 22
  /*
   * 10 covered goals:
   * Goal 1. org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;: root-Branch
   * Goal 2. org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;: I4 Branch 1 IF_ACMPNE L64 - false
   * Goal 3. Branch org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;: root-Branch in context: org.apache.commons.cli.TypeHandler:createValue(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 4. [Output]: org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;:NonNull
   * Goal 5. org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;: Line 64
   * Goal 6. org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;: Line 66
   * Goal 7. org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;: Line 49
   * Goal 8. [METHOD] org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 9. [METHODNOEX] org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 10. Weak Mutation 0: org.apache.commons.cli.TypeHandler.createValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;:64 - ReplaceComparisonOperator != -> ==
   */

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Class<String> class0 = String.class;
      String string0 = (String)TypeHandler.createValue("", (Object) class0);
      assertEquals("", string0);
  }
}
