<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="org.apache.commons.codec.binary.Base64Test" time="0.038" tests="53" errors="0" skipped="1" failures="0">
  <properties>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="sun.boot.library.path" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64"/>
    <property name="java.vm.version" value="25.131-b11"/>
    <property name="user.country.format" value="BR"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="path.separator" value=":"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="user.country" value="US"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="/home/japlima/github/SUTs4MutationTesting"/>
    <property name="java.runtime.version" value="1.8.0_131-8u131-b11-2ubuntu1.17.04.3-b11"/>
    <property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/>
    <property name="java.endorsed.dirs" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="os.name" value="Linux"/>
    <property name="maven.ext.class.path" value="/home/japlima/netbeans-8.2/java/maven-nblib/netbeans-eventspy.jar"/>
    <property name="classworlds.conf" value="/home/japlima/netbeans-8.2/java/maven/bin/m2.conf"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.class.version" value="52.0"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="os.version" value="4.10.0-26-generic"/>
    <property name="user.home" value="/home/japlima"/>
    <property name="user.timezone" value="America/Sao_Paulo"/>
    <property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/>
    <property name="java.specification.version" value="1.8"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="user.name" value="japlima"/>
    <property name="java.class.path" value="/home/japlima/netbeans-8.2/java/maven/boot/plexus-classworlds-2.4.jar"/>
    <property name="java.vm.specification.version" value="1.8"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.home" value="/usr/lib/jvm/java-8-openjdk-amd64/jre"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher -Dmaven.ext.class.path=/home/japlima/netbeans-8.2/java/maven-nblib/netbeans-eventspy.jar clean install"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="user.language" value="en"/>
    <property name="user.language.format" value="pt"/>
    <property name="awt.toolkit" value="sun.awt.X11.XToolkit"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.version" value="1.8.0_131"/>
    <property name="java.ext.dirs" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext"/>
    <property name="securerandom.source" value="file:/dev/./urandom"/>
    <property name="sun.boot.class.path" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="maven.home" value="/home/japlima/netbeans-8.2/java/maven"/>
    <property name="file.separator" value="/"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="sun.desktop" value="gnome"/>
    <property name="sun.cpu.isalist" value=""/>
  </properties>
  <testcase name="testTriplets" classname="org.apache.commons.codec.binary.Base64Test" time="0"/>
  <testcase name="testCodeIntegerEdgeCases" classname="org.apache.commons.codec.binary.Base64Test" time="0"/>
  <testcase name="testStringToByteVariations" classname="org.apache.commons.codec.binary.Base64Test" time="0.001"/>
  <testcase name="testConstructor_Int_ByteArray_Boolean_UrlSafe" classname="org.apache.commons.codec.binary.Base64Test" time="0"/>
  <testcase name="testSingletonsChunked" classname="org.apache.commons.codec.binary.Base64Test" time="0.014"/>
  <testcase name="testKnownDecodings" classname="org.apache.commons.codec.binary.Base64Test" time="0.001"/>
  <testcase name="testPairs" classname="org.apache.commons.codec.binary.Base64Test" time="0.001"/>
  <testcase name="testUUID" classname="org.apache.commons.codec.binary.Base64Test" time="0.001"/>
  <testcase name="testEncodeDecodeSmall" classname="org.apache.commons.codec.binary.Base64Test" time="0"/>
  <testcase name="testConstructors" classname="org.apache.commons.codec.binary.Base64Test" time="0.001"/>
  <testcase name="testHugeLineSeparator" classname="org.apache.commons.codec.binary.Base64Test" time="0">
    <skipped/>
  </testcase>
  <testcase name="testObjectDecodeWithValidParameter" classname="org.apache.commons.codec.binary.Base64Test" time="0"/>
  <testcase name="testCodeInteger1" classname="org.apache.commons.codec.binary.Base64Test" time="0"/>
  <testcase name="testCodeInteger2" classname="org.apache.commons.codec.binary.Base64Test" time="0"/>
  <testcase name="testCodeInteger3" classname="org.apache.commons.codec.binary.Base64Test" time="0"/>
  <testcase name="testCodeInteger4" classname="org.apache.commons.codec.binary.Base64Test" time="0"/>
  <testcase name="testObjectEncode" classname="org.apache.commons.codec.binary.Base64Test" time="0"/>
  <testcase name="testRfc2045Section6Dot8ChunkSizeDefinition" classname="org.apache.commons.codec.binary.Base64Test" time="0"/>
  <testcase name="testUrlSafe" classname="org.apache.commons.codec.binary.Base64Test" time="0.008"/>
  <testcase name="testObjectEncodeWithInvalidParameter" classname="org.apache.commons.codec.binary.Base64Test" time="0"/>
  <testcase name="testEncodeDecodeRandom" classname="org.apache.commons.codec.binary.Base64Test" time="0.005"/>
  <testcase name="testRfc2045Section2Dot1CrLfDefinition" classname="org.apache.commons.codec.binary.Base64Test" time="0"/>
  <testcase name="testDecodeWithWhitespace" classname="org.apache.commons.codec.binary.Base64Test" time="0"/>
  <testcase name="testDecodePadOnlyChunked" classname="org.apache.commons.codec.binary.Base64Test" time="0"/>
  <testcase name="testKnownEncodings" classname="org.apache.commons.codec.binary.Base64Test" time="0.001"/>
  <testcase name="testIgnoringNonBase64InDecode" classname="org.apache.commons.codec.binary.Base64Test" time="0"/>
  <testcase name="testCodec112" classname="org.apache.commons.codec.binary.Base64Test" time="0"/>
  <testcase name="testDecodePadMarkerIndex2" classname="org.apache.commons.codec.binary.Base64Test" time="0"/>
  <testcase name="testDecodePadMarkerIndex3" classname="org.apache.commons.codec.binary.Base64Test" time="0"/>
  <testcase name="testIsUrlSafe" classname="org.apache.commons.codec.binary.Base64Test" time="0"/>
  <testcase name="testEncodeOverMaxSize" classname="org.apache.commons.codec.binary.Base64Test" time="0"/>
  <testcase name="testEmptyBase64" classname="org.apache.commons.codec.binary.Base64Test" time="0"/>
  <testcase name="testSingletons" classname="org.apache.commons.codec.binary.Base64Test" time="0.001"/>
  <testcase name="testTripletsChunked" classname="org.apache.commons.codec.binary.Base64Test" time="0"/>
  <testcase name="testCodec68" classname="org.apache.commons.codec.binary.Base64Test" time="0"/>
  <testcase name="testRfc4648Section10DecodeEncode" classname="org.apache.commons.codec.binary.Base64Test" time="0.001"/>
  <testcase name="testObjectDecodeWithInvalidParameter" classname="org.apache.commons.codec.binary.Base64Test" time="0"/>
  <testcase name="testIsArrayByteBase64" classname="org.apache.commons.codec.binary.Base64Test" time="0"/>
  <testcase name="testDecodePadOnly" classname="org.apache.commons.codec.binary.Base64Test" time="0"/>
  <testcase name="testChunkedEncodeMultipleOf76" classname="org.apache.commons.codec.binary.Base64Test" time="0"/>
  <testcase name="testBase64" classname="org.apache.commons.codec.binary.Base64Test" time="0.001"/>
  <testcase name="testRfc1421Section6Dot8ChunkSizeDefinition" classname="org.apache.commons.codec.binary.Base64Test" time="0.001"/>
  <testcase name="testNonBase64Test" classname="org.apache.commons.codec.binary.Base64Test" time="0"/>
  <testcase name="testConstructor_Int_ByteArray_Boolean" classname="org.apache.commons.codec.binary.Base64Test" time="0"/>
  <testcase name="testByteToStringVariations" classname="org.apache.commons.codec.binary.Base64Test" time="0"/>
  <testcase name="testObjectEncodeWithValidParameter" classname="org.apache.commons.codec.binary.Base64Test" time="0"/>
  <testcase name="testRfc4648Section10DecodeWithCrLf" classname="org.apache.commons.codec.binary.Base64Test" time="0"/>
  <testcase name="testRfc4648Section10Decode" classname="org.apache.commons.codec.binary.Base64Test" time="0.001"/>
  <testcase name="testRfc4648Section10Encode" classname="org.apache.commons.codec.binary.Base64Test" time="0"/>
  <testcase name="testCodeIntegerNull" classname="org.apache.commons.codec.binary.Base64Test" time="0"/>
  <testcase name="testIsStringBase64" classname="org.apache.commons.codec.binary.Base64Test" time="0"/>
  <testcase name="testRfc4648Section10EncodeDecode" classname="org.apache.commons.codec.binary.Base64Test" time="0"/>
  <testcase name="testDecodeWithInnerPad" classname="org.apache.commons.codec.binary.Base64Test" time="0"/>
</testsuite>